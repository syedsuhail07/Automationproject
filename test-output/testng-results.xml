<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="10" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-17T12:51:38 IST" name="Default suite" finished-at="2025-09-17T12:52:49 IST" duration-ms="71804">
    <groups>
    </groups>
    <test started-at="2025-09-17T12:51:38 IST" name="Default test" finished-at="2025-09-17T12:52:49 IST" duration-ms="71804">
      <class name="Tests.ContactUsTests">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:51:38 IST" name="setUp" finished-at="2025-09-17T12:51:40 IST" duration-ms="1967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_001_VerifyContactUsButtonNavigation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_001_VerifyContactUsButtonNavigation()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:51:40 IST" name="TC_001_VerifyContactUsButtonNavigation" finished-at="2025-09-17T12:51:46 IST" duration-ms="6852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_001_VerifyContactUsButtonNavigation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:51:46 IST" name="tearDown" finished-at="2025-09-17T12:51:47 IST" duration-ms="627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_001_VerifyContactUsButtonNavigation status=SUCCESS method=ContactUsTests.TC_001_VerifyContactUsButtonNavigation()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:51:47 IST" name="setUp" finished-at="2025-09-17T12:51:48 IST" duration-ms="973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_002_VerifyNameFieldWithValidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_002_VerifyNameFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:51:48 IST" name="TC_002_VerifyNameFieldWithValidInput" finished-at="2025-09-17T12:51:52 IST" duration-ms="3667" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002_VerifyNameFieldWithValidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:51:52 IST" name="tearDown" finished-at="2025-09-17T12:51:52 IST" duration-ms="331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_002_VerifyNameFieldWithValidInput status=SUCCESS method=ContactUsTests.TC_002_VerifyNameFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:51:52 IST" name="setUp" finished-at="2025-09-17T12:51:53 IST" duration-ms="997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_003_VerifyNameFieldWithInvalidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_003_VerifyNameFieldWithInvalidInput()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:51:53 IST" name="TC_003_VerifyNameFieldWithInvalidInput" finished-at="2025-09-17T12:51:56 IST" duration-ms="3193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_003_VerifyNameFieldWithInvalidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:51:56 IST" name="tearDown" finished-at="2025-09-17T12:51:57 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_003_VerifyNameFieldWithInvalidInput status=SUCCESS method=ContactUsTests.TC_003_VerifyNameFieldWithInvalidInput()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:51:57 IST" name="setUp" finished-at="2025-09-17T12:51:58 IST" duration-ms="1003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_004_VerifyEmailFieldWithValidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_004_VerifyEmailFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:51:58 IST" name="TC_004_VerifyEmailFieldWithValidInput" finished-at="2025-09-17T12:52:01 IST" duration-ms="3036" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_004_VerifyEmailFieldWithValidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:01 IST" name="tearDown" finished-at="2025-09-17T12:52:01 IST" duration-ms="302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_004_VerifyEmailFieldWithValidInput status=SUCCESS method=ContactUsTests.TC_004_VerifyEmailFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:01 IST" name="setUp" finished-at="2025-09-17T12:52:02 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_005_VerifyEmailFieldWithInvalidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_005_VerifyEmailFieldWithInvalidInput()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:02 IST" name="TC_005_VerifyEmailFieldWithInvalidInput" finished-at="2025-09-17T12:52:05 IST" duration-ms="2991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_005_VerifyEmailFieldWithInvalidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:05 IST" name="tearDown" finished-at="2025-09-17T12:52:05 IST" duration-ms="423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_005_VerifyEmailFieldWithInvalidInput status=SUCCESS method=ContactUsTests.TC_005_VerifyEmailFieldWithInvalidInput()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:05 IST" name="setUp" finished-at="2025-09-17T12:52:06 IST" duration-ms="1011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_006_VerifySubjectFieldWithValidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_006_VerifySubjectFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:06 IST" name="TC_006_VerifySubjectFieldWithValidInput" finished-at="2025-09-17T12:52:09 IST" duration-ms="3094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_006_VerifySubjectFieldWithValidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:09 IST" name="tearDown" finished-at="2025-09-17T12:52:10 IST" duration-ms="354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_006_VerifySubjectFieldWithValidInput status=SUCCESS method=ContactUsTests.TC_006_VerifySubjectFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:10 IST" name="setUp" finished-at="2025-09-17T12:52:11 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_007_VerifyMessageFieldWithValidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_007_VerifyMessageFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:11 IST" name="TC_007_VerifyMessageFieldWithValidInput" finished-at="2025-09-17T12:52:14 IST" duration-ms="3197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_007_VerifyMessageFieldWithValidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:14 IST" name="tearDown" finished-at="2025-09-17T12:52:14 IST" duration-ms="363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_007_VerifyMessageFieldWithValidInput status=SUCCESS method=ContactUsTests.TC_007_VerifyMessageFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:14 IST" name="setUp" finished-at="2025-09-17T12:52:15 IST" duration-ms="991" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_008_VerifyFileAttachment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_008_VerifyFileAttachment()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:15 IST" name="TC_008_VerifyFileAttachment" finished-at="2025-09-17T12:52:18 IST" duration-ms="2443" status="FAIL">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument: File not found : C:\Users\CHAKRADHAR\OneDrive\Documents\novel-vista.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5ac09a4ad591f632181765882f866f40, sendKeysToElement {id=f.D42FD723EA5651EF1D177C17CB073E8B.d.816532D1941768A027CF5EE6F7D6A290.e.23, value=[Ljava.lang.CharSequence;@647b9364}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11674}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11674/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (5ac09a4ad591f632181765882f866f40)] -> name: upload_file]
Session ID: 5ac09a4ad591f632181765882f866f40]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument: File not found : C:\Users\CHAKRADHAR\OneDrive\Documents\novel-vista.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5ac09a4ad591f632181765882f866f40, sendKeysToElement {id=f.D42FD723EA5651EF1D177C17CB073E8B.d.816532D1941768A027CF5EE6F7D6A290.e.23, value=[Ljava.lang.CharSequence;@647b9364}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11674}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11674/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (5ac09a4ad591f632181765882f866f40)] -> name: upload_file]
Session ID: 5ac09a4ad591f632181765882f866f40
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:110)
at Tests.ContactUsTests.TC_008_VerifyFileAttachment(ContactUsTests.java:131)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_008_VerifyFileAttachment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:18 IST" name="tearDown" finished-at="2025-09-17T12:52:18 IST" duration-ms="311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_008_VerifyFileAttachment status=FAILURE method=ContactUsTests.TC_008_VerifyFileAttachment()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:18 IST" name="setUp" finished-at="2025-09-17T12:52:19 IST" duration-ms="996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_009_VerifySubscriptionWithInvalidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_009_VerifySubscriptionWithInvalidEmail()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:19 IST" name="TC_009_VerifySubscriptionWithInvalidEmail" finished-at="2025-09-17T12:52:28 IST" duration-ms="8602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_009_VerifySubscriptionWithInvalidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:28 IST" name="tearDown" finished-at="2025-09-17T12:52:28 IST" duration-ms="359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_009_VerifySubscriptionWithInvalidEmail status=SUCCESS method=ContactUsTests.TC_009_VerifySubscriptionWithInvalidEmail()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:28 IST" name="setUp" finished-at="2025-09-17T12:52:29 IST" duration-ms="989" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_010_VerifySubscriptionWithValidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_010_VerifySubscriptionWithValidEmail()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:29 IST" name="TC_010_VerifySubscriptionWithValidEmail" finished-at="2025-09-17T12:52:32 IST" duration-ms="3051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_010_VerifySubscriptionWithValidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:32 IST" name="tearDown" finished-at="2025-09-17T12:52:32 IST" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_010_VerifySubscriptionWithValidEmail status=SUCCESS method=ContactUsTests.TC_010_VerifySubscriptionWithValidEmail()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:32 IST" name="setUp" finished-at="2025-09-17T12:52:33 IST" duration-ms="980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_011_VerifySubmitButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_011_VerifySubmitButton()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:33 IST" name="TC_011_VerifySubmitButton" finished-at="2025-09-17T12:52:36 IST" duration-ms="2894" status="FAIL">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument: File not found : C:\Users\CHAKRADHAR\OneDrive\Documents\novel-vista.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ef1c692152d7095c4b2885ae1cd60c0e, sendKeysToElement {id=f.A80463C9E453AD932A497BA0DE1ED8A5.d.5B15A7BB23B2D3F5EC2F2CB87F3EA149.e.14, value=[Ljava.lang.CharSequence;@27ffd9f8}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:44374}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:44374/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ef1c692152d7095c4b2885ae1cd60c0e)] -> name: upload_file]
Session ID: ef1c692152d7095c4b2885ae1cd60c0e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument: File not found : C:\Users\CHAKRADHAR\OneDrive\Documents\novel-vista.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ef1c692152d7095c4b2885ae1cd60c0e, sendKeysToElement {id=f.A80463C9E453AD932A497BA0DE1ED8A5.d.5B15A7BB23B2D3F5EC2F2CB87F3EA149.e.14, value=[Ljava.lang.CharSequence;@27ffd9f8}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:44374}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:44374/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ef1c692152d7095c4b2885ae1cd60c0e)] -> name: upload_file]
Session ID: ef1c692152d7095c4b2885ae1cd60c0e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:110)
at Tests.ContactUsTests.TC_011_VerifySubmitButton(ContactUsTests.java:185)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_011_VerifySubmitButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:36 IST" name="tearDown" finished-at="2025-09-17T12:52:37 IST" duration-ms="334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_011_VerifySubmitButton status=FAILURE method=ContactUsTests.TC_011_VerifySubmitButton()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:37 IST" name="setUp" finished-at="2025-09-17T12:52:38 IST" duration-ms="994" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_012_VerifyHomeButtonAfterSubmit()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_012_VerifyHomeButtonAfterSubmit()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:38 IST" name="TC_012_VerifyHomeButtonAfterSubmit" finished-at="2025-09-17T12:52:40 IST" duration-ms="2880" status="FAIL">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument: File not found : C:\Users\CHAKRADHAR\OneDrive\Documents\novel-vista.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9a87adde5e7311866e2c119e8355688e, sendKeysToElement {id=f.1046D39EF8DA7CFFD7651D3FEBAFF13D.d.38175DD53C4C7EAE8080305D9307F02B.e.41, value=[Ljava.lang.CharSequence;@7ef41ca2}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:44041}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:44041/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (9a87adde5e7311866e2c119e8355688e)] -> name: upload_file]
Session ID: 9a87adde5e7311866e2c119e8355688e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument: File not found : C:\Users\CHAKRADHAR\OneDrive\Documents\novel-vista.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9a87adde5e7311866e2c119e8355688e, sendKeysToElement {id=f.1046D39EF8DA7CFFD7651D3FEBAFF13D.d.38175DD53C4C7EAE8080305D9307F02B.e.41, value=[Ljava.lang.CharSequence;@7ef41ca2}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:44041}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:44041/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (9a87adde5e7311866e2c119e8355688e)] -> name: upload_file]
Session ID: 9a87adde5e7311866e2c119e8355688e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:110)
at Tests.ContactUsTests.TC_012_VerifyHomeButtonAfterSubmit(ContactUsTests.java:204)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_012_VerifyHomeButtonAfterSubmit -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:40 IST" name="tearDown" finished-at="2025-09-17T12:52:41 IST" duration-ms="380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_012_VerifyHomeButtonAfterSubmit status=FAILURE method=ContactUsTests.TC_012_VerifyHomeButtonAfterSubmit()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:41 IST" name="setUp" finished-at="2025-09-17T12:52:42 IST" duration-ms="993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_013_VerifyScrollUpFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_013_VerifyScrollUpFunctionality()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:42 IST" name="TC_013_VerifyScrollUpFunctionality" finished-at="2025-09-17T12:52:44 IST" duration-ms="2646" status="FAIL">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class java.lang.Double cannot be cast to class java.lang.Long (java.lang.Double and java.lang.Long are in module java.base of loader 'bootstrap')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class java.lang.Double cannot be cast to class java.lang.Long (java.lang.Double and java.lang.Long are in module java.base of loader 'bootstrap')
at Tests.ContactUsTests.lambda$0(ContactUsTests.java:231)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at Tests.ContactUsTests.TC_013_VerifyScrollUpFunctionality(ContactUsTests.java:231)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_013_VerifyScrollUpFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:44 IST" name="tearDown" finished-at="2025-09-17T12:52:45 IST" duration-ms="579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_013_VerifyScrollUpFunctionality status=FAILURE method=ContactUsTests.TC_013_VerifyScrollUpFunctionality()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:45 IST" name="setUp" finished-at="2025-09-17T12:52:46 IST" duration-ms="997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_014_VerifyScrollDownFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_014_VerifyScrollDownFunctionality()[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:46 IST" name="TC_014_VerifyScrollDownFunctionality" finished-at="2025-09-17T12:52:49 IST" duration-ms="2903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_014_VerifyScrollDownFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@8297b3a]" started-at="2025-09-17T12:52:49 IST" name="tearDown" finished-at="2025-09-17T12:52:49 IST" duration-ms="435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_014_VerifyScrollDownFunctionality status=SUCCESS method=ContactUsTests.TC_014_VerifyScrollDownFunctionality()[pri:0, instance:Tests.ContactUsTests@8297b3a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.ContactUsTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
