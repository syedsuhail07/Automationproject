<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="419" passed="309" failed="104" skipped="6">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-17T13:15:06 IST" name="Suite" finished-at="2025-09-17T14:09:12 IST" duration-ms="3246473">
    <groups>
    </groups>
    <test started-at="2025-09-17T13:15:06 IST" name="Test" finished-at="2025-09-17T14:09:12 IST" duration-ms="3246473">
      <class name="Tests.ContactUsPage">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:20 IST" name="setUp" finished-at="2025-09-17T13:20:21 IST" duration-ms="978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage.verifyContactUsButtonNavigation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyContactUsButtonNavigation()[pri:1, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:21 IST" name="verifyContactUsButtonNavigation" finished-at="2025-09-17T13:20:26 IST" duration-ms="4145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactUsButtonNavigation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:26 IST" name="tearDown" finished-at="2025-09-17T13:20:26 IST" duration-ms="387" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactUsButtonNavigation status=SUCCESS method=ContactUsPage.verifyContactUsButtonNavigation()[pri:1, instance:Tests.ContactUsPage@2fb3536e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:27 IST" name="setUp" finished-at="2025-09-17T13:20:28 IST" duration-ms="968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage.verifyContactFormWithExcelData(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyContactFormWithExcelData(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:28 IST" name="verifyContactFormWithExcelData" data-provider="contactFormData" finished-at="2025-09-17T13:20:30 IST" duration-ms="2634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Venkata]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[venkata@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Query about API]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[I need help with API testing.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactFormWithExcelData -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:30 IST" name="tearDown" finished-at="2025-09-17T13:20:30 IST" duration-ms="341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactFormWithExcelData status=SUCCESS method=ContactUsPage.verifyContactFormWithExcelData(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.ContactUsPage@2fb3536e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:30 IST" name="setUp" finished-at="2025-09-17T13:20:31 IST" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage.verifyContactFormWithExcelData(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyContactFormWithExcelData(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:31 IST" name="verifyContactFormWithExcelData" data-provider="contactFormData" finished-at="2025-09-17T13:20:34 IST" duration-ms="2316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Kalyan]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[kalyan@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Bug Report]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Found a bug on the login page.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactFormWithExcelData -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:34 IST" name="tearDown" finished-at="2025-09-17T13:20:34 IST" duration-ms="354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactFormWithExcelData status=SUCCESS method=ContactUsPage.verifyContactFormWithExcelData(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.ContactUsPage@2fb3536e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:34 IST" name="setUp" finished-at="2025-09-17T13:20:35 IST" duration-ms="1021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage.verifyContactFormWithExcelData(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyContactFormWithExcelData(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:35 IST" name="verifyContactFormWithExcelData" data-provider="contactFormData" finished-at="2025-09-17T13:20:38 IST" duration-ms="3004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Ram]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ram@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[General Inquiry]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[What's the best way to get started?]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactFormWithExcelData -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:38 IST" name="tearDown" finished-at="2025-09-17T13:20:38 IST" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactFormWithExcelData status=SUCCESS method=ContactUsPage.verifyContactFormWithExcelData(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.ContactUsPage@2fb3536e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:38 IST" name="setUp" finished-at="2025-09-17T13:20:39 IST" duration-ms="963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage.verifyNameFieldWithInvalidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyNameFieldWithInvalidInput()[pri:3, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:39 IST" name="verifyNameFieldWithInvalidInput" finished-at="2025-09-17T13:20:42 IST" duration-ms="2301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNameFieldWithInvalidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:42 IST" name="tearDown" finished-at="2025-09-17T13:20:42 IST" duration-ms="360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNameFieldWithInvalidInput status=SUCCESS method=ContactUsPage.verifyNameFieldWithInvalidInput()[pri:3, instance:Tests.ContactUsPage@2fb3536e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:42 IST" name="setUp" finished-at="2025-09-17T13:20:43 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage.verifyEmailFieldWithInvalidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyEmailFieldWithInvalidInput()[pri:4, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:43 IST" name="verifyEmailFieldWithInvalidInput" finished-at="2025-09-17T13:20:46 IST" duration-ms="2560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailFieldWithInvalidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:46 IST" name="tearDown" finished-at="2025-09-17T13:20:46 IST" duration-ms="441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailFieldWithInvalidInput status=SUCCESS method=ContactUsPage.verifyEmailFieldWithInvalidInput()[pri:4, instance:Tests.ContactUsPage@2fb3536e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:46 IST" name="setUp" finished-at="2025-09-17T13:20:47 IST" duration-ms="980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage.verifyFileAttachment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFileAttachment()[pri:5, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:47 IST" name="verifyFileAttachment" finished-at="2025-09-17T13:20:52 IST" duration-ms="5018" status="FAIL">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument: File not found : C:\Users\user\OneDrive\Desktop\CGI Automation Testing\Eclipse\Automationproject\test_data\Details.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e79322b6321f650761c195ce555ebdb0, sendKeysToElement {id=f.6504A3018500DA7962D54D74170F1FCF.d.FF0599977EE525C7D90752ED0C1BB4C1.e.44, value=[Ljava.lang.CharSequence;@2202e978}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11922}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11922/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (e79322b6321f650761c195ce555ebdb0)] -> css selector: input[name='upload_file']]
Session ID: e79322b6321f650761c195ce555ebdb0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument: File not found : C:\Users\user\OneDrive\Desktop\CGI Automation Testing\Eclipse\Automationproject\test_data\Details.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e79322b6321f650761c195ce555ebdb0, sendKeysToElement {id=f.6504A3018500DA7962D54D74170F1FCF.d.FF0599977EE525C7D90752ED0C1BB4C1.e.44, value=[Ljava.lang.CharSequence;@2202e978}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11922}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11922/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (e79322b6321f650761c195ce555ebdb0)] -> css selector: input[name='upload_file']]
Session ID: e79322b6321f650761c195ce555ebdb0
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:110)
at Tests.ContactUsPage.verifyFileAttachment(ContactUsPage.java:136)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFileAttachment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:52 IST" name="tearDown" finished-at="2025-09-17T13:20:52 IST" duration-ms="322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFileAttachment status=FAILURE method=ContactUsPage.verifyFileAttachment()[pri:5, instance:Tests.ContactUsPage@2fb3536e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:52 IST" name="setUp" finished-at="2025-09-17T13:20:53 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage.verifySubscriptionWithInvalidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubscriptionWithInvalidEmail()[pri:6, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:20:53 IST" name="verifySubscriptionWithInvalidEmail" finished-at="2025-09-17T13:21:02 IST" duration-ms="8214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubscriptionWithInvalidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:21:02 IST" name="tearDown" finished-at="2025-09-17T13:21:02 IST" duration-ms="344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubscriptionWithInvalidEmail status=SUCCESS method=ContactUsPage.verifySubscriptionWithInvalidEmail()[pri:6, instance:Tests.ContactUsPage@2fb3536e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:21:02 IST" name="setUp" finished-at="2025-09-17T13:21:03 IST" duration-ms="979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage.verifySubscriptionWithValidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubscriptionWithValidEmail()[pri:7, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:21:03 IST" name="verifySubscriptionWithValidEmail" finished-at="2025-09-17T13:21:05 IST" duration-ms="2469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubscriptionWithValidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:21:05 IST" name="tearDown" finished-at="2025-09-17T13:21:06 IST" duration-ms="286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubscriptionWithValidEmail status=SUCCESS method=ContactUsPage.verifySubscriptionWithValidEmail()[pri:7, instance:Tests.ContactUsPage@2fb3536e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:21:06 IST" name="setUp" finished-at="2025-09-17T13:21:07 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage.verifyScrollUpFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUpFunctionality()[pri:8, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:21:07 IST" name="verifyScrollUpFunctionality" finished-at="2025-09-17T13:21:10 IST" duration-ms="3223" status="FAIL">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class java.lang.Double cannot be cast to class java.lang.Long (java.lang.Double and java.lang.Long are in module java.base of loader 'bootstrap')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class java.lang.Double cannot be cast to class java.lang.Long (java.lang.Double and java.lang.Long are in module java.base of loader 'bootstrap')
at Tests.ContactUsPage.lambda$0(ContactUsPage.java:215)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at Tests.ContactUsPage.verifyScrollUpFunctionality(ContactUsPage.java:215)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUpFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:21:10 IST" name="tearDown" finished-at="2025-09-17T13:21:10 IST" duration-ms="328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUpFunctionality status=FAILURE method=ContactUsPage.verifyScrollUpFunctionality()[pri:8, instance:Tests.ContactUsPage@2fb3536e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:21:10 IST" name="setUp" finished-at="2025-09-17T13:21:11 IST" duration-ms="941" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage.verifyScrollDownFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDownFunctionality()[pri:9, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:21:11 IST" name="verifyScrollDownFunctionality" finished-at="2025-09-17T13:21:13 IST" duration-ms="2323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDownFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage@2fb3536e]" started-at="2025-09-17T13:21:13 IST" name="tearDown" finished-at="2025-09-17T13:21:14 IST" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDownFunctionality status=SUCCESS method=ContactUsPage.verifyScrollDownFunctionality()[pri:9, instance:Tests.ContactUsPage@2fb3536e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.ContactUsPage -->
      <class name="Tests.UI_Home_2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:06:44 IST" name="setUp" finished-at="2025-09-17T14:06:45 IST" duration-ms="984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_2.verifyApisListButtonInCarousel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyApisListButtonInCarousel()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:06:45 IST" name="verifyApisListButtonInCarousel" finished-at="2025-09-17T14:06:52 IST" duration-ms="6755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApisListButtonInCarousel -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:06:52 IST" name="tearDown" finished-at="2025-09-17T14:06:52 IST" duration-ms="383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyApisListButtonInCarousel status=SUCCESS method=UI_Home_2.verifyApisListButtonInCarousel()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:06:52 IST" name="setUp" finished-at="2025-09-17T14:06:53 IST" duration-ms="997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_2.verifyChatSupportArrowButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyChatSupportArrowButton()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:06:53 IST" name="verifyChatSupportArrowButton" finished-at="2025-09-17T14:06:56 IST" duration-ms="2834" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":".chat-support .arrow-button"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [512d108d6ac083220b85cb62ef549ec3, findElement {using=css selector, value=.chat-support .arrow-button}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:35387}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:35387/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 512d108d6ac083220b85cb62ef549ec3]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".chat-support .arrow-button"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [512d108d6ac083220b85cb62ef549ec3, findElement {using=css selector, value=.chat-support .arrow-button}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:35387}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:35387/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 512d108d6ac083220b85cb62ef549ec3
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.UI_Home_2.verifyChatSupportArrowButton(UI_Home_2.java:71)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyChatSupportArrowButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:06:56 IST" name="tearDown" finished-at="2025-09-17T14:06:57 IST" duration-ms="360" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyChatSupportArrowButton status=FAILURE method=UI_Home_2.verifyChatSupportArrowButton()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:06:57 IST" name="setUp" finished-at="2025-09-17T14:06:57 IST" duration-ms="948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_2.verifyFunctionalityOfVideoTutorialsIconOnTestCasesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfVideoTutorialsIconOnTestCasesPage()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:06:57 IST" name="verifyFunctionalityOfVideoTutorialsIconOnTestCasesPage" finished-at="2025-09-17T14:07:04 IST" duration-ms="6400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfVideoTutorialsIconOnTestCasesPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:04 IST" name="tearDown" finished-at="2025-09-17T14:07:04 IST" duration-ms="561" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfVideoTutorialsIconOnTestCasesPage status=SUCCESS method=UI_Home_2.verifyFunctionalityOfVideoTutorialsIconOnTestCasesPage()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:04 IST" name="setUp" finished-at="2025-09-17T14:07:05 IST" duration-ms="999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_2.verifyHomepageFontStyleAndSize()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyHomepageFontStyleAndSize()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:05 IST" name="verifyHomepageFontStyleAndSize" finished-at="2025-09-17T14:07:08 IST" duration-ms="2912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHomepageFontStyleAndSize -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:08 IST" name="tearDown" finished-at="2025-09-17T14:07:09 IST" duration-ms="365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHomepageFontStyleAndSize status=SUCCESS method=UI_Home_2.verifyHomepageFontStyleAndSize()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:09 IST" name="setUp" finished-at="2025-09-17T14:07:10 IST" duration-ms="964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_2.verifyRecommendationsNextButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRecommendationsNextButton()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:10 IST" name="verifyRecommendationsNextButton" finished-at="2025-09-17T14:07:16 IST" duration-ms="6130" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Next button did not scroll recommendations! did not expect [item active] but found [item active]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Next button did not scroll recommendations! did not expect [item active] but found [item active]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1594)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2217)
at Tests.UI_Home_2.verifyRecommendationsNextButton(UI_Home_2.java:125)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRecommendationsNextButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:16 IST" name="tearDown" finished-at="2025-09-17T14:07:16 IST" duration-ms="406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRecommendationsNextButton status=FAILURE method=UI_Home_2.verifyRecommendationsNextButton()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:16 IST" name="setUp" finished-at="2025-09-17T14:07:17 IST" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_2.verifySignupLoginButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySignupLoginButton()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:17 IST" name="verifySignupLoginButton" finished-at="2025-09-17T14:07:21 IST" duration-ms="4176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignupLoginButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:21 IST" name="tearDown" finished-at="2025-09-17T14:07:22 IST" duration-ms="361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySignupLoginButton status=SUCCESS method=UI_Home_2.verifySignupLoginButton()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:22 IST" name="setUp" finished-at="2025-09-17T14:07:23 IST" duration-ms="966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_2.verifySlideShowDotButtons() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySlideShowDotButtons()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:23 IST" name="verifySlideShowDotButtons" finished-at="2025-09-17T14:07:28 IST" duration-ms="5187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySlideShowDotButtons -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:28 IST" name="tearDown" finished-at="2025-09-17T14:07:28 IST" duration-ms="366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySlideShowDotButtons status=SUCCESS method=UI_Home_2.verifySlideShowDotButtons()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:28 IST" name="setUp" finished-at="2025-09-17T14:07:29 IST" duration-ms="955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_2.verifySubscriptionWithValidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubscriptionWithValidEmail()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:29 IST" name="verifySubscriptionWithValidEmail" finished-at="2025-09-17T14:07:32 IST" duration-ms="2974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubscriptionWithValidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:32 IST" name="tearDown" finished-at="2025-09-17T14:07:33 IST" duration-ms="388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubscriptionWithValidEmail status=SUCCESS method=UI_Home_2.verifySubscriptionWithValidEmail()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:33 IST" name="setUp" finished-at="2025-09-17T14:07:34 IST" duration-ms="980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_2.verifyTestCaseButtonInCarousel()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCaseButtonInCarousel()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:34 IST" name="verifyTestCaseButtonInCarousel" finished-at="2025-09-17T14:07:38 IST" duration-ms="4394" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCaseButtonInCarousel -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:38 IST" name="tearDown" finished-at="2025-09-17T14:07:38 IST" duration-ms="451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCaseButtonInCarousel status=SUCCESS method=UI_Home_2.verifyTestCaseButtonInCarousel()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:38 IST" name="setUp" finished-at="2025-09-17T14:07:39 IST" duration-ms="951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_2.verifyViewProductRedirectsToDetailPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyViewProductRedirectsToDetailPage()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:39 IST" name="verifyViewProductRedirectsToDetailPage" finished-at="2025-09-17T14:07:44 IST" duration-ms="4771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyViewProductRedirectsToDetailPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_2@4fb3ee4e]" started-at="2025-09-17T14:07:44 IST" name="tearDown" finished-at="2025-09-17T14:07:44 IST" duration-ms="344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyViewProductRedirectsToDetailPage status=SUCCESS method=UI_Home_2.verifyViewProductRedirectsToDetailPage()[pri:0, instance:Tests.UI_Home_2@4fb3ee4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.UI_Home_2 -->
      <class name="Tests.ALLCART_UI">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:22 IST" name="setUp" finished-at="2025-09-17T13:17:23 IST" duration-ms="1030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifyBreadcrumbNavigationOnCartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBreadcrumbNavigationOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:23 IST" name="verifyBreadcrumbNavigationOnCartPage" finished-at="2025-09-17T13:17:25 IST" duration-ms="2437" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='container']/ol"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [605e707ed8e3bce63f790bbec8c471b0, findElement {using=xpath, value=//div[@class='container']/ol}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:9560}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:9560/devtool..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 605e707ed8e3bce63f790bbec8c471b0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='container']/ol"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [605e707ed8e3bce63f790bbec8c471b0, findElement {using=xpath, value=//div[@class='container']/ol}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:9560}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:9560/devtool..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 605e707ed8e3bce63f790bbec8c471b0
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.ALLCART_UI.verifyBreadcrumbNavigationOnCartPage(ALLCART_UI.java:93)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBreadcrumbNavigationOnCartPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:25 IST" name="tearDown" finished-at="2025-09-17T13:17:26 IST" duration-ms="271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBreadcrumbNavigationOnCartPage status=FAILURE method=ALLCART_UI.verifyBreadcrumbNavigationOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:26 IST" name="setUp" finished-at="2025-09-17T13:17:27 IST" duration-ms="1011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifyCartEmptyMessageAndRedirectLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCartEmptyMessageAndRedirectLink()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:27 IST" name="verifyCartEmptyMessageAndRedirectLink" finished-at="2025-09-17T13:17:29 IST" duration-ms="2310" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[contains(text(), 'Click here')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fae7f91900340812e9f15c5fd8012c97, findElement {using=xpath, value=//a[contains(text(), 'Click here')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:9608}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:9608/devtool..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fae7f91900340812e9f15c5fd8012c97]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[contains(text(), 'Click here')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fae7f91900340812e9f15c5fd8012c97, findElement {using=xpath, value=//a[contains(text(), 'Click here')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:9608}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:9608/devtool..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fae7f91900340812e9f15c5fd8012c97
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.ALLCART_UI.verifyCartEmptyMessageAndRedirectLink(ALLCART_UI.java:118)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCartEmptyMessageAndRedirectLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:29 IST" name="tearDown" finished-at="2025-09-17T13:17:29 IST" duration-ms="302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCartEmptyMessageAndRedirectLink status=FAILURE method=ALLCART_UI.verifyCartEmptyMessageAndRedirectLink()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:29 IST" name="setUp" finished-at="2025-09-17T13:17:30 IST" duration-ms="973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifyFooterCopyrightText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFooterCopyrightText()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:30 IST" name="verifyFooterCopyrightText" finished-at="2025-09-17T13:17:33 IST" duration-ms="2406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFooterCopyrightText -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:33 IST" name="tearDown" finished-at="2025-09-17T13:17:33 IST" duration-ms="286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFooterCopyrightText status=SUCCESS method=ALLCART_UI.verifyFooterCopyrightText()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:33 IST" name="setUp" finished-at="2025-09-17T13:17:34 IST" duration-ms="966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifyFunctionalityOfAPITestingIconOnCartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfAPITestingIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:34 IST" name="verifyFunctionalityOfAPITestingIconOnCartPage" finished-at="2025-09-17T13:17:39 IST" duration-ms="5495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfAPITestingIconOnCartPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:39 IST" name="tearDown" finished-at="2025-09-17T13:17:40 IST" duration-ms="365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfAPITestingIconOnCartPage status=SUCCESS method=ALLCART_UI.verifyFunctionalityOfAPITestingIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:40 IST" name="setUp" finished-at="2025-09-17T13:17:41 IST" duration-ms="924" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifyFunctionalityOfAutomationExerciseLogoOnCartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfAutomationExerciseLogoOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:41 IST" name="verifyFunctionalityOfAutomationExerciseLogoOnCartPage" finished-at="2025-09-17T13:17:47 IST" duration-ms="6033" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfAutomationExerciseLogoOnCartPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:47 IST" name="tearDown" finished-at="2025-09-17T13:17:47 IST" duration-ms="444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfAutomationExerciseLogoOnCartPage status=SUCCESS method=ALLCART_UI.verifyFunctionalityOfAutomationExerciseLogoOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:47 IST" name="setUp" finished-at="2025-09-17T13:17:48 IST" duration-ms="1013" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifyFunctionalityOfCartIconOnCartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfCartIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:48 IST" name="verifyFunctionalityOfCartIconOnCartPage" finished-at="2025-09-17T13:17:51 IST" duration-ms="3396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfCartIconOnCartPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:51 IST" name="tearDown" finished-at="2025-09-17T13:17:52 IST" duration-ms="395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfCartIconOnCartPage status=SUCCESS method=ALLCART_UI.verifyFunctionalityOfCartIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:52 IST" name="setUp" finished-at="2025-09-17T13:17:53 IST" duration-ms="1071" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifyFunctionalityOfContactUsIconOnCartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfContactUsIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:53 IST" name="verifyFunctionalityOfContactUsIconOnCartPage" finished-at="2025-09-17T13:17:59 IST" duration-ms="5632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfContactUsIconOnCartPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:59 IST" name="tearDown" finished-at="2025-09-17T13:17:59 IST" duration-ms="426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfContactUsIconOnCartPage status=SUCCESS method=ALLCART_UI.verifyFunctionalityOfContactUsIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:17:59 IST" name="setUp" finished-at="2025-09-17T13:18:00 IST" duration-ms="1209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifyFunctionalityOfHomeIconOnCartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfHomeIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:00 IST" name="verifyFunctionalityOfHomeIconOnCartPage" finished-at="2025-09-17T13:18:08 IST" duration-ms="7611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfHomeIconOnCartPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:08 IST" name="tearDown" finished-at="2025-09-17T13:18:08 IST" duration-ms="435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfHomeIconOnCartPage status=SUCCESS method=ALLCART_UI.verifyFunctionalityOfHomeIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:08 IST" name="setUp" finished-at="2025-09-17T13:18:09 IST" duration-ms="999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifyFunctionalityOfLoginIconOnCartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfLoginIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:09 IST" name="verifyFunctionalityOfLoginIconOnCartPage" finished-at="2025-09-17T13:18:15 IST" duration-ms="5884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfLoginIconOnCartPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:15 IST" name="tearDown" finished-at="2025-09-17T13:18:15 IST" duration-ms="341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfLoginIconOnCartPage status=SUCCESS method=ALLCART_UI.verifyFunctionalityOfLoginIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:15 IST" name="setUp" finished-at="2025-09-17T13:18:16 IST" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifyFunctionalityOfProductsIconOnCartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfProductsIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:16 IST" name="verifyFunctionalityOfProductsIconOnCartPage" finished-at="2025-09-17T13:18:22 IST" duration-ms="5864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfProductsIconOnCartPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:22 IST" name="tearDown" finished-at="2025-09-17T13:18:23 IST" duration-ms="417" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfProductsIconOnCartPage status=SUCCESS method=ALLCART_UI.verifyFunctionalityOfProductsIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:23 IST" name="setUp" finished-at="2025-09-17T13:18:24 IST" duration-ms="1003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifyFunctionalityOfTestCasesIconOnCartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfTestCasesIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:24 IST" name="verifyFunctionalityOfTestCasesIconOnCartPage" finished-at="2025-09-17T13:18:30 IST" duration-ms="6332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfTestCasesIconOnCartPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:30 IST" name="tearDown" finished-at="2025-09-17T13:18:30 IST" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfTestCasesIconOnCartPage status=SUCCESS method=ALLCART_UI.verifyFunctionalityOfTestCasesIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:30 IST" name="setUp" finished-at="2025-09-17T13:18:31 IST" duration-ms="996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifyFunctionalityOfVideoTutorialsIconOnCartPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfVideoTutorialsIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:31 IST" name="verifyFunctionalityOfVideoTutorialsIconOnCartPage" finished-at="2025-09-17T13:18:37 IST" duration-ms="5995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfVideoTutorialsIconOnCartPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:37 IST" name="tearDown" finished-at="2025-09-17T13:18:38 IST" duration-ms="499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfVideoTutorialsIconOnCartPage status=SUCCESS method=ALLCART_UI.verifyFunctionalityOfVideoTutorialsIconOnCartPage()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:38 IST" name="setUp" finished-at="2025-09-17T13:18:39 IST" duration-ms="969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifySubscriptionInputFieldAndButtonVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubscriptionInputFieldAndButtonVisibility()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:39 IST" name="verifySubscriptionInputFieldAndButtonVisibility" finished-at="2025-09-17T13:18:51 IST" duration-ms="11920" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.id: subscribe_email (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:10525}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:10525/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 531b241c154086a2e57f2803e00d8b41]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.id: subscribe_email (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:10525}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:10525/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 531b241c154086a2e57f2803e00d8b41
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at Tests.ALLCART_UI.verifySubscriptionInputFieldAndButtonVisibility(ALLCART_UI.java:135)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubscriptionInputFieldAndButtonVisibility -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:51 IST" name="tearDown" finished-at="2025-09-17T13:18:51 IST" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubscriptionInputFieldAndButtonVisibility status=FAILURE method=ALLCART_UI.verifySubscriptionInputFieldAndButtonVisibility()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:51 IST" name="setUp" finished-at="2025-09-17T13:18:52 IST" duration-ms="999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifySubscriptionNoteText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubscriptionNoteText()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:52 IST" name="verifySubscriptionNoteText" finished-at="2025-09-17T13:18:54 IST" duration-ms="1916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubscriptionNoteText -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:54 IST" name="tearDown" finished-at="2025-09-17T13:18:54 IST" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubscriptionNoteText status=SUCCESS method=ALLCART_UI.verifySubscriptionNoteText()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:54 IST" name="setUp" finished-at="2025-09-17T13:18:55 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ALLCART_UI.verifySubscriptionPlaceholderText()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubscriptionPlaceholderText()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:55 IST" name="verifySubscriptionPlaceholderText" finished-at="2025-09-17T13:18:58 IST" duration-ms="2490" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Subscription placeholder text is incorrect. Found: Your email address expected [Your email here] but found [Your email address]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Subscription placeholder text is incorrect. Found: Your email address expected [Your email here] but found [Your email address]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at Tests.ALLCART_UI.verifySubscriptionPlaceholderText(ALLCART_UI.java:163)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubscriptionPlaceholderText -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ALLCART_UI@56cdfb3b]" started-at="2025-09-17T13:18:58 IST" name="tearDown" finished-at="2025-09-17T13:18:58 IST" duration-ms="268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubscriptionPlaceholderText status=FAILURE method=ALLCART_UI.verifySubscriptionPlaceholderText()[pri:0, instance:Tests.ALLCART_UI@56cdfb3b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.ALLCART_UI -->
      <class name="Tests.ContactUs_UI_2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:07:44 IST" name="setUp" finished-at="2025-09-17T14:07:45 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyChooseFileFieldIsAcceptingInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyChooseFileFieldIsAcceptingInput()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:07:45 IST" name="verifyChooseFileFieldIsAcceptingInput" finished-at="2025-09-17T14:07:48 IST" duration-ms="2419" status="FAIL">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument: File not found : /Users/venkatakalyan/Downloads/Media.jpeg
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b48b35adfdf373b0d79460ef5747ac59, sendKeysToElement {id=f.05725E6550E26D58889167EBF6F1AB86.d.12BC127C27E5367FEEA3BB85585AB6EA.e.35, value=[Ljava.lang.CharSequence;@63db7ed2}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:35856}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:35856/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (b48b35adfdf373b0d79460ef5747ac59)] -> name: upload_file]
Session ID: b48b35adfdf373b0d79460ef5747ac59]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument: File not found : /Users/venkatakalyan/Downloads/Media.jpeg
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b48b35adfdf373b0d79460ef5747ac59, sendKeysToElement {id=f.05725E6550E26D58889167EBF6F1AB86.d.12BC127C27E5367FEEA3BB85585AB6EA.e.35, value=[Ljava.lang.CharSequence;@63db7ed2}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:35856}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:35856/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (b48b35adfdf373b0d79460ef5747ac59)] -> name: upload_file]
Session ID: b48b35adfdf373b0d79460ef5747ac59
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:110)
at Tests.ContactUs_UI_2.verifyChooseFileFieldIsAcceptingInput(ContactUs_UI_2.java:191)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyChooseFileFieldIsAcceptingInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:07:48 IST" name="tearDown" finished-at="2025-09-17T14:07:48 IST" duration-ms="307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyChooseFileFieldIsAcceptingInput status=FAILURE method=ContactUs_UI_2.verifyChooseFileFieldIsAcceptingInput()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:07:48 IST" name="setUp" finished-at="2025-09-17T14:07:49 IST" duration-ms="961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyChooseFileFieldIsPresentAndInCorrectPosition()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyChooseFileFieldIsPresentAndInCorrectPosition()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:07:49 IST" name="verifyChooseFileFieldIsPresentAndInCorrectPosition" finished-at="2025-09-17T14:07:51 IST" duration-ms="2349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyChooseFileFieldIsPresentAndInCorrectPosition -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:07:51 IST" name="tearDown" finished-at="2025-09-17T14:07:52 IST" duration-ms="325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyChooseFileFieldIsPresentAndInCorrectPosition status=SUCCESS method=ContactUs_UI_2.verifyChooseFileFieldIsPresentAndInCorrectPosition()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:07:52 IST" name="setUp" finished-at="2025-09-17T14:07:53 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyContentsUnderFeedbackForUsTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyContentsUnderFeedbackForUsTitle()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:07:53 IST" name="verifyContentsUnderFeedbackForUsTitle" finished-at="2025-09-17T14:07:55 IST" duration-ms="2496" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='col-sm-4 col-sm-offset-1']//p[contains(text(), 'This is a simple contact form')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4d26be5c28e5858ed8732a8f87fb7b44, findElement {using=xpath, value=//div[@class='col-sm-4 col-sm-offset-1']//p[contains(text(), 'This is a simple contact form')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:35939}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:35939/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4d26be5c28e5858ed8732a8f87fb7b44]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='col-sm-4 col-sm-offset-1']//p[contains(text(), 'This is a simple contact form')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4d26be5c28e5858ed8732a8f87fb7b44, findElement {using=xpath, value=//div[@class='col-sm-4 col-sm-offset-1']//p[contains(text(), 'This is a simple contact form')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:35939}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:35939/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4d26be5c28e5858ed8732a8f87fb7b44
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.ContactUs_UI_2.verifyContentsUnderFeedbackForUsTitle(ContactUs_UI_2.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContentsUnderFeedbackForUsTitle -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:07:55 IST" name="tearDown" finished-at="2025-09-17T14:07:56 IST" duration-ms="300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContentsUnderFeedbackForUsTitle status=FAILURE method=ContactUs_UI_2.verifyContentsUnderFeedbackForUsTitle()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:07:56 IST" name="setUp" finished-at="2025-09-17T14:07:57 IST" duration-ms="977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyEmailFieldIsAcceptingInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyEmailFieldIsAcceptingInput()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:07:57 IST" name="verifyEmailFieldIsAcceptingInput" finished-at="2025-09-17T14:08:00 IST" duration-ms="3108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailFieldIsAcceptingInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:00 IST" name="tearDown" finished-at="2025-09-17T14:08:00 IST" duration-ms="376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailFieldIsAcceptingInput status=SUCCESS method=ContactUs_UI_2.verifyEmailFieldIsAcceptingInput()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:00 IST" name="setUp" finished-at="2025-09-17T14:08:01 IST" duration-ms="1004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyEmailFieldIsPresentAndInCorrectPosition()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyEmailFieldIsPresentAndInCorrectPosition()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:01 IST" name="verifyEmailFieldIsPresentAndInCorrectPosition" finished-at="2025-09-17T14:08:04 IST" duration-ms="3193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailFieldIsPresentAndInCorrectPosition -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:04 IST" name="tearDown" finished-at="2025-09-17T14:08:05 IST" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailFieldIsPresentAndInCorrectPosition status=SUCCESS method=ContactUs_UI_2.verifyEmailFieldIsPresentAndInCorrectPosition()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:05 IST" name="setUp" finished-at="2025-09-17T14:08:05 IST" duration-ms="968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyEmailIdURLForFeedback()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyEmailIdURLForFeedback()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:05 IST" name="verifyEmailIdURLForFeedback" finished-at="2025-09-17T14:08:08 IST" duration-ms="2730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailIdURLForFeedback -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:08 IST" name="tearDown" finished-at="2025-09-17T14:08:09 IST" duration-ms="345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailIdURLForFeedback status=SUCCESS method=ContactUs_UI_2.verifyEmailIdURLForFeedback()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:09 IST" name="setUp" finished-at="2025-09-17T14:08:10 IST" duration-ms="973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyFeedbackForUsFontSizeIsCorrect()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFeedbackForUsFontSizeIsCorrect()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:10 IST" name="verifyFeedbackForUsFontSizeIsCorrect" finished-at="2025-09-17T14:08:12 IST" duration-ms="2338" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(), 'Feedback for us')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f9658cf2d238a08f897a4e0a4cea6435, findElement {using=xpath, value=//h2[contains(text(), 'Feedback for us')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:36124}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:36124/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f9658cf2d238a08f897a4e0a4cea6435]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(), 'Feedback for us')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [f9658cf2d238a08f897a4e0a4cea6435, findElement {using=xpath, value=//h2[contains(text(), 'Feedback for us')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:36124}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:36124/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: f9658cf2d238a08f897a4e0a4cea6435
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.ContactUs_UI_2.verifyFeedbackForUsFontSizeIsCorrect(ContactUs_UI_2.java:281)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFeedbackForUsFontSizeIsCorrect -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:12 IST" name="tearDown" finished-at="2025-09-17T14:08:12 IST" duration-ms="309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFeedbackForUsFontSizeIsCorrect status=FAILURE method=ContactUs_UI_2.verifyFeedbackForUsFontSizeIsCorrect()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:12 IST" name="setUp" finished-at="2025-09-17T14:08:13 IST" duration-ms="964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyFeedbackForUsFontStyleIsCorrect()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFeedbackForUsFontStyleIsCorrect()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:13 IST" name="verifyFeedbackForUsFontStyleIsCorrect" finished-at="2025-09-17T14:08:16 IST" duration-ms="2404" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(), 'Feedback for us')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d89c924ea3ae9ee7a381571211e2d0c7, findElement {using=xpath, value=//h2[contains(text(), 'Feedback for us')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:36165}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:36165/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d89c924ea3ae9ee7a381571211e2d0c7]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(), 'Feedback for us')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d89c924ea3ae9ee7a381571211e2d0c7, findElement {using=xpath, value=//h2[contains(text(), 'Feedback for us')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:36165}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:36165/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d89c924ea3ae9ee7a381571211e2d0c7
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.ContactUs_UI_2.verifyFeedbackForUsFontStyleIsCorrect(ContactUs_UI_2.java:264)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFeedbackForUsFontStyleIsCorrect -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:16 IST" name="tearDown" finished-at="2025-09-17T14:08:16 IST" duration-ms="311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFeedbackForUsFontStyleIsCorrect status=FAILURE method=ContactUs_UI_2.verifyFeedbackForUsFontStyleIsCorrect()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:16 IST" name="setUp" finished-at="2025-09-17T14:08:17 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyFeedbackForUsTitleIsPresent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFeedbackForUsTitleIsPresent()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:17 IST" name="verifyFeedbackForUsTitleIsPresent" finished-at="2025-09-17T14:08:29 IST" duration-ms="12069" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.xpath: //h2[contains(text(), 'Feedback for us')] (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:36202}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:36202/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: de6600bd96e8384784826adaa8827ad2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //h2[contains(text(), 'Feedback for us')] (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:36202}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:36202/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: de6600bd96e8384784826adaa8827ad2
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at Tests.ContactUs_UI_2.verifyFeedbackForUsTitleIsPresent(ContactUs_UI_2.java:236)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFeedbackForUsTitleIsPresent -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:29 IST" name="tearDown" finished-at="2025-09-17T14:08:29 IST" duration-ms="303" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFeedbackForUsTitleIsPresent status=FAILURE method=ContactUs_UI_2.verifyFeedbackForUsTitleIsPresent()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:29 IST" name="setUp" finished-at="2025-09-17T14:08:30 IST" duration-ms="999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyFunctionalityOfScrollToTopButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfScrollToTopButton()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:30 IST" name="verifyFunctionalityOfScrollToTopButton" finished-at="2025-09-17T14:08:35 IST" duration-ms="4478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfScrollToTopButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:35 IST" name="tearDown" finished-at="2025-09-17T14:08:35 IST" duration-ms="339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfScrollToTopButton status=SUCCESS method=ContactUs_UI_2.verifyFunctionalityOfScrollToTopButton()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:35 IST" name="setUp" finished-at="2025-09-17T14:08:36 IST" duration-ms="952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyNameFieldIsAcceptingInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyNameFieldIsAcceptingInput()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:36 IST" name="verifyNameFieldIsAcceptingInput" finished-at="2025-09-17T14:08:39 IST" duration-ms="2619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNameFieldIsAcceptingInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:39 IST" name="tearDown" finished-at="2025-09-17T14:08:39 IST" duration-ms="322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNameFieldIsAcceptingInput status=SUCCESS method=ContactUs_UI_2.verifyNameFieldIsAcceptingInput()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:39 IST" name="setUp" finished-at="2025-09-17T14:08:40 IST" duration-ms="950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyNameFieldIsPresentAndInCorrectPosition()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyNameFieldIsPresentAndInCorrectPosition()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:40 IST" name="verifyNameFieldIsPresentAndInCorrectPosition" finished-at="2025-09-17T14:08:42 IST" duration-ms="2387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNameFieldIsPresentAndInCorrectPosition -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:42 IST" name="tearDown" finished-at="2025-09-17T14:08:43 IST" duration-ms="290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNameFieldIsPresentAndInCorrectPosition status=SUCCESS method=ContactUs_UI_2.verifyNameFieldIsPresentAndInCorrectPosition()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:43 IST" name="setUp" finished-at="2025-09-17T14:08:43 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifySubjectFieldIsAcceptingInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubjectFieldIsAcceptingInput()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:43 IST" name="verifySubjectFieldIsAcceptingInput" finished-at="2025-09-17T14:08:45 IST" duration-ms="1959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubjectFieldIsAcceptingInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:45 IST" name="tearDown" finished-at="2025-09-17T14:08:46 IST" duration-ms="343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubjectFieldIsAcceptingInput status=SUCCESS method=ContactUs_UI_2.verifySubjectFieldIsAcceptingInput()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:46 IST" name="setUp" finished-at="2025-09-17T14:08:47 IST" duration-ms="962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifySubjectFieldIsPresentAndInCorrectPosition()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubjectFieldIsPresentAndInCorrectPosition()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:47 IST" name="verifySubjectFieldIsPresentAndInCorrectPosition" finished-at="2025-09-17T14:08:49 IST" duration-ms="2222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubjectFieldIsPresentAndInCorrectPosition -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:49 IST" name="tearDown" finished-at="2025-09-17T14:08:49 IST" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubjectFieldIsPresentAndInCorrectPosition status=SUCCESS method=ContactUs_UI_2.verifySubjectFieldIsPresentAndInCorrectPosition()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:49 IST" name="setUp" finished-at="2025-09-17T14:08:50 IST" duration-ms="958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifySubmitButtonIsPresentAndInCorrectPosition()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubmitButtonIsPresentAndInCorrectPosition()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:50 IST" name="verifySubmitButtonIsPresentAndInCorrectPosition" finished-at="2025-09-17T14:08:53 IST" duration-ms="2289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubmitButtonIsPresentAndInCorrectPosition -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:53 IST" name="tearDown" finished-at="2025-09-17T14:08:53 IST" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubmitButtonIsPresentAndInCorrectPosition status=SUCCESS method=ContactUs_UI_2.verifySubmitButtonIsPresentAndInCorrectPosition()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:53 IST" name="setUp" finished-at="2025-09-17T14:08:54 IST" duration-ms="1047" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifySubmitButtonIsWorkingProperly()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubmitButtonIsWorkingProperly()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:54 IST" name="verifySubmitButtonIsWorkingProperly" finished-at="2025-09-17T14:08:57 IST" duration-ms="2961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubmitButtonIsWorkingProperly -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:57 IST" name="tearDown" finished-at="2025-09-17T14:08:57 IST" duration-ms="409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubmitButtonIsWorkingProperly status=SUCCESS method=ContactUs_UI_2.verifySubmitButtonIsWorkingProperly()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:57 IST" name="setUp" finished-at="2025-09-17T14:08:58 IST" duration-ms="961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifySubscriptionButtonIsWorking()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubscriptionButtonIsWorking()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:08:58 IST" name="verifySubscriptionButtonIsWorking" finished-at="2025-09-17T14:09:01 IST" duration-ms="2445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubscriptionButtonIsWorking -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:09:01 IST" name="tearDown" finished-at="2025-09-17T14:09:01 IST" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubscriptionButtonIsWorking status=SUCCESS method=ContactUs_UI_2.verifySubscriptionButtonIsWorking()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:09:01 IST" name="setUp" finished-at="2025-09-17T14:09:02 IST" duration-ms="960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifySubscriptionFieldIsAcceptingInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubscriptionFieldIsAcceptingInput()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:09:02 IST" name="verifySubscriptionFieldIsAcceptingInput" finished-at="2025-09-17T14:09:04 IST" duration-ms="2446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubscriptionFieldIsAcceptingInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:09:04 IST" name="tearDown" finished-at="2025-09-17T14:09:05 IST" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubscriptionFieldIsAcceptingInput status=SUCCESS method=ContactUs_UI_2.verifySubscriptionFieldIsAcceptingInput()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:09:05 IST" name="setUp" finished-at="2025-09-17T14:09:06 IST" duration-ms="986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyYourMessageFieldIsAcceptingInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyYourMessageFieldIsAcceptingInput()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:09:06 IST" name="verifyYourMessageFieldIsAcceptingInput" finished-at="2025-09-17T14:09:08 IST" duration-ms="2531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyYourMessageFieldIsAcceptingInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:09:08 IST" name="tearDown" finished-at="2025-09-17T14:09:09 IST" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyYourMessageFieldIsAcceptingInput status=SUCCESS method=ContactUs_UI_2.verifyYourMessageFieldIsAcceptingInput()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:09:09 IST" name="setUp" finished-at="2025-09-17T14:09:10 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUs_UI_2.verifyYourMessageFieldIsPresentAndInCorrectPosition()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyYourMessageFieldIsPresentAndInCorrectPosition()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:09:10 IST" name="verifyYourMessageFieldIsPresentAndInCorrectPosition" finished-at="2025-09-17T14:09:12 IST" duration-ms="2504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyYourMessageFieldIsPresentAndInCorrectPosition -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2]" started-at="2025-09-17T14:09:12 IST" name="tearDown" finished-at="2025-09-17T14:09:12 IST" duration-ms="329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyYourMessageFieldIsPresentAndInCorrectPosition status=SUCCESS method=ContactUs_UI_2.verifyYourMessageFieldIsPresentAndInCorrectPosition()[pri:0, instance:Tests.ContactUs_UI_2@5d7148e2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.ContactUs_UI_2 -->
      <class name="Tests.ContactUsPage_UI_1">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:11 IST" name="setUp" finished-at="2025-09-17T13:23:12 IST" duration-ms="968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyContactUsTitleOnPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyContactUsTitleOnPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:12 IST" name="verifyContactUsTitleOnPage" finished-at="2025-09-17T13:23:15 IST" duration-ms="2472" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactUsTitleOnPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:15 IST" name="tearDown" finished-at="2025-09-17T13:23:15 IST" duration-ms="266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactUsTitleOnPage status=SUCCESS method=ContactUsPage_UI_1.verifyContactUsTitleOnPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:15 IST" name="setUp" finished-at="2025-09-17T13:23:16 IST" duration-ms="1024" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyDeclarationAtEndOfContactUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyDeclarationAtEndOfContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:16 IST" name="verifyDeclarationAtEndOfContactUsPage" finished-at="2025-09-17T13:23:18 IST" duration-ms="2322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeclarationAtEndOfContactUsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:18 IST" name="tearDown" finished-at="2025-09-17T13:23:18 IST" duration-ms="282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeclarationAtEndOfContactUsPage status=SUCCESS method=ContactUsPage_UI_1.verifyDeclarationAtEndOfContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:18 IST" name="setUp" finished-at="2025-09-17T13:23:19 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyFontSizeOnContactUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFontSizeOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:19 IST" name="verifyFontSizeOnContactUsPage" finished-at="2025-09-17T13:23:22 IST" duration-ms="2372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFontSizeOnContactUsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:22 IST" name="tearDown" finished-at="2025-09-17T13:23:22 IST" duration-ms="279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFontSizeOnContactUsPage status=SUCCESS method=ContactUsPage_UI_1.verifyFontSizeOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:22 IST" name="setUp" finished-at="2025-09-17T13:23:23 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyFontStyleOnContactUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFontStyleOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:23 IST" name="verifyFontStyleOnContactUsPage" finished-at="2025-09-17T13:23:25 IST" duration-ms="2326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFontStyleOnContactUsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:25 IST" name="tearDown" finished-at="2025-09-17T13:23:26 IST" duration-ms="298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFontStyleOnContactUsPage status=SUCCESS method=ContactUsPage_UI_1.verifyFontStyleOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:26 IST" name="setUp" finished-at="2025-09-17T13:23:27 IST" duration-ms="1005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyFunctionalityOfAPITestingIconOnContactUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfAPITestingIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:27 IST" name="verifyFunctionalityOfAPITestingIconOnContactUsPage" finished-at="2025-09-17T13:23:33 IST" duration-ms="6017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfAPITestingIconOnContactUsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:33 IST" name="tearDown" finished-at="2025-09-17T13:23:33 IST" duration-ms="325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfAPITestingIconOnContactUsPage status=SUCCESS method=ContactUsPage_UI_1.verifyFunctionalityOfAPITestingIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:33 IST" name="setUp" finished-at="2025-09-17T13:23:34 IST" duration-ms="969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyFunctionalityOfAutomationExerciseLogoOnContactUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfAutomationExerciseLogoOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:34 IST" name="verifyFunctionalityOfAutomationExerciseLogoOnContactUsPage" finished-at="2025-09-17T13:23:38 IST" duration-ms="4354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfAutomationExerciseLogoOnContactUsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:38 IST" name="tearDown" finished-at="2025-09-17T13:23:39 IST" duration-ms="425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfAutomationExerciseLogoOnContactUsPage status=SUCCESS method=ContactUsPage_UI_1.verifyFunctionalityOfAutomationExerciseLogoOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:39 IST" name="setUp" finished-at="2025-09-17T13:23:40 IST" duration-ms="979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyFunctionalityOfCartIconOnContactUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfCartIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:40 IST" name="verifyFunctionalityOfCartIconOnContactUsPage" finished-at="2025-09-17T13:23:43 IST" duration-ms="3059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfCartIconOnContactUsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:43 IST" name="tearDown" finished-at="2025-09-17T13:23:43 IST" duration-ms="290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfCartIconOnContactUsPage status=SUCCESS method=ContactUsPage_UI_1.verifyFunctionalityOfCartIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:43 IST" name="setUp" finished-at="2025-09-17T13:23:44 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyFunctionalityOfContactUsIconOnContactUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfContactUsIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:44 IST" name="verifyFunctionalityOfContactUsIconOnContactUsPage" finished-at="2025-09-17T13:23:47 IST" duration-ms="3307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfContactUsIconOnContactUsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:47 IST" name="tearDown" finished-at="2025-09-17T13:23:48 IST" duration-ms="308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfContactUsIconOnContactUsPage status=SUCCESS method=ContactUsPage_UI_1.verifyFunctionalityOfContactUsIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:48 IST" name="setUp" finished-at="2025-09-17T13:23:49 IST" duration-ms="1017" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyFunctionalityOfHomeIconOnContactUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfHomeIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:49 IST" name="verifyFunctionalityOfHomeIconOnContactUsPage" finished-at="2025-09-17T13:23:55 IST" duration-ms="5781" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfHomeIconOnContactUsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:55 IST" name="tearDown" finished-at="2025-09-17T13:23:55 IST" duration-ms="430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfHomeIconOnContactUsPage status=SUCCESS method=ContactUsPage_UI_1.verifyFunctionalityOfHomeIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:55 IST" name="setUp" finished-at="2025-09-17T13:23:56 IST" duration-ms="982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyFunctionalityOfLoginIconOnContactUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfLoginIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:23:56 IST" name="verifyFunctionalityOfLoginIconOnContactUsPage" finished-at="2025-09-17T13:24:02 IST" duration-ms="5794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfLoginIconOnContactUsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:02 IST" name="tearDown" finished-at="2025-09-17T13:24:02 IST" duration-ms="383" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfLoginIconOnContactUsPage status=SUCCESS method=ContactUsPage_UI_1.verifyFunctionalityOfLoginIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:02 IST" name="setUp" finished-at="2025-09-17T13:24:03 IST" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyFunctionalityOfProductsIconOnContactUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfProductsIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:03 IST" name="verifyFunctionalityOfProductsIconOnContactUsPage" finished-at="2025-09-17T13:24:09 IST" duration-ms="6032" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfProductsIconOnContactUsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:09 IST" name="tearDown" finished-at="2025-09-17T13:24:10 IST" duration-ms="367" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfProductsIconOnContactUsPage status=SUCCESS method=ContactUsPage_UI_1.verifyFunctionalityOfProductsIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:10 IST" name="setUp" finished-at="2025-09-17T13:24:11 IST" duration-ms="1031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyFunctionalityOfTestCasesIconOnContactUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfTestCasesIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:11 IST" name="verifyFunctionalityOfTestCasesIconOnContactUsPage" finished-at="2025-09-17T13:24:17 IST" duration-ms="6038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfTestCasesIconOnContactUsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:17 IST" name="tearDown" finished-at="2025-09-17T13:24:17 IST" duration-ms="346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfTestCasesIconOnContactUsPage status=SUCCESS method=ContactUsPage_UI_1.verifyFunctionalityOfTestCasesIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:17 IST" name="setUp" finished-at="2025-09-17T13:24:18 IST" duration-ms="998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyFunctionalityOfVideoTutorialsIconOnContactUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfVideoTutorialsIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:18 IST" name="verifyFunctionalityOfVideoTutorialsIconOnContactUsPage" finished-at="2025-09-17T13:24:24 IST" duration-ms="5953" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfVideoTutorialsIconOnContactUsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:24 IST" name="tearDown" finished-at="2025-09-17T13:24:24 IST" duration-ms="515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfVideoTutorialsIconOnContactUsPage status=SUCCESS method=ContactUsPage_UI_1.verifyFunctionalityOfVideoTutorialsIconOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:24 IST" name="setUp" finished-at="2025-09-17T13:24:25 IST" duration-ms="952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyNoteSectionDisplayOnContactUsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyNoteSectionDisplayOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:25 IST" name="verifyNoteSectionDisplayOnContactUsPage" finished-at="2025-09-17T13:24:27 IST" duration-ms="1708" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h4[contains(text(), 'Note:')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [110a839167654bdffa5b45e4e7687820, findElement {using=xpath, value=//h4[contains(text(), 'Note:')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:14092}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:14092/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 110a839167654bdffa5b45e4e7687820]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h4[contains(text(), 'Note:')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [110a839167654bdffa5b45e4e7687820, findElement {using=xpath, value=//h4[contains(text(), 'Note:')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:14092}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:14092/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 110a839167654bdffa5b45e4e7687820
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.ContactUsPage_UI_1.verifyNoteSectionDisplayOnContactUsPage(ContactUsPage_UI_1.java:420)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNoteSectionDisplayOnContactUsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:27 IST" name="tearDown" finished-at="2025-09-17T13:24:27 IST" duration-ms="275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNoteSectionDisplayOnContactUsPage status=FAILURE method=ContactUsPage_UI_1.verifyNoteSectionDisplayOnContactUsPage()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:27 IST" name="setUp" finished-at="2025-09-17T13:24:28 IST" duration-ms="979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyScrollDownFeatureUsingKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDownFeatureUsingKeyboard()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:28 IST" name="verifyScrollDownFeatureUsingKeyboard" finished-at="2025-09-17T13:24:31 IST" duration-ms="2296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDownFeatureUsingKeyboard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:31 IST" name="tearDown" finished-at="2025-09-17T13:24:31 IST" duration-ms="305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDownFeatureUsingKeyboard status=SUCCESS method=ContactUsPage_UI_1.verifyScrollDownFeatureUsingKeyboard()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:31 IST" name="setUp" finished-at="2025-09-17T13:24:32 IST" duration-ms="998" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyScrollDownFeatureUsingMouseClick()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDownFeatureUsingMouseClick()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:32 IST" name="verifyScrollDownFeatureUsingMouseClick" finished-at="2025-09-17T13:24:35 IST" duration-ms="3420" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDownFeatureUsingMouseClick -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:35 IST" name="tearDown" finished-at="2025-09-17T13:24:36 IST" duration-ms="306" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDownFeatureUsingMouseClick status=SUCCESS method=ContactUsPage_UI_1.verifyScrollDownFeatureUsingMouseClick()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:36 IST" name="setUp" finished-at="2025-09-17T13:24:37 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyScrollDownFeatureUsingMouseScroll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDownFeatureUsingMouseScroll()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:37 IST" name="verifyScrollDownFeatureUsingMouseScroll" finished-at="2025-09-17T13:24:39 IST" duration-ms="2373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDownFeatureUsingMouseScroll -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:39 IST" name="tearDown" finished-at="2025-09-17T13:24:39 IST" duration-ms="345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDownFeatureUsingMouseScroll status=SUCCESS method=ContactUsPage_UI_1.verifyScrollDownFeatureUsingMouseScroll()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:39 IST" name="setUp" finished-at="2025-09-17T13:24:40 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyScrollUpFeatureUsingKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUpFeatureUsingKeyboard()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:40 IST" name="verifyScrollUpFeatureUsingKeyboard" finished-at="2025-09-17T13:24:42 IST" duration-ms="2123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUpFeatureUsingKeyboard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:42 IST" name="tearDown" finished-at="2025-09-17T13:24:43 IST" duration-ms="347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUpFeatureUsingKeyboard status=SUCCESS method=ContactUsPage_UI_1.verifyScrollUpFeatureUsingKeyboard()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:43 IST" name="setUp" finished-at="2025-09-17T13:24:44 IST" duration-ms="1010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyScrollUpFeatureUsingMouseClick()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUpFeatureUsingMouseClick()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:44 IST" name="verifyScrollUpFeatureUsingMouseClick" finished-at="2025-09-17T13:24:46 IST" duration-ms="2442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUpFeatureUsingMouseClick -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:46 IST" name="tearDown" finished-at="2025-09-17T13:24:47 IST" duration-ms="300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUpFeatureUsingMouseClick status=SUCCESS method=ContactUsPage_UI_1.verifyScrollUpFeatureUsingMouseClick()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:47 IST" name="setUp" finished-at="2025-09-17T13:24:48 IST" duration-ms="1002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsPage_UI_1.verifyScrollUpFeatureUsingMouseScroll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUpFeatureUsingMouseScroll()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:48 IST" name="verifyScrollUpFeatureUsingMouseScroll" finished-at="2025-09-17T13:24:50 IST" duration-ms="2437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUpFeatureUsingMouseScroll -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsPage_UI_1@47987356]" started-at="2025-09-17T13:24:50 IST" name="tearDown" finished-at="2025-09-17T13:24:50 IST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUpFeatureUsingMouseScroll status=SUCCESS method=ContactUsPage_UI_1.verifyScrollUpFeatureUsingMouseScroll()[pri:0, instance:Tests.ContactUsPage_UI_1@47987356] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.ContactUsPage_UI_1 -->
      <class name="Tests.TestCases_UI_1">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:32:43 IST" name="setUp" finished-at="2025-09-17T13:32:44 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyDeclarationAtEndOfTestCasesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyDeclarationAtEndOfTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:32:44 IST" name="verifyDeclarationAtEndOfTestCasesPage" finished-at="2025-09-17T13:32:46 IST" duration-ms="2603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeclarationAtEndOfTestCasesPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:32:46 IST" name="tearDown" finished-at="2025-09-17T13:32:46 IST" duration-ms="272" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeclarationAtEndOfTestCasesPage status=SUCCESS method=TestCases_UI_1.verifyDeclarationAtEndOfTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:32:46 IST" name="setUp" finished-at="2025-09-17T13:32:47 IST" duration-ms="947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyDisplayOfNoteSection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyDisplayOfNoteSection()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:32:47 IST" name="verifyDisplayOfNoteSection" finished-at="2025-09-17T13:32:50 IST" duration-ms="2295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDisplayOfNoteSection -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:32:50 IST" name="tearDown" finished-at="2025-09-17T13:32:50 IST" duration-ms="282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDisplayOfNoteSection status=SUCCESS method=TestCases_UI_1.verifyDisplayOfNoteSection()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:32:50 IST" name="setUp" finished-at="2025-09-17T13:32:51 IST" duration-ms="951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyFunctionalityOfAPITestingIconOnTestCasesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfAPITestingIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:32:51 IST" name="verifyFunctionalityOfAPITestingIconOnTestCasesPage" finished-at="2025-09-17T13:32:57 IST" duration-ms="6445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfAPITestingIconOnTestCasesPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:32:57 IST" name="tearDown" finished-at="2025-09-17T13:32:58 IST" duration-ms="392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfAPITestingIconOnTestCasesPage status=SUCCESS method=TestCases_UI_1.verifyFunctionalityOfAPITestingIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:32:58 IST" name="setUp" finished-at="2025-09-17T13:32:59 IST" duration-ms="979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyFunctionalityOfAutomationExerciseLogoOnTestCasesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfAutomationExerciseLogoOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:32:59 IST" name="verifyFunctionalityOfAutomationExerciseLogoOnTestCasesPage" finished-at="2025-09-17T13:33:05 IST" duration-ms="6635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfAutomationExerciseLogoOnTestCasesPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:05 IST" name="tearDown" finished-at="2025-09-17T13:33:06 IST" duration-ms="491" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfAutomationExerciseLogoOnTestCasesPage status=SUCCESS method=TestCases_UI_1.verifyFunctionalityOfAutomationExerciseLogoOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:06 IST" name="setUp" finished-at="2025-09-17T13:33:07 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyFunctionalityOfCartIconOnTestCasesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfCartIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:07 IST" name="verifyFunctionalityOfCartIconOnTestCasesPage" finished-at="2025-09-17T13:33:10 IST" duration-ms="3326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfCartIconOnTestCasesPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:10 IST" name="tearDown" finished-at="2025-09-17T13:33:10 IST" duration-ms="260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfCartIconOnTestCasesPage status=SUCCESS method=TestCases_UI_1.verifyFunctionalityOfCartIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:10 IST" name="setUp" finished-at="2025-09-17T13:33:11 IST" duration-ms="931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyFunctionalityOfHomeIconOnTestCasesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfHomeIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:11 IST" name="verifyFunctionalityOfHomeIconOnTestCasesPage" finished-at="2025-09-17T13:33:17 IST" duration-ms="5616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfHomeIconOnTestCasesPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:17 IST" name="tearDown" finished-at="2025-09-17T13:33:18 IST" duration-ms="477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfHomeIconOnTestCasesPage status=SUCCESS method=TestCases_UI_1.verifyFunctionalityOfHomeIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:18 IST" name="setUp" finished-at="2025-09-17T13:33:19 IST" duration-ms="1010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyFunctionalityOfLoginIconOnTestCasesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfLoginIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:19 IST" name="verifyFunctionalityOfLoginIconOnTestCasesPage" finished-at="2025-09-17T13:33:25 IST" duration-ms="6073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfLoginIconOnTestCasesPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:25 IST" name="tearDown" finished-at="2025-09-17T13:33:25 IST" duration-ms="342" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfLoginIconOnTestCasesPage status=SUCCESS method=TestCases_UI_1.verifyFunctionalityOfLoginIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:25 IST" name="setUp" finished-at="2025-09-17T13:33:26 IST" duration-ms="999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyFunctionalityOfProductsIconOnTestCasesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfProductsIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:26 IST" name="verifyFunctionalityOfProductsIconOnTestCasesPage" finished-at="2025-09-17T13:33:32 IST" duration-ms="6359" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfProductsIconOnTestCasesPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:32 IST" name="tearDown" finished-at="2025-09-17T13:33:33 IST" duration-ms="348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfProductsIconOnTestCasesPage status=SUCCESS method=TestCases_UI_1.verifyFunctionalityOfProductsIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:33 IST" name="setUp" finished-at="2025-09-17T13:33:34 IST" duration-ms="966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyFunctionalityOfTestCasesIconOnTestCasesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfTestCasesIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:34 IST" name="verifyFunctionalityOfTestCasesIconOnTestCasesPage" finished-at="2025-09-17T13:33:39 IST" duration-ms="5675" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfTestCasesIconOnTestCasesPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:39 IST" name="tearDown" finished-at="2025-09-17T13:33:40 IST" duration-ms="277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfTestCasesIconOnTestCasesPage status=SUCCESS method=TestCases_UI_1.verifyFunctionalityOfTestCasesIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:40 IST" name="setUp" finished-at="2025-09-17T13:33:41 IST" duration-ms="963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyFunctionalityOfVideoTutorialsIconOnTestCasesPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfVideoTutorialsIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:41 IST" name="verifyFunctionalityOfVideoTutorialsIconOnTestCasesPage" finished-at="2025-09-17T13:33:46 IST" duration-ms="5788" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfVideoTutorialsIconOnTestCasesPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:46 IST" name="tearDown" finished-at="2025-09-17T13:33:49 IST" duration-ms="2289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfVideoTutorialsIconOnTestCasesPage status=SUCCESS method=TestCases_UI_1.verifyFunctionalityOfVideoTutorialsIconOnTestCasesPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:49 IST" name="setUp" finished-at="2025-09-17T13:33:50 IST" duration-ms="968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyScrollDownFeatureUsingKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDownFeatureUsingKeyboard()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:50 IST" name="verifyScrollDownFeatureUsingKeyboard" finished-at="2025-09-17T13:33:52 IST" duration-ms="2290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDownFeatureUsingKeyboard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:52 IST" name="tearDown" finished-at="2025-09-17T13:33:52 IST" duration-ms="333" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDownFeatureUsingKeyboard status=SUCCESS method=TestCases_UI_1.verifyScrollDownFeatureUsingKeyboard()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:52 IST" name="setUp" finished-at="2025-09-17T13:33:53 IST" duration-ms="974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyScrollDownFeatureUsingMouseScroll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDownFeatureUsingMouseScroll()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:53 IST" name="verifyScrollDownFeatureUsingMouseScroll" finished-at="2025-09-17T13:33:56 IST" duration-ms="2416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDownFeatureUsingMouseScroll -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:56 IST" name="tearDown" finished-at="2025-09-17T13:33:56 IST" duration-ms="326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDownFeatureUsingMouseScroll status=SUCCESS method=TestCases_UI_1.verifyScrollDownFeatureUsingMouseScroll()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:56 IST" name="setUp" finished-at="2025-09-17T13:33:57 IST" duration-ms="955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyScrollUpFeatureUsingKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUpFeatureUsingKeyboard()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:33:57 IST" name="verifyScrollUpFeatureUsingKeyboard" finished-at="2025-09-17T13:34:01 IST" duration-ms="3881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUpFeatureUsingKeyboard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:34:01 IST" name="tearDown" finished-at="2025-09-17T13:34:01 IST" duration-ms="332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUpFeatureUsingKeyboard status=SUCCESS method=TestCases_UI_1.verifyScrollUpFeatureUsingKeyboard()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:34:01 IST" name="setUp" finished-at="2025-09-17T13:34:02 IST" duration-ms="949" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyScrollUpFeatureUsingMouseScroll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUpFeatureUsingMouseScroll()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:34:02 IST" name="verifyScrollUpFeatureUsingMouseScroll" finished-at="2025-09-17T13:34:05 IST" duration-ms="2491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUpFeatureUsingMouseScroll -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:34:05 IST" name="tearDown" finished-at="2025-09-17T13:34:05 IST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUpFeatureUsingMouseScroll status=SUCCESS method=TestCases_UI_1.verifyScrollUpFeatureUsingMouseScroll()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:34:05 IST" name="setUp" finished-at="2025-09-17T13:34:06 IST" duration-ms="975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyTestCasesTitleOnPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCasesTitleOnPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:34:06 IST" name="verifyTestCasesTitleOnPage" finished-at="2025-09-17T13:34:08 IST" duration-ms="2558" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(), 'Test Cases')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [35bd1cdb4e375c5e4a096f9890c26154, findElement {using=xpath, value=//h2[contains(text(), 'Test Cases')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:19969}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:19969/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 35bd1cdb4e375c5e4a096f9890c26154]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(), 'Test Cases')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [35bd1cdb4e375c5e4a096f9890c26154, findElement {using=xpath, value=//h2[contains(text(), 'Test Cases')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:19969}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:19969/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 35bd1cdb4e375c5e4a096f9890c26154
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.TestCases_UI_1.verifyTestCasesTitleOnPage(TestCases_UI_1.java:342)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCasesTitleOnPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:34:08 IST" name="tearDown" finished-at="2025-09-17T13:34:09 IST" duration-ms="293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCasesTitleOnPage status=FAILURE method=TestCases_UI_1.verifyTestCasesTitleOnPage()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:34:09 IST" name="setUp" finished-at="2025-09-17T13:34:10 IST" duration-ms="980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyTestcasesFontSize()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestcasesFontSize()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:34:10 IST" name="verifyTestcasesFontSize" finished-at="2025-09-17T13:34:13 IST" duration-ms="2940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestcasesFontSize -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:34:13 IST" name="tearDown" finished-at="2025-09-17T13:34:13 IST" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestcasesFontSize status=SUCCESS method=TestCases_UI_1.verifyTestcasesFontSize()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:34:13 IST" name="setUp" finished-at="2025-09-17T13:34:14 IST" duration-ms="977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_1.verifyTestcasesFontStyle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestcasesFontStyle()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:34:14 IST" name="verifyTestcasesFontStyle" finished-at="2025-09-17T13:34:24 IST" duration-ms="9714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestcasesFontStyle -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5]" started-at="2025-09-17T13:34:24 IST" name="tearDown" finished-at="2025-09-17T13:34:24 IST" duration-ms="300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestcasesFontStyle status=SUCCESS method=TestCases_UI_1.verifyTestcasesFontStyle()[pri:0, instance:Tests.TestCases_UI_1@3f6b0be5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.TestCases_UI_1 -->
      <class name="Tests.TestCases_UI_3">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:11 IST" name="setUp" finished-at="2025-09-17T13:32:12 IST" duration-ms="966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_3.verifyContentsUnderFeedbackForUs()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyContentsUnderFeedbackForUs()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:12 IST" name="verifyContentsUnderFeedbackForUs" finished-at="2025-09-17T13:32:15 IST" duration-ms="2769" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContentsUnderFeedbackForUs -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:15 IST" name="tearDown" finished-at="2025-09-17T13:32:15 IST" duration-ms="261" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContentsUnderFeedbackForUs status=SUCCESS method=TestCases_UI_3.verifyContentsUnderFeedbackForUs()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:15 IST" name="setUp" finished-at="2025-09-17T13:32:16 IST" duration-ms="982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_3.verifyEmailIdURLForFeedback()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyEmailIdURLForFeedback()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:16 IST" name="verifyEmailIdURLForFeedback" finished-at="2025-09-17T13:32:19 IST" duration-ms="2335" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The Email ID URL for feedback was found on the Test Cases page when it should not be present.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The Email ID URL for feedback was found on the Test Cases page when it should not be present.
at org.testng.Assert.fail(Assert.java:111)
at Tests.TestCases_UI_3.verifyEmailIdURLForFeedback(TestCases_UI_3.java:161)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailIdURLForFeedback -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:19 IST" name="tearDown" finished-at="2025-09-17T13:32:19 IST" duration-ms="277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailIdURLForFeedback status=FAILURE method=TestCases_UI_3.verifyEmailIdURLForFeedback()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:19 IST" name="setUp" finished-at="2025-09-17T13:32:20 IST" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_3.verifyFeedbackForUsFontSizeIsCorrect()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFeedbackForUsFontSizeIsCorrect()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:20 IST" name="verifyFeedbackForUsFontSizeIsCorrect" finished-at="2025-09-17T13:32:22 IST" duration-ms="1905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFeedbackForUsFontSizeIsCorrect -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:22 IST" name="tearDown" finished-at="2025-09-17T13:32:22 IST" duration-ms="248" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFeedbackForUsFontSizeIsCorrect status=SUCCESS method=TestCases_UI_3.verifyFeedbackForUsFontSizeIsCorrect()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:22 IST" name="setUp" finished-at="2025-09-17T13:32:23 IST" duration-ms="978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_3.verifyFeedbackForUsFontStyleIsCorrect()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFeedbackForUsFontStyleIsCorrect()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:23 IST" name="verifyFeedbackForUsFontStyleIsCorrect" finished-at="2025-09-17T13:32:25 IST" duration-ms="2130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFeedbackForUsFontStyleIsCorrect -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:25 IST" name="tearDown" finished-at="2025-09-17T13:32:25 IST" duration-ms="279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFeedbackForUsFontStyleIsCorrect status=SUCCESS method=TestCases_UI_3.verifyFeedbackForUsFontStyleIsCorrect()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:25 IST" name="setUp" finished-at="2025-09-17T13:32:26 IST" duration-ms="950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_3.verifyFeedbackForUsTitleIsPresentInCorrectPosition()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFeedbackForUsTitleIsPresentInCorrectPosition()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:26 IST" name="verifyFeedbackForUsTitleIsPresentInCorrectPosition" finished-at="2025-09-17T13:32:29 IST" duration-ms="2530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFeedbackForUsTitleIsPresentInCorrectPosition -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:29 IST" name="tearDown" finished-at="2025-09-17T13:32:29 IST" duration-ms="308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFeedbackForUsTitleIsPresentInCorrectPosition status=SUCCESS method=TestCases_UI_3.verifyFeedbackForUsTitleIsPresentInCorrectPosition()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:29 IST" name="setUp" finished-at="2025-09-17T13:32:30 IST" duration-ms="959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_3.verifyFunctionalityOfScrollToTopButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfScrollToTopButton()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:30 IST" name="verifyFunctionalityOfScrollToTopButton" finished-at="2025-09-17T13:32:35 IST" duration-ms="4537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfScrollToTopButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:35 IST" name="tearDown" finished-at="2025-09-17T13:32:35 IST" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfScrollToTopButton status=SUCCESS method=TestCases_UI_3.verifyFunctionalityOfScrollToTopButton()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:35 IST" name="setUp" finished-at="2025-09-17T13:32:36 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_3.verifySubscriptionButtonIsWorkingGood()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubscriptionButtonIsWorkingGood()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:36 IST" name="verifySubscriptionButtonIsWorkingGood" finished-at="2025-09-17T13:32:38 IST" duration-ms="2496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubscriptionButtonIsWorkingGood -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:38 IST" name="tearDown" finished-at="2025-09-17T13:32:39 IST" duration-ms="346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubscriptionButtonIsWorkingGood status=SUCCESS method=TestCases_UI_3.verifySubscriptionButtonIsWorkingGood()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:39 IST" name="setUp" finished-at="2025-09-17T13:32:40 IST" duration-ms="974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_3.verifySubscriptionFieldIsAcceptingInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubscriptionFieldIsAcceptingInput()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:40 IST" name="verifySubscriptionFieldIsAcceptingInput" finished-at="2025-09-17T13:32:42 IST" duration-ms="2622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubscriptionFieldIsAcceptingInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d]" started-at="2025-09-17T13:32:42 IST" name="tearDown" finished-at="2025-09-17T13:32:43 IST" duration-ms="284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubscriptionFieldIsAcceptingInput status=SUCCESS method=TestCases_UI_3.verifySubscriptionFieldIsAcceptingInput()[pri:0, instance:Tests.TestCases_UI_3@3b6ddd1d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.TestCases_UI_3 -->
      <class name="Tests.TestCases_UI_4">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:36 IST" name="setUp" finished-at="2025-09-17T13:28:37 IST" duration-ms="961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase10NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase10NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:37 IST" name="verifyTestCase10NavigationLink" finished-at="2025-09-17T13:28:39 IST" duration-ms="1809" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fbfb65e1cd26b715ce43ddfca1d0b283, clickElement {id=f.B40B857A23B941199A151D919F999A1C.d.1C67D7BB3EC909B119A40125425E9890.e.27}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:16673}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:16673/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[[[ChromeDriver: chrome on windows (fbfb65e1cd26b715ce43ddfca1d0b283)] -> id: collapse10]] -> xpath: .//a[contains(text(), 'automationexercise.com')]]
Session ID: fbfb65e1cd26b715ce43ddfca1d0b283]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fbfb65e1cd26b715ce43ddfca1d0b283, clickElement {id=f.B40B857A23B941199A151D919F999A1C.d.1C67D7BB3EC909B119A40125425E9890.e.27}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:16673}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:16673/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[[[ChromeDriver: chrome on windows (fbfb65e1cd26b715ce43ddfca1d0b283)] -> id: collapse10]] -> xpath: .//a[contains(text(), 'automationexercise.com')]]
Session ID: fbfb65e1cd26b715ce43ddfca1d0b283
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at Tests.TestCases_UI_4.verifyTestCaseNavigationLink(TestCases_UI_4.java:36)
at Tests.TestCases_UI_4.verifyTestCase10NavigationLink(TestCases_UI_4.java:97)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase10NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:39 IST" name="tearDown" finished-at="2025-09-17T13:28:39 IST" duration-ms="331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase10NavigationLink status=FAILURE method=TestCases_UI_4.verifyTestCase10NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:39 IST" name="setUp" finished-at="2025-09-17T13:28:40 IST" duration-ms="984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase11NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase11NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:40 IST" name="verifyTestCase11NavigationLink" finished-at="2025-09-17T13:28:45 IST" duration-ms="4754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase11NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:45 IST" name="tearDown" finished-at="2025-09-17T13:28:45 IST" duration-ms="444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase11NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase11NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:45 IST" name="setUp" finished-at="2025-09-17T13:28:46 IST" duration-ms="1000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase12NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase12NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:46 IST" name="verifyTestCase12NavigationLink" finished-at="2025-09-17T13:28:51 IST" duration-ms="4198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase12NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:51 IST" name="tearDown" finished-at="2025-09-17T13:28:51 IST" duration-ms="501" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase12NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase12NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:51 IST" name="setUp" finished-at="2025-09-17T13:28:52 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase13NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase13NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:52 IST" name="verifyTestCase13NavigationLink" finished-at="2025-09-17T13:28:55 IST" duration-ms="3340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase13NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:55 IST" name="tearDown" finished-at="2025-09-17T13:28:56 IST" duration-ms="380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase13NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase13NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:56 IST" name="setUp" finished-at="2025-09-17T13:28:57 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase14NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase14NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:28:57 IST" name="verifyTestCase14NavigationLink" finished-at="2025-09-17T13:29:04 IST" duration-ms="6966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase14NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:04 IST" name="tearDown" finished-at="2025-09-17T13:29:04 IST" duration-ms="432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase14NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase14NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:04 IST" name="setUp" finished-at="2025-09-17T13:29:05 IST" duration-ms="988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase15NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase15NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:05 IST" name="verifyTestCase15NavigationLink" finished-at="2025-09-17T13:29:11 IST" duration-ms="6271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase15NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:11 IST" name="tearDown" finished-at="2025-09-17T13:29:12 IST" duration-ms="446" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase15NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase15NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:12 IST" name="setUp" finished-at="2025-09-17T13:29:13 IST" duration-ms="1059" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase16NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase16NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:13 IST" name="verifyTestCase16NavigationLink" finished-at="2025-09-17T13:29:19 IST" duration-ms="6267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase16NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:19 IST" name="tearDown" finished-at="2025-09-17T13:29:20 IST" duration-ms="476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase16NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase16NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:20 IST" name="setUp" finished-at="2025-09-17T13:29:21 IST" duration-ms="964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase17NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase17NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:21 IST" name="verifyTestCase17NavigationLink" finished-at="2025-09-17T13:29:26 IST" duration-ms="5666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase17NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:26 IST" name="tearDown" finished-at="2025-09-17T13:29:27 IST" duration-ms="452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase17NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase17NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:27 IST" name="setUp" finished-at="2025-09-17T13:29:28 IST" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase18NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase18NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:28 IST" name="verifyTestCase18NavigationLink" finished-at="2025-09-17T13:29:53 IST" duration-ms="25491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase18NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:53 IST" name="tearDown" finished-at="2025-09-17T13:29:54 IST" duration-ms="576" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase18NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase18NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:54 IST" name="setUp" finished-at="2025-09-17T13:29:55 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase19NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase19NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:29:55 IST" name="verifyTestCase19NavigationLink" finished-at="2025-09-17T13:30:01 IST" duration-ms="6174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase19NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:01 IST" name="tearDown" finished-at="2025-09-17T13:30:01 IST" duration-ms="464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase19NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase19NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:01 IST" name="setUp" finished-at="2025-09-17T13:30:02 IST" duration-ms="936" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase1NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase1NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:02 IST" name="verifyTestCase1NavigationLink" finished-at="2025-09-17T13:30:09 IST" duration-ms="6157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase1NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:09 IST" name="tearDown" finished-at="2025-09-17T13:30:09 IST" duration-ms="509" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase1NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase1NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:09 IST" name="setUp" finished-at="2025-09-17T13:30:10 IST" duration-ms="951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase20NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase20NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:10 IST" name="verifyTestCase20NavigationLink" finished-at="2025-09-17T13:30:16 IST" duration-ms="5939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase20NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:16 IST" name="tearDown" finished-at="2025-09-17T13:30:16 IST" duration-ms="468" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase20NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase20NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:16 IST" name="setUp" finished-at="2025-09-17T13:30:17 IST" duration-ms="980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase21NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase21NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:17 IST" name="verifyTestCase21NavigationLink" finished-at="2025-09-17T13:30:23 IST" duration-ms="6071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase21NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:23 IST" name="tearDown" finished-at="2025-09-17T13:30:24 IST" duration-ms="446" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase21NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase21NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:24 IST" name="setUp" finished-at="2025-09-17T13:30:25 IST" duration-ms="999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase22NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase22NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:25 IST" name="verifyTestCase22NavigationLink" finished-at="2025-09-17T13:30:27 IST" duration-ms="2482" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [84a8291ee1d1454a306c5007be23d602, clickElement {id=f.4AFBAB727EA543662485939EE976225B.d.85EE18FCF2A88D6AD5325799FBAF7163.e.28}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:17690}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:17690/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[[[ChromeDriver: chrome on windows (84a8291ee1d1454a306c5007be23d602)] -> id: collapse22]] -> xpath: .//a[contains(text(), 'automationexercise.com')]]
Session ID: 84a8291ee1d1454a306c5007be23d602]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [84a8291ee1d1454a306c5007be23d602, clickElement {id=f.4AFBAB727EA543662485939EE976225B.d.85EE18FCF2A88D6AD5325799FBAF7163.e.28}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:17690}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:17690/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[[[ChromeDriver: chrome on windows (84a8291ee1d1454a306c5007be23d602)] -> id: collapse22]] -> xpath: .//a[contains(text(), 'automationexercise.com')]]
Session ID: 84a8291ee1d1454a306c5007be23d602
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at Tests.TestCases_UI_4.verifyTestCaseNavigationLink(TestCases_UI_4.java:36)
at Tests.TestCases_UI_4.verifyTestCase22NavigationLink(TestCases_UI_4.java:157)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase22NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:27 IST" name="tearDown" finished-at="2025-09-17T13:30:28 IST" duration-ms="402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase22NavigationLink status=FAILURE method=TestCases_UI_4.verifyTestCase22NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:28 IST" name="setUp" finished-at="2025-09-17T13:30:29 IST" duration-ms="1022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase23NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase23NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:29 IST" name="verifyTestCase23NavigationLink" finished-at="2025-09-17T13:30:35 IST" duration-ms="6208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase23NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:35 IST" name="tearDown" finished-at="2025-09-17T13:30:35 IST" duration-ms="414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase23NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase23NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:35 IST" name="setUp" finished-at="2025-09-17T13:30:36 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase24NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase24NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:36 IST" name="verifyTestCase24NavigationLink" finished-at="2025-09-17T13:30:42 IST" duration-ms="5547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase24NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:42 IST" name="tearDown" finished-at="2025-09-17T13:30:42 IST" duration-ms="527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase24NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase24NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:42 IST" name="setUp" finished-at="2025-09-17T13:30:43 IST" duration-ms="962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase25NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase25NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:43 IST" name="verifyTestCase25NavigationLink" finished-at="2025-09-17T13:30:50 IST" duration-ms="6727" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [bbf36fcb130d2926579ea0966f1ab115, clickElement {id=f.14F6172D5BE123BDF688218EE1D373B3.d.D28A7DB492370855D3EE284EB3783FD0.e.28}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:17920}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:17920/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[[[ChromeDriver: chrome on windows (bbf36fcb130d2926579ea0966f1ab115)] -> id: collapse25]] -> xpath: .//a[contains(text(), 'automationexercise.com')]]
Session ID: bbf36fcb130d2926579ea0966f1ab115]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [bbf36fcb130d2926579ea0966f1ab115, clickElement {id=f.14F6172D5BE123BDF688218EE1D373B3.d.D28A7DB492370855D3EE284EB3783FD0.e.28}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:17920}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:17920/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[[[ChromeDriver: chrome on windows (bbf36fcb130d2926579ea0966f1ab115)] -> id: collapse25]] -> xpath: .//a[contains(text(), 'automationexercise.com')]]
Session ID: bbf36fcb130d2926579ea0966f1ab115
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at Tests.TestCases_UI_4.verifyTestCaseNavigationLink(TestCases_UI_4.java:36)
at Tests.TestCases_UI_4.verifyTestCase25NavigationLink(TestCases_UI_4.java:172)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase25NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:50 IST" name="tearDown" finished-at="2025-09-17T13:30:51 IST" duration-ms="410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase25NavigationLink status=FAILURE method=TestCases_UI_4.verifyTestCase25NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:51 IST" name="setUp" finished-at="2025-09-17T13:30:52 IST" duration-ms="961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase26NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase26NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:52 IST" name="verifyTestCase26NavigationLink" finished-at="2025-09-17T13:30:54 IST" duration-ms="2454" status="FAIL">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7caece7206541174c13e591473f59d12, clickElement {id=f.05215BE249EE1D53DF986C165140F59A.d.2E047925A221CFF7E2EE32DA4CEFF82B.e.27}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:17972}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:17972/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[[[ChromeDriver: chrome on windows (7caece7206541174c13e591473f59d12)] -> id: collapse26]] -> xpath: .//a[contains(text(), 'automationexercise.com')]]
Session ID: 7caece7206541174c13e591473f59d12]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7caece7206541174c13e591473f59d12, clickElement {id=f.05215BE249EE1D53DF986C165140F59A.d.2E047925A221CFF7E2EE32DA4CEFF82B.e.27}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:17972}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:17972/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[[[ChromeDriver: chrome on windows (7caece7206541174c13e591473f59d12)] -> id: collapse26]] -> xpath: .//a[contains(text(), 'automationexercise.com')]]
Session ID: 7caece7206541174c13e591473f59d12
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at Tests.TestCases_UI_4.verifyTestCaseNavigationLink(TestCases_UI_4.java:36)
at Tests.TestCases_UI_4.verifyTestCase26NavigationLink(TestCases_UI_4.java:177)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase26NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:54 IST" name="tearDown" finished-at="2025-09-17T13:30:54 IST" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase26NavigationLink status=FAILURE method=TestCases_UI_4.verifyTestCase26NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:54 IST" name="setUp" finished-at="2025-09-17T13:30:55 IST" duration-ms="988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase2NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase2NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:30:55 IST" name="verifyTestCase2NavigationLink" finished-at="2025-09-17T13:31:01 IST" duration-ms="5598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase2NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:01 IST" name="tearDown" finished-at="2025-09-17T13:31:01 IST" duration-ms="554" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase2NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase2NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:01 IST" name="setUp" finished-at="2025-09-17T13:31:02 IST" duration-ms="951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase3NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase3NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:02 IST" name="verifyTestCase3NavigationLink" finished-at="2025-09-17T13:31:08 IST" duration-ms="5819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase3NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:08 IST" name="tearDown" finished-at="2025-09-17T13:31:09 IST" duration-ms="459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase3NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase3NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:09 IST" name="setUp" finished-at="2025-09-17T13:31:10 IST" duration-ms="970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase4NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase4NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:10 IST" name="verifyTestCase4NavigationLink" finished-at="2025-09-17T13:31:15 IST" duration-ms="5099" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase4NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:15 IST" name="tearDown" finished-at="2025-09-17T13:31:15 IST" duration-ms="456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase4NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase4NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:15 IST" name="setUp" finished-at="2025-09-17T13:31:16 IST" duration-ms="996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase5NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase5NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:16 IST" name="verifyTestCase5NavigationLink" finished-at="2025-09-17T13:31:22 IST" duration-ms="6004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase5NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:22 IST" name="tearDown" finished-at="2025-09-17T13:31:23 IST" duration-ms="446" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase5NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase5NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:23 IST" name="setUp" finished-at="2025-09-17T13:31:24 IST" duration-ms="997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase6NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase6NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:24 IST" name="verifyTestCase6NavigationLink" finished-at="2025-09-17T13:31:29 IST" duration-ms="5352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase6NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:29 IST" name="tearDown" finished-at="2025-09-17T13:31:30 IST" duration-ms="519" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase6NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase6NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:30 IST" name="setUp" finished-at="2025-09-17T13:31:31 IST" duration-ms="984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase7NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase7NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:31 IST" name="verifyTestCase7NavigationLink" finished-at="2025-09-17T13:31:56 IST" duration-ms="25522" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase7NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:56 IST" name="tearDown" finished-at="2025-09-17T13:31:57 IST" duration-ms="487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase7NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase7NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:57 IST" name="setUp" finished-at="2025-09-17T13:31:58 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase8NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase8NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:31:58 IST" name="verifyTestCase8NavigationLink" finished-at="2025-09-17T13:32:03 IST" duration-ms="5988" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase8NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:32:03 IST" name="tearDown" finished-at="2025-09-17T13:32:04 IST" duration-ms="544" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase8NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase8NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:32:04 IST" name="setUp" finished-at="2025-09-17T13:32:05 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCases_UI_4.verifyTestCase9NavigationLink()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase9NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:32:05 IST" name="verifyTestCase9NavigationLink" finished-at="2025-09-17T13:32:11 IST" duration-ms="5765" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase9NavigationLink -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCases_UI_4@6283d8b8]" started-at="2025-09-17T13:32:11 IST" name="tearDown" finished-at="2025-09-17T13:32:11 IST" duration-ms="488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase9NavigationLink status=SUCCESS method=TestCases_UI_4.verifyTestCase9NavigationLink()[pri:0, instance:Tests.TestCases_UI_4@6283d8b8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.TestCases_UI_4 -->
      <class name="Tests.TestCasesUI_2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:37 IST" name="setUp" finished-at="2025-09-17T13:35:38 IST" duration-ms="972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase10OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase10OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:38 IST" name="verifyTestCase10OpensAsDropdown" finished-at="2025-09-17T13:35:42 IST" duration-ms="3330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase10OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:42 IST" name="tearDown" finished-at="2025-09-17T13:35:42 IST" duration-ms="259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase10OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase10OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:42 IST" name="setUp" finished-at="2025-09-17T13:35:43 IST" duration-ms="948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase11OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase11OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:43 IST" name="verifyTestCase11OpensAsDropdown" finished-at="2025-09-17T13:35:45 IST" duration-ms="2647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase11OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:45 IST" name="tearDown" finished-at="2025-09-17T13:35:46 IST" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase11OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase11OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:46 IST" name="setUp" finished-at="2025-09-17T13:35:47 IST" duration-ms="997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase12OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase12OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:47 IST" name="verifyTestCase12OpensAsDropdown" finished-at="2025-09-17T13:35:49 IST" duration-ms="2358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase12OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:49 IST" name="tearDown" finished-at="2025-09-17T13:35:49 IST" duration-ms="306" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase12OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase12OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:49 IST" name="setUp" finished-at="2025-09-17T13:35:50 IST" duration-ms="964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase13OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase13OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:50 IST" name="verifyTestCase13OpensAsDropdown" finished-at="2025-09-17T13:35:53 IST" duration-ms="2892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase13OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:53 IST" name="tearDown" finished-at="2025-09-17T13:35:54 IST" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase13OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase13OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:54 IST" name="setUp" finished-at="2025-09-17T13:35:55 IST" duration-ms="1508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase14OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase14OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:55 IST" name="verifyTestCase14OpensAsDropdown" finished-at="2025-09-17T13:35:57 IST" duration-ms="2141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase14OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:57 IST" name="tearDown" finished-at="2025-09-17T13:35:57 IST" duration-ms="275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase14OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase14OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:57 IST" name="setUp" finished-at="2025-09-17T13:35:58 IST" duration-ms="988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase15OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase15OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:35:58 IST" name="verifyTestCase15OpensAsDropdown" finished-at="2025-09-17T13:36:02 IST" duration-ms="3327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase15OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:02 IST" name="tearDown" finished-at="2025-09-17T13:36:02 IST" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase15OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase15OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:02 IST" name="setUp" finished-at="2025-09-17T13:36:03 IST" duration-ms="1004" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase16OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase16OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:03 IST" name="verifyTestCase16OpensAsDropdown" finished-at="2025-09-17T13:36:06 IST" duration-ms="3110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase16OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:06 IST" name="tearDown" finished-at="2025-09-17T13:36:07 IST" duration-ms="274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase16OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase16OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:07 IST" name="setUp" finished-at="2025-09-17T13:36:07 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase17OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase17OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:07 IST" name="verifyTestCase17OpensAsDropdown" finished-at="2025-09-17T13:36:10 IST" duration-ms="2480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase17OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:10 IST" name="tearDown" finished-at="2025-09-17T13:36:10 IST" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase17OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase17OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:10 IST" name="setUp" finished-at="2025-09-17T13:36:11 IST" duration-ms="972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase18OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase18OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:11 IST" name="verifyTestCase18OpensAsDropdown" finished-at="2025-09-17T13:36:14 IST" duration-ms="2662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase18OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:14 IST" name="tearDown" finished-at="2025-09-17T13:36:14 IST" duration-ms="341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase18OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase18OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:14 IST" name="setUp" finished-at="2025-09-17T13:36:15 IST" duration-ms="964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase19OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase19OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:15 IST" name="verifyTestCase19OpensAsDropdown" finished-at="2025-09-17T13:36:18 IST" duration-ms="2592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase19OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:18 IST" name="tearDown" finished-at="2025-09-17T13:36:18 IST" duration-ms="359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase19OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase19OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:18 IST" name="setUp" finished-at="2025-09-17T13:36:19 IST" duration-ms="959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase1OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase1OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:19 IST" name="verifyTestCase1OpensAsDropdown" finished-at="2025-09-17T13:36:22 IST" duration-ms="2880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase1OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:22 IST" name="tearDown" finished-at="2025-09-17T13:36:22 IST" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase1OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase1OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:22 IST" name="setUp" finished-at="2025-09-17T13:36:23 IST" duration-ms="958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase20OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase20OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:23 IST" name="verifyTestCase20OpensAsDropdown" finished-at="2025-09-17T13:36:26 IST" duration-ms="3216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase20OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:26 IST" name="tearDown" finished-at="2025-09-17T13:36:27 IST" duration-ms="322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase20OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase20OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:27 IST" name="setUp" finished-at="2025-09-17T13:36:28 IST" duration-ms="958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase21OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase21OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:28 IST" name="verifyTestCase21OpensAsDropdown" finished-at="2025-09-17T13:36:31 IST" duration-ms="2981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase21OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:31 IST" name="tearDown" finished-at="2025-09-17T13:36:31 IST" duration-ms="322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase21OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase21OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:31 IST" name="setUp" finished-at="2025-09-17T13:36:32 IST" duration-ms="962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase22OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase22OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:32 IST" name="verifyTestCase22OpensAsDropdown" finished-at="2025-09-17T13:36:35 IST" duration-ms="3141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase22OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:35 IST" name="tearDown" finished-at="2025-09-17T13:36:35 IST" duration-ms="314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase22OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase22OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:35 IST" name="setUp" finished-at="2025-09-17T13:36:36 IST" duration-ms="953" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase23OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase23OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:36 IST" name="verifyTestCase23OpensAsDropdown" finished-at="2025-09-17T13:36:40 IST" duration-ms="3128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase23OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:40 IST" name="tearDown" finished-at="2025-09-17T13:36:40 IST" duration-ms="329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase23OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase23OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:40 IST" name="setUp" finished-at="2025-09-17T13:36:41 IST" duration-ms="963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase24OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase24OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:41 IST" name="verifyTestCase24OpensAsDropdown" finished-at="2025-09-17T13:36:44 IST" duration-ms="3072" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase24OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:44 IST" name="tearDown" finished-at="2025-09-17T13:36:44 IST" duration-ms="321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase24OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase24OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:44 IST" name="setUp" finished-at="2025-09-17T13:36:45 IST" duration-ms="993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase25OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase25OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:45 IST" name="verifyTestCase25OpensAsDropdown" finished-at="2025-09-17T13:36:48 IST" duration-ms="2794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase25OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:48 IST" name="tearDown" finished-at="2025-09-17T13:36:48 IST" duration-ms="322" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase25OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase25OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:48 IST" name="setUp" finished-at="2025-09-17T13:36:49 IST" duration-ms="961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase26OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase26OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:49 IST" name="verifyTestCase26OpensAsDropdown" finished-at="2025-09-17T13:36:52 IST" duration-ms="2969" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase26OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:52 IST" name="tearDown" finished-at="2025-09-17T13:36:53 IST" duration-ms="330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase26OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase26OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:53 IST" name="setUp" finished-at="2025-09-17T13:36:54 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase2OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase2OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:54 IST" name="verifyTestCase2OpensAsDropdown" finished-at="2025-09-17T13:36:57 IST" duration-ms="3094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase2OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:57 IST" name="tearDown" finished-at="2025-09-17T13:36:57 IST" duration-ms="277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase2OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase2OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:57 IST" name="setUp" finished-at="2025-09-17T13:36:58 IST" duration-ms="959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase3OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase3OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:36:58 IST" name="verifyTestCase3OpensAsDropdown" finished-at="2025-09-17T13:37:01 IST" duration-ms="3094" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase3OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:01 IST" name="tearDown" finished-at="2025-09-17T13:37:01 IST" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase3OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase3OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:01 IST" name="setUp" finished-at="2025-09-17T13:37:02 IST" duration-ms="975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase4OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase4OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:02 IST" name="verifyTestCase4OpensAsDropdown" finished-at="2025-09-17T13:37:05 IST" duration-ms="2981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase4OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:05 IST" name="tearDown" finished-at="2025-09-17T13:37:06 IST" duration-ms="293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase4OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase4OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:06 IST" name="setUp" finished-at="2025-09-17T13:37:07 IST" duration-ms="979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase5OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase5OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:07 IST" name="verifyTestCase5OpensAsDropdown" finished-at="2025-09-17T13:37:10 IST" duration-ms="3076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase5OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:10 IST" name="tearDown" finished-at="2025-09-17T13:37:10 IST" duration-ms="292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase5OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase5OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:10 IST" name="setUp" finished-at="2025-09-17T13:37:11 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase6OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase6OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:11 IST" name="verifyTestCase6OpensAsDropdown" finished-at="2025-09-17T13:37:14 IST" duration-ms="2892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase6OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:14 IST" name="tearDown" finished-at="2025-09-17T13:37:14 IST" duration-ms="294" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase6OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase6OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:14 IST" name="setUp" finished-at="2025-09-17T13:37:15 IST" duration-ms="964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase7OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase7OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:15 IST" name="verifyTestCase7OpensAsDropdown" finished-at="2025-09-17T13:37:18 IST" duration-ms="3090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase7OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:18 IST" name="tearDown" finished-at="2025-09-17T13:37:18 IST" duration-ms="263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase7OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase7OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:18 IST" name="setUp" finished-at="2025-09-17T13:37:19 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase8OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase8OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:19 IST" name="verifyTestCase8OpensAsDropdown" finished-at="2025-09-17T13:37:22 IST" duration-ms="2920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase8OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:22 IST" name="tearDown" finished-at="2025-09-17T13:37:23 IST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase8OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase8OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:23 IST" name="setUp" finished-at="2025-09-17T13:37:24 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestCasesUI_2.verifyTestCase9OpensAsDropdown() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCase9OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:24 IST" name="verifyTestCase9OpensAsDropdown" finished-at="2025-09-17T13:37:26 IST" duration-ms="2922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCase9OpensAsDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestCasesUI_2@1da2cb77]" started-at="2025-09-17T13:37:26 IST" name="tearDown" finished-at="2025-09-17T13:37:27 IST" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCase9OpensAsDropdown status=SUCCESS method=TestCasesUI_2.verifyTestCase9OpensAsDropdown()[pri:0, instance:Tests.TestCasesUI_2@1da2cb77] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.TestCasesUI_2 -->
      <class name="Tests.UI_Home_1">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:05:43 IST" name="setUp" finished-at="2025-09-17T14:05:44 IST" duration-ms="954" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_1.verifyAddToCartFromHomePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAddToCartFromHomePage()[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:05:44 IST" name="verifyAddToCartFromHomePage" finished-at="2025-09-17T14:05:46 IST" duration-ms="2237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddToCartFromHomePage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:05:46 IST" name="tearDown" finished-at="2025-09-17T14:05:46 IST" duration-ms="381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddToCartFromHomePage status=SUCCESS method=UI_Home_1.verifyAddToCartFromHomePage()[pri:0, instance:Tests.UI_Home_1@f5acb9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:05:46 IST" name="setUp" finished-at="2025-09-17T14:05:47 IST" duration-ms="959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_1.verifyApistestingpage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyApistestingpage()[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:05:47 IST" name="verifyApistestingpage" finished-at="2025-09-17T14:05:54 IST" duration-ms="6510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApistestingpage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:05:54 IST" name="tearDown" finished-at="2025-09-17T14:05:54 IST" duration-ms="380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyApistestingpage status=SUCCESS method=UI_Home_1.verifyApistestingpage()[pri:0, instance:Tests.UI_Home_1@f5acb9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:05:54 IST" name="setUp" finished-at="2025-09-17T14:05:55 IST" duration-ms="984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_1.verifyBrandColumnFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBrandColumnFunctionality()[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:05:55 IST" name="verifyBrandColumnFunctionality" finished-at="2025-09-17T14:06:12 IST" duration-ms="17435" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: By.xpath: //a[contains(text(),'Polo')] (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:34923}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:34923/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 04cec105fdcad5d9b569615d54539e5b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: By.xpath: //a[contains(text(),'Polo')] (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:34923}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:34923/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 04cec105fdcad5d9b569615d54539e5b
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at Tests.UI_Home_1.verifyBrandColumnFunctionality(UI_Home_1.java:162)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBrandColumnFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:12 IST" name="tearDown" finished-at="2025-09-17T14:06:13 IST" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBrandColumnFunctionality status=FAILURE method=UI_Home_1.verifyBrandColumnFunctionality()[pri:0, instance:Tests.UI_Home_1@f5acb9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:13 IST" name="setUp" finished-at="2025-09-17T14:06:14 IST" duration-ms="1012" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_1.verifyCarousalarrow() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCarousalarrow()[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:14 IST" name="verifyCarousalarrow" finished-at="2025-09-17T14:06:17 IST" duration-ms="3609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCarousalarrow -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:17 IST" name="tearDown" finished-at="2025-09-17T14:06:18 IST" duration-ms="325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCarousalarrow status=SUCCESS method=UI_Home_1.verifyCarousalarrow()[pri:0, instance:Tests.UI_Home_1@f5acb9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:18 IST" name="setUp" finished-at="2025-09-17T14:06:19 IST" duration-ms="1011" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_1.verifyCategoryColumnFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCategoryColumnFunctionality()[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:19 IST" name="verifyCategoryColumnFunctionality" finished-at="2025-09-17T14:06:25 IST" duration-ms="6655" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCategoryColumnFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:25 IST" name="tearDown" finished-at="2025-09-17T14:06:26 IST" duration-ms="550" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCategoryColumnFunctionality status=SUCCESS method=UI_Home_1.verifyCategoryColumnFunctionality()[pri:0, instance:Tests.UI_Home_1@f5acb9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:26 IST" name="setUp" finished-at="2025-09-17T14:06:27 IST" duration-ms="963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_1.verifyCursorChangesOnHover()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangesOnHover()[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:27 IST" name="verifyCursorChangesOnHover" finished-at="2025-09-17T14:06:30 IST" duration-ms="2900" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":".features_items .productPASS"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0a8821176da0ea25f042c3a1d3976bf8, findElement {using=css selector, value=.features_items .productPASS}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:35167}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:35167/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0a8821176da0ea25f042c3a1d3976bf8]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":".features_items .productPASS"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0a8821176da0ea25f042c3a1d3976bf8, findElement {using=css selector, value=.features_items .productPASS}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:35167}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:35167/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0a8821176da0ea25f042c3a1d3976bf8
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.UI_Home_1.verifyCursorChangesOnHover(UI_Home_1.java:50)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangesOnHover -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:30 IST" name="tearDown" finished-at="2025-09-17T14:06:30 IST" duration-ms="341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangesOnHover status=FAILURE method=UI_Home_1.verifyCursorChangesOnHover()[pri:0, instance:Tests.UI_Home_1@f5acb9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:30 IST" name="setUp" finished-at="2025-09-17T14:06:31 IST" duration-ms="978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_1.verifyHomepageBannerLoads()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyHomepageBannerLoads()[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:31 IST" name="verifyHomepageBannerLoads" finished-at="2025-09-17T14:06:34 IST" duration-ms="2828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHomepageBannerLoads -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:34 IST" name="tearDown" finished-at="2025-09-17T14:06:34 IST" duration-ms="359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHomepageBannerLoads status=SUCCESS method=UI_Home_1.verifyHomepageBannerLoads()[pri:0, instance:Tests.UI_Home_1@f5acb9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:34 IST" name="setUp" finished-at="2025-09-17T14:06:35 IST" duration-ms="956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home_1.verifySlideshowIsWorking()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySlideshowIsWorking()[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:35 IST" name="verifySlideshowIsWorking" finished-at="2025-09-17T14:06:44 IST" duration-ms="8576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySlideshowIsWorking -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home_1@f5acb9d]" started-at="2025-09-17T14:06:44 IST" name="tearDown" finished-at="2025-09-17T14:06:44 IST" duration-ms="348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySlideshowIsWorking status=SUCCESS method=UI_Home_1.verifySlideshowIsWorking()[pri:0, instance:Tests.UI_Home_1@f5acb9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.UI_Home_1 -->
      <class name="Tests.Login_1">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:06 IST" name="setUp" finished-at="2025-09-17T14:00:07 IST" duration-ms="988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_1.verifyLoginInputAcceptsUserInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginInputAcceptsUserInput()[pri:1, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:07 IST" name="verifyLoginInputAcceptsUserInput" finished-at="2025-09-17T14:00:13 IST" duration-ms="6816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginInputAcceptsUserInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:13 IST" name="tearDown" finished-at="2025-09-17T14:00:14 IST" duration-ms="351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginInputAcceptsUserInput status=SUCCESS method=Login_1.verifyLoginInputAcceptsUserInput()[pri:1, instance:Tests.Login_1@1e04fa0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:14 IST" name="setUp" finished-at="2025-09-17T14:00:15 IST" duration-ms="1048" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_1.verifySuccessfulLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySuccessfulLogin()[pri:2, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:15 IST" name="verifySuccessfulLogin" finished-at="2025-09-17T14:00:23 IST" duration-ms="8191" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[contains(text(),'Logout')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [39f5cb9f6c1c2fa63857148786963684, findElement {using=xpath, value=//a[contains(text(),'Logout')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:31543}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:31543/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 39f5cb9f6c1c2fa63857148786963684]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[contains(text(),'Logout')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [39f5cb9f6c1c2fa63857148786963684, findElement {using=xpath, value=//a[contains(text(),'Logout')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:31543}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:31543/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 39f5cb9f6c1c2fa63857148786963684
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Login_1.verifySuccessfulLogin(Login_1.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfulLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:23 IST" name="tearDown" finished-at="2025-09-17T14:00:23 IST" duration-ms="503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfulLogin status=FAILURE method=Login_1.verifySuccessfulLogin()[pri:2, instance:Tests.Login_1@1e04fa0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:23 IST" name="setUp" finished-at="2025-09-17T14:00:24 IST" duration-ms="975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_1.verifyLoginWithValidUserInvalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidUserInvalidPassword()[pri:3, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:24 IST" name="verifyLoginWithValidUserInvalidPassword" finished-at="2025-09-17T14:00:32 IST" duration-ms="7961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidUserInvalidPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:32 IST" name="tearDown" finished-at="2025-09-17T14:00:33 IST" duration-ms="388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginWithValidUserInvalidPassword status=SUCCESS method=Login_1.verifyLoginWithValidUserInvalidPassword()[pri:3, instance:Tests.Login_1@1e04fa0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:33 IST" name="setUp" finished-at="2025-09-17T14:00:34 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_1.verifyLoginWithInvalidUserValidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithInvalidUserValidPassword()[pri:4, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:34 IST" name="verifyLoginWithInvalidUserValidPassword" finished-at="2025-09-17T14:00:43 IST" duration-ms="9617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidUserValidPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:43 IST" name="tearDown" finished-at="2025-09-17T14:00:44 IST" duration-ms="389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginWithInvalidUserValidPassword status=SUCCESS method=Login_1.verifyLoginWithInvalidUserValidPassword()[pri:4, instance:Tests.Login_1@1e04fa0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:44 IST" name="setUp" finished-at="2025-09-17T14:00:45 IST" duration-ms="970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_1.verifyLoginWithInvalidUserInvalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithInvalidUserInvalidPassword()[pri:5, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:45 IST" name="verifyLoginWithInvalidUserInvalidPassword" finished-at="2025-09-17T14:00:55 IST" duration-ms="9842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidUserInvalidPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_1@1e04fa0a]" started-at="2025-09-17T14:00:55 IST" name="tearDown" finished-at="2025-09-17T14:00:55 IST" duration-ms="500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginWithInvalidUserInvalidPassword status=SUCCESS method=Login_1.verifyLoginWithInvalidUserInvalidPassword()[pri:5, instance:Tests.Login_1@1e04fa0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Login_1 -->
      <class name="Tests.Login_2">
        <test-method signature="testLoginUsingLoginButtonWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:Tests.Login_2@618425b5]" started-at="2025-09-17T14:04:39 IST" name="testLoginUsingLoginButtonWithValidCredentials" data-provider="loginCredentials" finished-at="2025-09-17T14:04:39 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.ss.usermodel.Sheet.getLastRowNum()" because "sheet" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.lang.NullPointerException: Cannot invoke "org.apache.poi.ss.usermodel.Sheet.getLastRowNum()" because "sheet" is null
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:58)
at org.testng.internal.invokers.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:159)
at org.testng.internal.Parameters.handleParameters(Parameters.java:809)
at org.testng.internal.Parameters.handleParameters(Parameters.java:734)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:949)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.lang.NullPointerException: Cannot invoke "org.apache.poi.ss.usermodel.Sheet.getLastRowNum()" because "sheet" is null
at com.automationproj.utilities.ExcelUtils.getExcelData(ExcelUtils.java:20)
at Tests.Login_2.getLoginCredentials(Login_2.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:54)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginUsingLoginButtonWithValidCredentials -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_2@618425b5]" started-at="2025-09-17T14:04:39 IST" name="setUp" finished-at="2025-09-17T14:04:40 IST" duration-ms="980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_2.testLoginWithoutUsernameAndPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLoginWithoutUsernameAndPassword()[pri:2, instance:Tests.Login_2@618425b5]" started-at="2025-09-17T14:04:40 IST" name="testLoginWithoutUsernameAndPassword" finished-at="2025-09-17T14:04:42 IST" duration-ms="2403" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"p[style='color: red;']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ae5c874cf61ce55f85586ace6e50107d, findElement {using=css selector, value=p[style='color: red;']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:34076}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:34076/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ae5c874cf61ce55f85586ace6e50107d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"p[style='color: red;']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ae5c874cf61ce55f85586ace6e50107d, findElement {using=css selector, value=p[style='color: red;']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:34076}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:34076/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ae5c874cf61ce55f85586ace6e50107d
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Login_2.testLoginWithoutUsernameAndPassword(Login_2.java:32)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithoutUsernameAndPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_2@618425b5]" started-at="2025-09-17T14:04:42 IST" name="tearDown" finished-at="2025-09-17T14:04:43 IST" duration-ms="483" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithoutUsernameAndPassword status=FAILURE method=Login_2.testLoginWithoutUsernameAndPassword()[pri:2, instance:Tests.Login_2@618425b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_2@618425b5]" started-at="2025-09-17T14:04:43 IST" name="setUp" finished-at="2025-09-17T14:04:44 IST" duration-ms="979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_2.testLoginWithUsernameWithoutPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLoginWithUsernameWithoutPassword()[pri:3, instance:Tests.Login_2@618425b5]" started-at="2025-09-17T14:04:44 IST" name="testLoginWithUsernameWithoutPassword" finished-at="2025-09-17T14:04:46 IST" duration-ms="2448" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"p[style='color: red;']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6c16b82be2bd929e1630ed4599f8387a, findElement {using=css selector, value=p[style='color: red;']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:34115}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:34115/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6c16b82be2bd929e1630ed4599f8387a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"p[style='color: red;']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6c16b82be2bd929e1630ed4599f8387a, findElement {using=css selector, value=p[style='color: red;']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:34115}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:34115/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6c16b82be2bd929e1630ed4599f8387a
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Login_2.testLoginWithUsernameWithoutPassword(Login_2.java:52)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithUsernameWithoutPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_2@618425b5]" started-at="2025-09-17T14:04:46 IST" name="tearDown" finished-at="2025-09-17T14:04:46 IST" duration-ms="485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithUsernameWithoutPassword status=FAILURE method=Login_2.testLoginWithUsernameWithoutPassword()[pri:3, instance:Tests.Login_2@618425b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_2@618425b5]" started-at="2025-09-17T14:04:46 IST" name="setUp" finished-at="2025-09-17T14:04:47 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_2.testLoginWithoutUsernameWithPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLoginWithoutUsernameWithPassword()[pri:4, instance:Tests.Login_2@618425b5]" started-at="2025-09-17T14:04:47 IST" name="testLoginWithoutUsernameWithPassword" finished-at="2025-09-17T14:04:50 IST" duration-ms="2454" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"p[style='color: red;']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6ddcf3f01005bec21bc15cb701f07159, findElement {using=css selector, value=p[style='color: red;']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:34163}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:34163/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6ddcf3f01005bec21bc15cb701f07159]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"p[style='color: red;']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6ddcf3f01005bec21bc15cb701f07159, findElement {using=css selector, value=p[style='color: red;']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:34163}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:34163/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 6ddcf3f01005bec21bc15cb701f07159
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Login_2.testLoginWithoutUsernameWithPassword(Login_2.java:72)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginWithoutUsernameWithPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_2@618425b5]" started-at="2025-09-17T14:04:50 IST" name="tearDown" finished-at="2025-09-17T14:04:50 IST" duration-ms="464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginWithoutUsernameWithPassword status=FAILURE method=Login_2.testLoginWithoutUsernameWithPassword()[pri:4, instance:Tests.Login_2@618425b5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testDeleteAccountAfterLogin(java.lang.String,java.lang.String)[pri:5, instance:Tests.Login_2@618425b5]" started-at="2025-09-17T14:04:50 IST" name="testDeleteAccountAfterLogin" data-provider="loginCredentials" finished-at="2025-09-17T14:04:50 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.apache.poi.ss.usermodel.Sheet.getLastRowNum()" because "sheet" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.lang.NullPointerException: Cannot invoke "org.apache.poi.ss.usermodel.Sheet.getLastRowNum()" because "sheet" is null
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:58)
at org.testng.internal.invokers.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:159)
at org.testng.internal.Parameters.handleParameters(Parameters.java:809)
at org.testng.internal.Parameters.handleParameters(Parameters.java:734)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:949)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.lang.NullPointerException: Cannot invoke "org.apache.poi.ss.usermodel.Sheet.getLastRowNum()" because "sheet" is null
at com.automationproj.utilities.ExcelUtils.getExcelData(ExcelUtils.java:20)
at Tests.Login_2.getLoginCredentials(Login_2.java:20)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:54)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteAccountAfterLogin -->
      </class> <!-- Tests.Login_2 -->
      <class name="Tests.Fun_Login_Excel">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:24:50 IST" name="setUp" finished-at="2025-09-17T13:24:51 IST" duration-ms="977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyNavigateToLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyNavigateToLoginPage()[pri:1, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:24:51 IST" name="verifyNavigateToLoginPage" finished-at="2025-09-17T13:24:58 IST" duration-ms="7155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNavigateToLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:24:58 IST" name="tearDown" finished-at="2025-09-17T13:24:59 IST" duration-ms="473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyNavigateToLoginPage status=SUCCESS method=Fun_Login_Excel.verifyNavigateToLoginPage()[pri:1, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:24:59 IST" name="setUp" finished-at="2025-09-17T13:25:00 IST" duration-ms="978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:00 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:25:07 IST" duration-ms="6868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid Login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[syedsuhail@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@3546a29f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:07 IST" name="tearDown" finished-at="2025-09-17T13:25:07 IST" duration-ms="508" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=SUCCESS method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:07 IST" name="setUp" finished-at="2025-09-17T13:25:08 IST" duration-ms="1013" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:08 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:25:15 IST" duration-ms="6604" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid Email]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[invalidEmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@d70bdec]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ca9df90f3b9cbd6abb5ac7bedff707ee, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:14585}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:14585/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ca9df90f3b9cbd6abb5ac7bedff707ee]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ca9df90f3b9cbd6abb5ac7bedff707ee, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:14585}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:14585/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ca9df90f3b9cbd6abb5ac7bedff707ee
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Fun_Login_Excel.verifyLoginScenarios(Fun_Login_Excel.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:15 IST" name="tearDown" finished-at="2025-09-17T13:25:15 IST" duration-ms="526" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=FAILURE method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:15 IST" name="setUp" finished-at="2025-09-17T13:25:16 IST" duration-ms="1031" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:16 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:25:24 IST" duration-ms="7736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid Password]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[syedsuhail@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wrongpass]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@9e32f4a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:24 IST" name="tearDown" finished-at="2025-09-17T13:25:25 IST" duration-ms="368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=SUCCESS method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:25 IST" name="setUp" finished-at="2025-09-17T13:25:26 IST" duration-ms="968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:26 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:25:34 IST" duration-ms="8356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid Username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@3495b685]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:34 IST" name="tearDown" finished-at="2025-09-17T13:25:34 IST" duration-ms="474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=SUCCESS method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:34 IST" name="setUp" finished-at="2025-09-17T13:25:35 IST" duration-ms="966" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:35 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:25:41 IST" duration-ms="6007" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid Username + Password]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fake@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wrong123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@372bc034]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:41 IST" name="tearDown" finished-at="2025-09-17T13:25:42 IST" duration-ms="334" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=SUCCESS method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:42 IST" name="setUp" finished-at="2025-09-17T13:25:43 IST" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:43 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:25:48 IST" duration-ms="5287" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid Username + Empty Pw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[syedsuhail@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@63782ad0]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e33fb1e4cdf6a1f625441223d1f26788, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:14917}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:14917/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e33fb1e4cdf6a1f625441223d1f26788]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e33fb1e4cdf6a1f625441223d1f26788, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:14917}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:14917/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: e33fb1e4cdf6a1f625441223d1f26788
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Fun_Login_Excel.verifyLoginScenarios(Fun_Login_Excel.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:48 IST" name="tearDown" finished-at="2025-09-17T13:25:48 IST" duration-ms="486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=FAILURE method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:48 IST" name="setUp" finished-at="2025-09-17T13:25:49 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:49 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:25:57 IST" duration-ms="7865" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Empty Username + Valid Pw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@19a39f7]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5351cedae9c7f3e318617591cb7c650f, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:14977}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:14977/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5351cedae9c7f3e318617591cb7c650f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5351cedae9c7f3e318617591cb7c650f, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:14977}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:14977/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5351cedae9c7f3e318617591cb7c650f
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Fun_Login_Excel.verifyLoginScenarios(Fun_Login_Excel.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:57 IST" name="tearDown" finished-at="2025-09-17T13:25:58 IST" duration-ms="398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=FAILURE method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:58 IST" name="setUp" finished-at="2025-09-17T13:25:59 IST" duration-ms="1021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:25:59 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:26:06 IST" duration-ms="6951" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Empty Username + Empty Pw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@1d5f1fa5]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [44db9e7aea1932f99367dc8625a883c3, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15058}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15058/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 44db9e7aea1932f99367dc8625a883c3]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [44db9e7aea1932f99367dc8625a883c3, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15058}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15058/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 44db9e7aea1932f99367dc8625a883c3
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Fun_Login_Excel.verifyLoginScenarios(Fun_Login_Excel.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:06 IST" name="tearDown" finished-at="2025-09-17T13:26:06 IST" duration-ms="465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=FAILURE method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:06 IST" name="setUp" finished-at="2025-09-17T13:26:07 IST" duration-ms="954" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:07 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:26:15 IST" duration-ms="7770" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid Username + Empty Pw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@4911d84]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fad6d8c2c08c90d47cf384d50cb58d09, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15153}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15153/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fad6d8c2c08c90d47cf384d50cb58d09]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fad6d8c2c08c90d47cf384d50cb58d09, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15153}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15153/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fad6d8c2c08c90d47cf384d50cb58d09
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Fun_Login_Excel.verifyLoginScenarios(Fun_Login_Excel.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:15 IST" name="tearDown" finished-at="2025-09-17T13:26:15 IST" duration-ms="443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=FAILURE method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:15 IST" name="setUp" finished-at="2025-09-17T13:26:16 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:16 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:26:27 IST" duration-ms="10507" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Empty Username + Invalid Pw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wrong123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@22e494dc]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9d1ba6ec0ea4e4be593548b589c300c0, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15244}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15244/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9d1ba6ec0ea4e4be593548b589c300c0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9d1ba6ec0ea4e4be593548b589c300c0, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15244}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15244/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9d1ba6ec0ea4e4be593548b589c300c0
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Fun_Login_Excel.verifyLoginScenarios(Fun_Login_Excel.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:27 IST" name="tearDown" finished-at="2025-09-17T13:26:27 IST" duration-ms="464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=FAILURE method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:27 IST" name="setUp" finished-at="2025-09-17T13:26:28 IST" duration-ms="957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:28 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:26:34 IST" duration-ms="5393" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@5c38ab84]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7d0e4e4340eb1ccdab5f38b964246d17, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15342}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15342/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7d0e4e4340eb1ccdab5f38b964246d17]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7d0e4e4340eb1ccdab5f38b964246d17, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15342}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15342/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7d0e4e4340eb1ccdab5f38b964246d17
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Fun_Login_Excel.verifyLoginScenarios(Fun_Login_Excel.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:34 IST" name="tearDown" finished-at="2025-09-17T13:26:34 IST" duration-ms="473" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=FAILURE method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:34 IST" name="setUp" finished-at="2025-09-17T13:26:35 IST" duration-ms="949" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:35 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:26:42 IST" duration-ms="6603" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@470a65ae]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c882b239278002bdb9ba873c4ccdc2a0, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15423}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15423/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c882b239278002bdb9ba873c4ccdc2a0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c882b239278002bdb9ba873c4ccdc2a0, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15423}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15423/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c882b239278002bdb9ba873c4ccdc2a0
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Fun_Login_Excel.verifyLoginScenarios(Fun_Login_Excel.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:42 IST" name="tearDown" finished-at="2025-09-17T13:26:42 IST" duration-ms="470" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=FAILURE method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:42 IST" name="setUp" finished-at="2025-09-17T13:26:43 IST" duration-ms="996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:43 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:26:50 IST" duration-ms="6561" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@11518582]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c746f675308e88bf84d71519b20db6f6, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15526}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15526/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c746f675308e88bf84d71519b20db6f6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c746f675308e88bf84d71519b20db6f6, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15526}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15526/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c746f675308e88bf84d71519b20db6f6
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Fun_Login_Excel.verifyLoginScenarios(Fun_Login_Excel.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:50 IST" name="tearDown" finished-at="2025-09-17T13:26:50 IST" duration-ms="466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=FAILURE method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:50 IST" name="setUp" finished-at="2025-09-17T13:26:51 IST" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:51 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:26:55 IST" duration-ms="3823" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@5a64f52b]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5e9039b311c4ab7fac70afdf7065f406, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15615}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15615/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5e9039b311c4ab7fac70afdf7065f406]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5e9039b311c4ab7fac70afdf7065f406, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15615}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15615/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5e9039b311c4ab7fac70afdf7065f406
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Fun_Login_Excel.verifyLoginScenarios(Fun_Login_Excel.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:55 IST" name="tearDown" finished-at="2025-09-17T13:26:55 IST" duration-ms="466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=FAILURE method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:55 IST" name="setUp" finished-at="2025-09-17T13:26:56 IST" duration-ms="962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:26:56 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:27:03 IST" duration-ms="6830" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@488e27f3]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7f7ae89d77cf3f7507547195f8b8307b, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15674}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15674/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7f7ae89d77cf3f7507547195f8b8307b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [7f7ae89d77cf3f7507547195f8b8307b, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15674}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15674/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 7f7ae89d77cf3f7507547195f8b8307b
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Fun_Login_Excel.verifyLoginScenarios(Fun_Login_Excel.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:03 IST" name="tearDown" finished-at="2025-09-17T13:27:04 IST" duration-ms="499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=FAILURE method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:04 IST" name="setUp" finished-at="2025-09-17T13:27:05 IST" duration-ms="977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:05 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:27:10 IST" duration-ms="5024" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@25d48650]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a3395c0e72d28ec280dd024aff40ef93, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15762}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15762/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a3395c0e72d28ec280dd024aff40ef93]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a3395c0e72d28ec280dd024aff40ef93, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15762}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15762/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a3395c0e72d28ec280dd024aff40ef93
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Fun_Login_Excel.verifyLoginScenarios(Fun_Login_Excel.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:10 IST" name="tearDown" finished-at="2025-09-17T13:27:10 IST" duration-ms="466" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=FAILURE method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:10 IST" name="setUp" finished-at="2025-09-17T13:27:11 IST" duration-ms="968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:11 IST" name="verifyLoginScenarios" data-provider="logindata" finished-at="2025-09-17T13:27:37 IST" duration-ms="25866" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@6c7c8480]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9d5d58cab7fc9d043f9be922e8c724e5, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15845}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15845/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9d5d58cab7fc9d043f9be922e8c724e5]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//p[contains(text(),'incorrect')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9d5d58cab7fc9d043f9be922e8c724e5, findElement {using=xpath, value=//p[contains(text(),'incorrect')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:15845}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:15845/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9d5d58cab7fc9d043f9be922e8c724e5
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Fun_Login_Excel.verifyLoginScenarios(Fun_Login_Excel.java:60)
at jdk.internal.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginScenarios -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:37 IST" name="tearDown" finished-at="2025-09-17T13:27:37 IST" duration-ms="443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginScenarios status=FAILURE method=Fun_Login_Excel.verifyLoginScenarios(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:2, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:37 IST" name="setUp" finished-at="2025-09-17T13:27:38 IST" duration-ms="969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:38 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:27:50 IST" duration-ms="12022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid Login]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[syedsuhail@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@6dd8b486]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:50 IST" name="tearDown" finished-at="2025-09-17T13:27:51 IST" duration-ms="435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:51 IST" name="setUp" finished-at="2025-09-17T13:27:52 IST" duration-ms="963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:52 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:27:52 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid Email]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[invalidEmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@3447a8c8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:52 IST" name="tearDown" finished-at="2025-09-17T13:27:52 IST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:52 IST" name="setUp" finished-at="2025-09-17T13:27:53 IST" duration-ms="962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:53 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:27:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid Password]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[syedsuhail@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wrongpass]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@7dd8fd4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:53 IST" name="tearDown" finished-at="2025-09-17T13:27:53 IST" duration-ms="345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:53 IST" name="setUp" finished-at="2025-09-17T13:27:54 IST" duration-ms="982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:54 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:27:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid Username]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@4e92818c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:54 IST" name="tearDown" finished-at="2025-09-17T13:27:55 IST" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:55 IST" name="setUp" finished-at="2025-09-17T13:27:56 IST" duration-ms="961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:56 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:27:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid Username + Password]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[fake@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wrong123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@5b04d9d8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:56 IST" name="tearDown" finished-at="2025-09-17T13:27:56 IST" duration-ms="328" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:56 IST" name="setUp" finished-at="2025-09-17T13:27:57 IST" duration-ms="1000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:57 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:27:57 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Valid Username + Empty Pw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[syedsuhail@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@41bd4c55]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:57 IST" name="tearDown" finished-at="2025-09-17T13:27:57 IST" duration-ms="283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:57 IST" name="setUp" finished-at="2025-09-17T13:27:58 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:58 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:27:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Empty Username + Valid Pw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Test@123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@471a604f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:58 IST" name="tearDown" finished-at="2025-09-17T13:27:59 IST" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:27:59 IST" name="setUp" finished-at="2025-09-17T13:28:00 IST" duration-ms="964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:00 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:28:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Empty Username + Empty Pw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@229705c7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:00 IST" name="tearDown" finished-at="2025-09-17T13:28:00 IST" duration-ms="286" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:00 IST" name="setUp" finished-at="2025-09-17T13:28:01 IST" duration-ms="962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:01 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:28:01 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Invalid Username + Empty Pw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong@gmail.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@49be369]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:01 IST" name="tearDown" finished-at="2025-09-17T13:28:01 IST" duration-ms="345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:01 IST" name="setUp" finished-at="2025-09-17T13:28:02 IST" duration-ms="952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:02 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:28:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Empty Username + Invalid Pw]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[wrong123]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@34109f85]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:02 IST" name="tearDown" finished-at="2025-09-17T13:28:02 IST" duration-ms="300" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:02 IST" name="setUp" finished-at="2025-09-17T13:28:03 IST" duration-ms="978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:03 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:28:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@ff521fe]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:03 IST" name="tearDown" finished-at="2025-09-17T13:28:04 IST" duration-ms="282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:04 IST" name="setUp" finished-at="2025-09-17T13:28:05 IST" duration-ms="974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:05 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:28:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@512ea916]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:05 IST" name="tearDown" finished-at="2025-09-17T13:28:05 IST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:05 IST" name="setUp" finished-at="2025-09-17T13:28:06 IST" duration-ms="978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:06 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:28:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@4b0d348d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:06 IST" name="tearDown" finished-at="2025-09-17T13:28:06 IST" duration-ms="296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:06 IST" name="setUp" finished-at="2025-09-17T13:28:07 IST" duration-ms="970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:07 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:28:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@55314435]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:07 IST" name="tearDown" finished-at="2025-09-17T13:28:07 IST" duration-ms="315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:07 IST" name="setUp" finished-at="2025-09-17T13:28:09 IST" duration-ms="1029" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:09 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:28:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@572a2745]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:09 IST" name="tearDown" finished-at="2025-09-17T13:28:09 IST" duration-ms="346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:09 IST" name="setUp" finished-at="2025-09-17T13:28:10 IST" duration-ms="960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:10 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:28:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@6ba60ce2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:10 IST" name="tearDown" finished-at="2025-09-17T13:28:10 IST" duration-ms="314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:10 IST" name="setUp" finished-at="2025-09-17T13:28:11 IST" duration-ms="963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:11 IST" name="verifyLogoutFunctionality" data-provider="logindata" finished-at="2025-09-17T13:28:11 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[[Ljava.lang.Object;@1cc14815]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoutFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:11 IST" name="tearDown" finished-at="2025-09-17T13:28:11 IST" duration-ms="352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoutFunctionality status=SUCCESS method=Fun_Login_Excel.verifyLogoutFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.String,[Ljava.lang.Object;)[pri:15, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:11 IST" name="setUp" finished-at="2025-09-17T13:28:12 IST" duration-ms="988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyScrollUp() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUp()[pri:16, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:12 IST" name="verifyScrollUp" finished-at="2025-09-17T13:28:32 IST" duration-ms="19114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:32 IST" name="tearDown" finished-at="2025-09-17T13:28:32 IST" duration-ms="487" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUp status=SUCCESS method=Fun_Login_Excel.verifyScrollUp()[pri:16, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:32 IST" name="setUp" finished-at="2025-09-17T13:28:33 IST" duration-ms="988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Login_Excel.verifyScrollDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDown()[pri:17, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:33 IST" name="verifyScrollDown" finished-at="2025-09-17T13:28:36 IST" duration-ms="2790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Login_Excel@22ef9844]" started-at="2025-09-17T13:28:36 IST" name="tearDown" finished-at="2025-09-17T13:28:36 IST" duration-ms="323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDown status=SUCCESS method=Fun_Login_Excel.verifyScrollDown()[pri:17, instance:Tests.Fun_Login_Excel@22ef9844] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Fun_Login_Excel -->
      <class name="Tests.APIUI_2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:54:54 IST" name="setUp" finished-at="2025-09-17T13:54:55 IST" duration-ms="947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown1()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:54:55 IST" name="verifyAPIDropdown1" finished-at="2025-09-17T13:54:58 IST" duration-ms="2694" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown1 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:54:58 IST" name="tearDown" finished-at="2025-09-17T13:54:58 IST" duration-ms="413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown1 status=SUCCESS method=APIUI_2.verifyAPIDropdown1()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:54:58 IST" name="setUp" finished-at="2025-09-17T13:54:59 IST" duration-ms="996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown10()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown10()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:54:59 IST" name="verifyAPIDropdown10" finished-at="2025-09-17T13:55:02 IST" duration-ms="2567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown10 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:02 IST" name="tearDown" finished-at="2025-09-17T13:55:02 IST" duration-ms="373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown10 status=SUCCESS method=APIUI_2.verifyAPIDropdown10()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:02 IST" name="setUp" finished-at="2025-09-17T13:55:03 IST" duration-ms="958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown11()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown11()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:03 IST" name="verifyAPIDropdown11" finished-at="2025-09-17T13:55:05 IST" duration-ms="1907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown11 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:05 IST" name="tearDown" finished-at="2025-09-17T13:55:05 IST" duration-ms="353" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown11 status=SUCCESS method=APIUI_2.verifyAPIDropdown11()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:05 IST" name="setUp" finished-at="2025-09-17T13:55:06 IST" duration-ms="950" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown12()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown12()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:06 IST" name="verifyAPIDropdown12" finished-at="2025-09-17T13:55:09 IST" duration-ms="2455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown12 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:09 IST" name="tearDown" finished-at="2025-09-17T13:55:09 IST" duration-ms="368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown12 status=SUCCESS method=APIUI_2.verifyAPIDropdown12()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:09 IST" name="setUp" finished-at="2025-09-17T13:55:10 IST" duration-ms="1006" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown13()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown13()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:10 IST" name="verifyAPIDropdown13" finished-at="2025-09-17T13:55:12 IST" duration-ms="2247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown13 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:12 IST" name="tearDown" finished-at="2025-09-17T13:55:13 IST" duration-ms="401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown13 status=SUCCESS method=APIUI_2.verifyAPIDropdown13()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:13 IST" name="setUp" finished-at="2025-09-17T13:55:14 IST" duration-ms="987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown14()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown14()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:14 IST" name="verifyAPIDropdown14" finished-at="2025-09-17T13:55:16 IST" duration-ms="2205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown14 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:16 IST" name="tearDown" finished-at="2025-09-17T13:55:16 IST" duration-ms="368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown14 status=SUCCESS method=APIUI_2.verifyAPIDropdown14()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:16 IST" name="setUp" finished-at="2025-09-17T13:55:17 IST" duration-ms="975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown2()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:17 IST" name="verifyAPIDropdown2" finished-at="2025-09-17T13:55:20 IST" duration-ms="2719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown2 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:20 IST" name="tearDown" finished-at="2025-09-17T13:55:20 IST" duration-ms="374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown2 status=SUCCESS method=APIUI_2.verifyAPIDropdown2()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:20 IST" name="setUp" finished-at="2025-09-17T13:55:21 IST" duration-ms="1010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown3()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown3()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:21 IST" name="verifyAPIDropdown3" finished-at="2025-09-17T13:55:23 IST" duration-ms="1955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown3 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:23 IST" name="tearDown" finished-at="2025-09-17T13:55:24 IST" duration-ms="407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown3 status=SUCCESS method=APIUI_2.verifyAPIDropdown3()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:24 IST" name="setUp" finished-at="2025-09-17T13:55:25 IST" duration-ms="960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown4()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown4()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:25 IST" name="verifyAPIDropdown4" finished-at="2025-09-17T13:55:27 IST" duration-ms="2506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown4 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:27 IST" name="tearDown" finished-at="2025-09-17T13:55:27 IST" duration-ms="281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown4 status=SUCCESS method=APIUI_2.verifyAPIDropdown4()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:27 IST" name="setUp" finished-at="2025-09-17T13:55:28 IST" duration-ms="968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown5()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown5()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:28 IST" name="verifyAPIDropdown5" finished-at="2025-09-17T13:55:31 IST" duration-ms="2488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown5 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:31 IST" name="tearDown" finished-at="2025-09-17T13:55:31 IST" duration-ms="384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown5 status=SUCCESS method=APIUI_2.verifyAPIDropdown5()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:31 IST" name="setUp" finished-at="2025-09-17T13:55:32 IST" duration-ms="1037" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown6()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown6()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:32 IST" name="verifyAPIDropdown6" finished-at="2025-09-17T13:55:34 IST" duration-ms="1908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown6 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:34 IST" name="tearDown" finished-at="2025-09-17T13:55:35 IST" duration-ms="351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown6 status=SUCCESS method=APIUI_2.verifyAPIDropdown6()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:35 IST" name="setUp" finished-at="2025-09-17T13:55:36 IST" duration-ms="984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown7()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown7()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:36 IST" name="verifyAPIDropdown7" finished-at="2025-09-17T13:55:38 IST" duration-ms="2521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown7 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:38 IST" name="tearDown" finished-at="2025-09-17T13:55:39 IST" duration-ms="427" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown7 status=SUCCESS method=APIUI_2.verifyAPIDropdown7()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:39 IST" name="setUp" finished-at="2025-09-17T13:55:40 IST" duration-ms="973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown8()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown8()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:40 IST" name="verifyAPIDropdown8" finished-at="2025-09-17T13:55:42 IST" duration-ms="2549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown8 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:42 IST" name="tearDown" finished-at="2025-09-17T13:55:42 IST" duration-ms="369" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown8 status=SUCCESS method=APIUI_2.verifyAPIDropdown8()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:42 IST" name="setUp" finished-at="2025-09-17T13:55:43 IST" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.APIUI_2.verifyAPIDropdown9()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIDropdown9()[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:43 IST" name="verifyAPIDropdown9" finished-at="2025-09-17T13:55:46 IST" duration-ms="2660" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIDropdown9 -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.APIUI_2@6cd28fa7]" started-at="2025-09-17T13:55:46 IST" name="tearDown" finished-at="2025-09-17T13:55:46 IST" duration-ms="380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIDropdown9 status=SUCCESS method=APIUI_2.verifyAPIDropdown9()[pri:0, instance:Tests.APIUI_2@6cd28fa7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.APIUI_2 -->
      <class name="Tests.Fun_Reg_Excel">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:37:27 IST" name="setUp" finished-at="2025-09-17T13:37:28 IST" duration-ms="1000" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:37:28 IST" name="verifySignupFlows" data-provider="signupData" finished-at="2025-09-17T13:37:35 IST" duration-ms="6892" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Navigate to Signup Page]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[info]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignupFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:37:35 IST" name="tearDown" finished-at="2025-09-17T13:37:35 IST" duration-ms="476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySignupFlows status=SUCCESS method=Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:37:35 IST" name="setUp" finished-at="2025-09-17T13:37:36 IST" duration-ms="941" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:37:36 IST" name="verifySignupFlows" data-provider="signupData" finished-at="2025-09-17T13:37:45 IST" duration-ms="8788" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name valid input]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Syed Mohammed]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[signup1+auto@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected registration page after signup but wasn't navigated. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected registration page after signup but wasn't navigated. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifySignupFlows(Fun_Reg_Excel.java:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignupFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:37:45 IST" name="tearDown" finished-at="2025-09-17T13:37:45 IST" duration-ms="530" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySignupFlows status=FAILURE method=Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:37:45 IST" name="setUp" finished-at="2025-09-17T13:37:46 IST" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:37:46 IST" name="verifySignupFlows" data-provider="signupData" finished-at="2025-09-17T13:37:55 IST" duration-ms="8649" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name invalid input]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[signup2+auto@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected signup to fail but it proceeded. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected signup to fail but it proceeded. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifySignupFlows(Fun_Reg_Excel.java:214)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignupFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:37:55 IST" name="tearDown" finished-at="2025-09-17T13:37:55 IST" duration-ms="389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySignupFlows status=FAILURE method=Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:37:55 IST" name="setUp" finished-at="2025-09-17T13:37:56 IST" duration-ms="946" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:37:56 IST" name="verifySignupFlows" data-provider="signupData" finished-at="2025-09-17T13:38:19 IST" duration-ms="22474" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Email valid input]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ValidUser]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[valid.email+signup@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected registration page after signup but wasn't navigated. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected registration page after signup but wasn't navigated. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifySignupFlows(Fun_Reg_Excel.java:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignupFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:19 IST" name="tearDown" finished-at="2025-09-17T13:38:19 IST" duration-ms="402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySignupFlows status=FAILURE method=Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:19 IST" name="setUp" finished-at="2025-09-17T13:38:20 IST" duration-ms="962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:20 IST" name="verifySignupFlows" data-provider="signupData" finished-at="2025-09-17T13:38:27 IST" duration-ms="6832" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Email invalid input]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[InvalidUser]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[invalidEmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignupFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:27 IST" name="tearDown" finished-at="2025-09-17T13:38:27 IST" duration-ms="493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySignupFlows status=SUCCESS method=Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:27 IST" name="setUp" finished-at="2025-09-17T13:38:28 IST" duration-ms="963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:28 IST" name="verifySignupFlows" data-provider="signupData" finished-at="2025-09-17T13:38:34 IST" duration-ms="5614" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sign up button click]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[QuickUser]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[quickuser+signup@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Expected registration page after signup but wasn't navigated. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Expected registration page after signup but wasn't navigated. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifySignupFlows(Fun_Reg_Excel.java:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignupFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:34 IST" name="tearDown" finished-at="2025-09-17T13:38:34 IST" duration-ms="309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySignupFlows status=FAILURE method=Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:34 IST" name="setUp" finished-at="2025-09-17T13:38:35 IST" duration-ms="977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:35 IST" name="verifySignupFlows" data-provider="signupData" finished-at="2025-09-17T13:38:43 IST" duration-ms="7871" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Already registered email]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ExistingUser]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[existing@example.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignupFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:43 IST" name="tearDown" finished-at="2025-09-17T13:38:44 IST" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySignupFlows status=SUCCESS method=Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:44 IST" name="setUp" finished-at="2025-09-17T13:38:45 IST" duration-ms="1020" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:45 IST" name="verifySignupFlows" data-provider="signupData" finished-at="2025-09-17T13:38:51 IST" duration-ms="6412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySignupFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:51 IST" name="tearDown" finished-at="2025-09-17T13:38:51 IST" duration-ms="455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySignupFlows status=SUCCESS method=Fun_Reg_Excel.verifySignupFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:52 IST" name="setUp" finished-at="2025-09-17T13:38:53 IST" duration-ms="970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:38:53 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:39:01 IST" duration-ms="8449" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Title radio Mr selection]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RegUser1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[reg1+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Pass@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[January]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1990]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[RegFirst]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[RegLast]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CompanyA]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Addr 1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Addr 2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[United States]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StateA]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityA]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9123456789]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:01 IST" name="tearDown" finished-at="2025-09-17T13:39:01 IST" duration-ms="516" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:01 IST" name="setUp" finished-at="2025-09-17T13:39:02 IST" duration-ms="946" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:02 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:39:10 IST" duration-ms="7856" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Title radio Mrs selection]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RegUser2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[reg2+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Pass@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[February]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1991]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[First2]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Last2]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CompanyB]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Addr1B]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Addr2B]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StateB]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityB]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[54321]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9123456790]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:10 IST" name="tearDown" finished-at="2025-09-17T13:39:11 IST" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:11 IST" name="setUp" finished-at="2025-09-17T13:39:12 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:12 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:39:20 IST" duration-ms="8193" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name valid in registration (first+last)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RegUser3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[reg3+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Pass@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[March]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1992]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[FirstValid]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[LastValid]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Comp]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Street 1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[PO Box]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Canada]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StateC]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityC]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[40001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9988776655]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:20 IST" name="tearDown" finished-at="2025-09-17T13:39:20 IST" duration-ms="434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:20 IST" name="setUp" finished-at="2025-09-17T13:39:21 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:21 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:39:32 IST" duration-ms="10322" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Name invalid in registration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12345]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[reg4+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Pass@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[April]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1993]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[123First]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[123Last]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CompX]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[A1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[A2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[United Kingdom]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StateUK]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityUK]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[560001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[7000000000]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:32 IST" name="tearDown" finished-at="2025-09-17T13:39:32 IST" duration-ms="499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:32 IST" name="setUp" finished-at="2025-09-17T13:39:33 IST" duration-ms="956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:33 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:39:40 IST" duration-ms="6964" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Email valid in registration]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RegUser5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[validreg@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Pass@123]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[15]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1994]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[FN]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[LN]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Co]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[AddrR1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[AddrR2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[Australia]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StateAUS]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityAUS]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[6000]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[6111111111]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:40 IST" name="tearDown" finished-at="2025-09-17T13:39:40 IST" duration-ms="366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:40 IST" name="setUp" finished-at="2025-09-17T13:39:41 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:41 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:39:50 IST" duration-ms="8403" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Password valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RegUser6]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[reg6+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[StrongPass1!]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[June]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1995]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[Fn6]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[Ln6]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[C6]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Addr61]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Addr62]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[St6]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[Ct6]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[110001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9000000000]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:50 IST" name="tearDown" finished-at="2025-09-17T13:39:50 IST" duration-ms="428" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:50 IST" name="setUp" finished-at="2025-09-17T13:39:51 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:51 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:39:59 IST" duration-ms="8306" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[DOB dropdowns check]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RegUser7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[reg7+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[DobPass1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[July]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1988]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[DFirst]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[DLast]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[DComp]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[DAddr1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[DAddr2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[USA]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[DState]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[DCity]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[20002]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9222222222]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:39:59 IST" name="tearDown" finished-at="2025-09-17T13:40:00 IST" duration-ms="502" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:00 IST" name="setUp" finished-at="2025-09-17T13:40:01 IST" duration-ms="958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:01 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:40:09 IST" duration-ms="8382" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Newsletter checkbox true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NewsUser]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[news+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Npass1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[August]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1990]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[NFirst]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[NLast]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[NComp]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[NAddr1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[NAddr2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StN]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CtN]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[500001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9000000000]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:09 IST" name="tearDown" finished-at="2025-09-17T13:40:10 IST" duration-ms="444" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:10 IST" name="setUp" finished-at="2025-09-17T13:40:11 IST" duration-ms="974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:11 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:40:17 IST" duration-ms="6159" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Offers checkbox true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[OfferUser]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[offer+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Opass1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[25]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[September]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1985]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[OFirst]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[OLast]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[OComp]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[OAddr1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[OAddr2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StO]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CtO]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[400001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9222222222]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:17 IST" name="tearDown" finished-at="2025-09-17T13:40:17 IST" duration-ms="461" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:17 IST" name="setUp" finished-at="2025-09-17T13:40:18 IST" duration-ms="977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:18 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:40:24 IST" duration-ms="5839" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[First name valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RegUser8]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[reg8+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[P@ss1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[October]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1996]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[FirstGood]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[LastGood]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CompG]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[AddrG1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[AddrG2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StateG]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityG]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[600001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9001112222]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:24 IST" name="tearDown" finished-at="2025-09-17T13:40:25 IST" duration-ms="440" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:25 IST" name="setUp" finished-at="2025-09-17T13:40:26 IST" duration-ms="960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:26 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:40:34 IST" duration-ms="8356" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[First name invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RegUser9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[reg9+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[P@ss2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[November]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1997]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[123First]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[LastI]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CoI]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[A1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[A2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[S]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityI]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[400001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9002223333]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:34 IST" name="tearDown" finished-at="2025-09-17T13:40:34 IST" duration-ms="418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:34 IST" name="setUp" finished-at="2025-09-17T13:40:35 IST" duration-ms="959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:35 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:40:43 IST" duration-ms="8127" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Last name invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RegUser10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[reg10+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[P@ss3]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[December]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1998]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[FirstI]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[123Last]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CoL]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[A11]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[A12]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[S]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityL]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[500001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9003334444]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:43 IST" name="tearDown" finished-at="2025-09-17T13:40:44 IST" duration-ms="395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:44 IST" name="setUp" finished-at="2025-09-17T13:40:45 IST" duration-ms="962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:45 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:40:54 IST" duration-ms="8840" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Company field check]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RegUser11]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[reg11+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[CompPass1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[January]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1992]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[CFn]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[CLn]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CompanyX]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Addr1X]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Addr2X]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StateX]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityX]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[600001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9004445555]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:54 IST" name="tearDown" finished-at="2025-09-17T13:40:54 IST" duration-ms="465" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:54 IST" name="setUp" finished-at="2025-09-17T13:40:55 IST" duration-ms="961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:40:55 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:41:03 IST" duration-ms="8399" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Address1 field]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RegUser12]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[reg12+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[AddrPass]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[February]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1991]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[A1F]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[A1L]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Co1]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Street 100]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StateA]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityA]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[122001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9005556666]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:41:03 IST" name="tearDown" finished-at="2025-09-17T13:41:04 IST" duration-ms="432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:41:04 IST" name="setUp" finished-at="2025-09-17T13:41:05 IST" duration-ms="993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:41:05 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:41:15 IST" duration-ms="10108" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Address2 field]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[RegUser13]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[reg13+auto@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Addr2Pass]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[27]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[March]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1990]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[A2F]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[A2L]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Co2]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Street 200]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Area 51]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StateB]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityB]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[210001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9006667777]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:41:15 IST" name="tearDown" finished-at="2025-09-17T13:41:15 IST" duration-ms="413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:41:15 IST" name="setUp" finished-at="2025-09-17T13:41:16 IST" duration-ms="992" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:41:16 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:41:25 IST" duration-ms="8765" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Country dropdown]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[CountryUser]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[country@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Country1]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[April]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1980]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[CF]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[CL]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[Co]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[Addr1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[Addr2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StateY]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityY]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[600001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9007778888]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:41:25 IST" name="tearDown" finished-at="2025-09-17T13:41:26 IST" duration-ms="526" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:41:26 IST" name="setUp" finished-at="2025-09-17T13:41:27 IST" duration-ms="959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:41:27 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:41:55 IST" duration-ms="28082" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[State valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[StateUser]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[stateuser@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[StatePass]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1982]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[SF]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[SL]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CoS]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[AddrS1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[AddrS2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[ValidState]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityS]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[700001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9008889999]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:41:55 IST" name="tearDown" finished-at="2025-09-17T13:41:55 IST" duration-ms="475" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:41:55 IST" name="setUp" finished-at="2025-09-17T13:41:56 IST" duration-ms="960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:41:56 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:42:04 IST" duration-ms="8279" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[State invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[StateInv]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[stateinv@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[StatePass2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[16]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[June]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1983]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[SF2]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[SL2]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CoS2]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[AddrS21]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[AddrS22]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[123State]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CitySI]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[700002]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9009990000]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:04 IST" name="tearDown" finished-at="2025-09-17T13:42:05 IST" duration-ms="378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:05 IST" name="setUp" finished-at="2025-09-17T13:42:06 IST" duration-ms="960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:06 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:42:15 IST" duration-ms="8829" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[City valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[CityUser]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cityuser@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[CityPass]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[July]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1984]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[CityF]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[CityL]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CompC]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[AddrC1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[AddrC2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StC]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[ValidCity]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[800001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9011112222]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:15 IST" name="tearDown" finished-at="2025-09-17T13:42:15 IST" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:15 IST" name="setUp" finished-at="2025-09-17T13:42:16 IST" duration-ms="962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:16 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:42:22 IST" duration-ms="6250" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[City invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[CityInv]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[cityinv@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[CityPass2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[August]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1986]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[CFI]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[CLI]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CoI]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[AddrI1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[AddrI2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StI]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[123City]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[800002]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9012223333]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:22 IST" name="tearDown" finished-at="2025-09-17T13:42:23 IST" duration-ms="441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:23 IST" name="setUp" finished-at="2025-09-17T13:42:24 IST" duration-ms="942" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:24 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:42:31 IST" duration-ms="7689" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Zip valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ZipUser]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[zipuser@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ZipPass]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[September]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1990]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[ZF]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[ZL]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[ZCo]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[ZAddr1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[ZAddr2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StZ]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityZ]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[560001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9123456780]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:31 IST" name="tearDown" finished-at="2025-09-17T13:42:32 IST" duration-ms="415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:32 IST" name="setUp" finished-at="2025-09-17T13:42:33 IST" duration-ms="964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:33 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:42:40 IST" duration-ms="7789" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Zip invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ZipInv]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[zipinv@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ZipPass2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[October]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1991]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[ZIF]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[ZIL]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[ZIComp]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[ZIAddr1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[ZIAddr2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StZI]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityZI]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[12ab]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9123456781]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:40 IST" name="tearDown" finished-at="2025-09-17T13:42:41 IST" duration-ms="396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:41 IST" name="setUp" finished-at="2025-09-17T13:42:42 IST" duration-ms="960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:42 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:42:51 IST" duration-ms="8725" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mobile valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[MobileUser]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mobileuser@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[MobPass]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[November]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1992]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[MF]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[ML]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[MComp]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[MAddr1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[MAddr2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StM]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityM]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[600001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9876543210]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:51 IST" name="tearDown" finished-at="2025-09-17T13:42:51 IST" duration-ms="445" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:51 IST" name="setUp" finished-at="2025-09-17T13:42:52 IST" duration-ms="978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:42:52 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:43:01 IST" duration-ms="9535" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Mobile invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[MobileInv]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[mobileinv@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[MobPass2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[December]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1993]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[MIF]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[MIL]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[MIComp]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[MIAddr1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[MIAddr2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StMI]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityMI]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[600002]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[abcd1234]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:01 IST" name="tearDown" finished-at="2025-09-17T13:43:02 IST" duration-ms="463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:02 IST" name="setUp" finished-at="2025-09-17T13:43:03 IST" duration-ms="955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:03 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:43:12 IST" duration-ms="8686" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Subscribe field valid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SubUser]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[subuser@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[SubPass]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[January]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1994]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[SF]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[SL]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[SCo]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[SAddr1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[SAddr2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StS]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityS]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[560001]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9001234567]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:12 IST" name="tearDown" finished-at="2025-09-17T13:43:12 IST" duration-ms="463" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:12 IST" name="setUp" finished-at="2025-09-17T13:43:13 IST" duration-ms="989" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:13 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:43:21 IST" duration-ms="7657" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Subscribe field invalid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SubInv]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[subinv@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[SubPass2]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[February]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1995]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[SIF]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[SIL]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[SICO]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[SIAddr1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[SIAddr2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StSI]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CitySI]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[560002]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9007654321]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:21 IST" name="tearDown" finished-at="2025-09-17T13:43:21 IST" duration-ms="420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:21 IST" name="setUp" finished-at="2025-09-17T13:43:22 IST" duration-ms="979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:22 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:43:30 IST" duration-ms="8274" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Create account button flow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[CreateUser]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[createuser@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[CreatePass]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[March]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1996]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[CF]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[CL]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CompCreate]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[AddrC1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[AddrC2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StC]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityC]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[600003]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9003334445]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:30 IST" name="tearDown" finished-at="2025-09-17T13:43:31 IST" duration-ms="495" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:31 IST" name="setUp" finished-at="2025-09-17T13:43:32 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:32 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:43:40 IST" duration-ms="7898" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Subscribe button flow]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SubsBtnUser]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[subsbtn@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[SubsPass]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[19]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[April]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1997]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[SBF]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[SBL]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[SBComp]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[SBAddr1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[SBAddr2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StSB]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CitySB]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[600004]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9004445556]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:40 IST" name="tearDown" finished-at="2025-09-17T13:43:40 IST" duration-ms="410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:40 IST" name="setUp" finished-at="2025-09-17T13:43:41 IST" duration-ms="990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:41 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:43:49 IST" duration-ms="7656" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Continue button after create]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mr]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ContUser]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[continue@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ContPass]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[May]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1998]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[CF]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[CL]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CompCon]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[CAddr1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[CAddr2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StCon]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityCon]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[600005]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9005556667]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[success]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:49 IST" name="tearDown" finished-at="2025-09-17T13:43:49 IST" duration-ms="462" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:49 IST" name="setUp" finished-at="2025-09-17T13:43:50 IST" duration-ms="962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:50 IST" name="verifyRegistrationFlows" data-provider="registrationData" finished-at="2025-09-17T13:43:59 IST" duration-ms="8598" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Registration with already registered email]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mrs]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[ExistingReg]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[existing@example.com]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[ExistPass]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[June]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[1999]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="10">
              <value>
                <![CDATA[EF]]>
              </value>
            </param>
            <param index="11">
              <value>
                <![CDATA[EL]]>
              </value>
            </param>
            <param index="12">
              <value>
                <![CDATA[CompE]]>
              </value>
            </param>
            <param index="13">
              <value>
                <![CDATA[EAddr1]]>
              </value>
            </param>
            <param index="14">
              <value>
                <![CDATA[EAddr2]]>
              </value>
            </param>
            <param index="15">
              <value>
                <![CDATA[India]]>
              </value>
            </param>
            <param index="16">
              <value>
                <![CDATA[StE]]>
              </value>
            </param>
            <param index="17">
              <value>
                <![CDATA[CityE]]>
              </value>
            </param>
            <param index="18">
              <value>
                <![CDATA[600006]]>
              </value>
            </param>
            <param index="19">
              <value>
                <![CDATA[9006667778]]>
              </value>
            </param>
            <param index="20">
              <value>
                <![CDATA[fail]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Registration page header not visible after signup. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Registration page header not visible after signup. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Fun_Reg_Excel.verifyRegistrationFlows(Fun_Reg_Excel.java:261)
at jdk.internal.reflect.GeneratedMethodAccessor71.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRegistrationFlows -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:59 IST" name="tearDown" finished-at="2025-09-17T13:43:59 IST" duration-ms="486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRegistrationFlows status=FAILURE method=Fun_Reg_Excel.verifyRegistrationFlows(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:2, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:43:59 IST" name="setUp" finished-at="2025-09-17T13:44:00 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyScrollDown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDown()[pri:90, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:44:00 IST" name="verifyScrollDown" finished-at="2025-09-17T13:44:04 IST" duration-ms="3579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:44:04 IST" name="tearDown" finished-at="2025-09-17T13:44:04 IST" duration-ms="321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDown status=SUCCESS method=Fun_Reg_Excel.verifyScrollDown()[pri:90, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:44:04 IST" name="setUp" finished-at="2025-09-17T13:44:05 IST" duration-ms="956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Fun_Reg_Excel.verifyScrollUp() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUp()[pri:91, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:44:05 IST" name="verifyScrollUp" finished-at="2025-09-17T13:44:10 IST" duration-ms="4406" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Fun_Reg_Excel@48f278eb]" started-at="2025-09-17T13:44:10 IST" name="tearDown" finished-at="2025-09-17T13:44:10 IST" duration-ms="431" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUp status=SUCCESS method=Fun_Reg_Excel.verifyScrollUp()[pri:91, instance:Tests.Fun_Reg_Excel@48f278eb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Fun_Reg_Excel -->
      <class name="Tests.TCpageTest">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TCpageTest@611889f4]" started-at="2025-09-17T13:34:24 IST" name="setUp" finished-at="2025-09-17T13:34:25 IST" duration-ms="951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TCpageTest.TC_TestCases_001_VerifyTestCasesButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_TestCases_001_VerifyTestCasesButton()[pri:1, instance:Tests.TCpageTest@611889f4]" started-at="2025-09-17T13:34:25 IST" name="TC_TestCases_001_VerifyTestCasesButton" finished-at="2025-09-17T13:34:33 IST" duration-ms="7932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_TestCases_001_VerifyTestCasesButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TCpageTest@611889f4]" started-at="2025-09-17T13:34:33 IST" name="tearDown" finished-at="2025-09-17T13:34:33 IST" duration-ms="366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_TestCases_001_VerifyTestCasesButton status=SUCCESS method=TCpageTest.TC_TestCases_001_VerifyTestCasesButton()[pri:1, instance:Tests.TCpageTest@611889f4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TCpageTest@611889f4]" started-at="2025-09-17T13:34:33 IST" name="setUp" finished-at="2025-09-17T13:34:34 IST" duration-ms="959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TCpageTest.TC_TestCases_002_ExpandAllPanelsAndTakeScreenshots()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_TestCases_002_ExpandAllPanelsAndTakeScreenshots()[pri:2, instance:Tests.TCpageTest@611889f4]" started-at="2025-09-17T13:34:34 IST" name="TC_TestCases_002_ExpandAllPanelsAndTakeScreenshots" finished-at="2025-09-17T13:35:05 IST" duration-ms="30725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_TestCases_002_ExpandAllPanelsAndTakeScreenshots -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TCpageTest@611889f4]" started-at="2025-09-17T13:35:05 IST" name="tearDown" finished-at="2025-09-17T13:35:05 IST" duration-ms="374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_TestCases_002_ExpandAllPanelsAndTakeScreenshots status=SUCCESS method=TCpageTest.TC_TestCases_002_ExpandAllPanelsAndTakeScreenshots()[pri:2, instance:Tests.TCpageTest@611889f4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TCpageTest@611889f4]" started-at="2025-09-17T13:35:05 IST" name="setUp" finished-at="2025-09-17T13:35:06 IST" duration-ms="974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TCpageTest.TC_TestCases_003_NavigateUrlsAndTakeScreenshots()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_TestCases_003_NavigateUrlsAndTakeScreenshots()[pri:3, instance:Tests.TCpageTest@611889f4]" started-at="2025-09-17T13:35:06 IST" name="TC_TestCases_003_NavigateUrlsAndTakeScreenshots" finished-at="2025-09-17T13:35:33 IST" duration-ms="26492" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <a data-toggle="collapse" href="#collapse4">...</a> is not clickable at point (295, 477). Other element would receive the click: <iframe id="aswift_3" name="aswift_3" browsingtopics="true" style="min-height: auto; max-height: none; min-width: auto; max-width: none; width: 1200px !important; height: 203px !important; display: block; margin: 0px auto;" sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="1200" height="203" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allow="attribution-reporting; run-ad-auction" src="https://googleads.g.doubleclick.net/pagead/html/r20250915/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-1677597403311019&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=3" data-google-container-id="a!4" tabindex="0" title="Advertisement" aria-label="Advertisement" data-google-query-id="CKLku5mr348DFUGNrAIdDnUGFA" data-load-complete="true"></iframe>
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d271400a201cda78e6e9c5dc62dfabbe, clickElement {id=f.2A22BFAD8EA6E699F71FD8198AABA694.d.222D0EF63611510BAD4DE7E7090FFAAA.e.383}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:20347}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:20347/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (d271400a201cda78e6e9c5dc62dfabbe)] -> xpath: (//div[@class='panel-group']//h4/a)[4]]
Session ID: d271400a201cda78e6e9c5dc62dfabbe]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <a data-toggle="collapse" href="#collapse4">...</a> is not clickable at point (295, 477). Other element would receive the click: <iframe id="aswift_3" name="aswift_3" browsingtopics="true" style="min-height: auto; max-height: none; min-width: auto; max-width: none; width: 1200px !important; height: 203px !important; display: block; margin: 0px auto;" sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="1200" height="203" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allow="attribution-reporting; run-ad-auction" src="https://googleads.g.doubleclick.net/pagead/html/r20250915/r20190131/zrt_lookup_fy2021.html#RS-0-&amp;adk=1812271801&amp;client=ca-pub-1677597403311019&amp;fa=1&amp;ifi=4&amp;uci=a!4&amp;btvi=3" data-google-container-id="a!4" tabindex="0" title="Advertisement" aria-label="Advertisement" data-google-query-id="CKLku5mr348DFUGNrAIdDnUGFA" data-load-complete="true"></iframe>
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d271400a201cda78e6e9c5dc62dfabbe, clickElement {id=f.2A22BFAD8EA6E699F71FD8198AABA694.d.222D0EF63611510BAD4DE7E7090FFAAA.e.383}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:20347}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:20347/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (d271400a201cda78e6e9c5dc62dfabbe)] -> xpath: (//div[@class='panel-group']//h4/a)[4]]
Session ID: d271400a201cda78e6e9c5dc62dfabbe
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at Tests.TCpageTest.TC_TestCases_003_NavigateUrlsAndTakeScreenshots(TCpageTest.java:103)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_TestCases_003_NavigateUrlsAndTakeScreenshots -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TCpageTest@611889f4]" started-at="2025-09-17T13:35:33 IST" name="tearDown" finished-at="2025-09-17T13:35:33 IST" duration-ms="531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_TestCases_003_NavigateUrlsAndTakeScreenshots status=FAILURE method=TCpageTest.TC_TestCases_003_NavigateUrlsAndTakeScreenshots()[pri:3, instance:Tests.TCpageTest@611889f4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TCpageTest@611889f4]" started-at="2025-09-17T13:35:33 IST" name="setUp" finished-at="2025-09-17T13:35:34 IST" duration-ms="1034" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TCpageTest.TC_TestCases_004_VerifyScrollDownAndUp()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_TestCases_004_VerifyScrollDownAndUp()[pri:4, instance:Tests.TCpageTest@611889f4]" started-at="2025-09-17T13:35:34 IST" name="TC_TestCases_004_VerifyScrollDownAndUp" finished-at="2025-09-17T13:35:37 IST" duration-ms="2803" status="FAIL">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class java.lang.Double cannot be cast to class java.lang.Long (java.lang.Double and java.lang.Long are in module java.base of loader 'bootstrap')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class java.lang.Double cannot be cast to class java.lang.Long (java.lang.Double and java.lang.Long are in module java.base of loader 'bootstrap')
at com.automationproj.pages.TestCasesPage.getScrollPosition(TestCasesPage.java:60)
at Tests.TCpageTest.TC_TestCases_004_VerifyScrollDownAndUp(TCpageTest.java:118)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_TestCases_004_VerifyScrollDownAndUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TCpageTest@611889f4]" started-at="2025-09-17T13:35:37 IST" name="tearDown" finished-at="2025-09-17T13:35:37 IST" duration-ms="284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_TestCases_004_VerifyScrollDownAndUp status=FAILURE method=TCpageTest.TC_TestCases_004_VerifyScrollDownAndUp()[pri:4, instance:Tests.TCpageTest@611889f4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.TCpageTest -->
      <class name="Tests.Product_Func_1">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:10 IST" name="setUp" finished-at="2025-09-17T13:44:11 IST" duration-ms="986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_1.TC_ECOM_Product_001_ProductsButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_001_ProductsButton()[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:11 IST" name="TC_ECOM_Product_001_ProductsButton" finished-at="2025-09-17T13:44:17 IST" duration-ms="6525" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_001_ProductsButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:17 IST" name="tearDown" finished-at="2025-09-17T13:44:18 IST" duration-ms="403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_001_ProductsButton status=SUCCESS method=Product_Func_1.TC_ECOM_Product_001_ProductsButton()[pri:0, instance:Tests.Product_Func_1@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:18 IST" name="setUp" finished-at="2025-09-17T13:44:19 IST" duration-ms="961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_1.TC_ECOM_Product_002_SearchBarVisiblity()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_002_SearchBarVisiblity()[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:19 IST" name="TC_ECOM_Product_002_SearchBarVisiblity" finished-at="2025-09-17T13:44:23 IST" duration-ms="4304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_002_SearchBarVisiblity -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:23 IST" name="tearDown" finished-at="2025-09-17T13:44:23 IST" duration-ms="340" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_002_SearchBarVisiblity status=SUCCESS method=Product_Func_1.TC_ECOM_Product_002_SearchBarVisiblity()[pri:0, instance:Tests.Product_Func_1@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:23 IST" name="setUp" finished-at="2025-09-17T13:44:24 IST" duration-ms="963" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_1.TC_ECOM_Product_003_SearchFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_003_SearchFunctionality()[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:24 IST" name="TC_ECOM_Product_003_SearchFunctionality" finished-at="2025-09-17T13:44:31 IST" duration-ms="6880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_003_SearchFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:31 IST" name="tearDown" finished-at="2025-09-17T13:44:32 IST" duration-ms="416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_003_SearchFunctionality status=SUCCESS method=Product_Func_1.TC_ECOM_Product_003_SearchFunctionality()[pri:0, instance:Tests.Product_Func_1@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:32 IST" name="setUp" finished-at="2025-09-17T13:44:33 IST" duration-ms="1018" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_1.TC_ECOM_Product_005_VerifyWomenCategoryDropdown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_005_VerifyWomenCategoryDropdown()[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:33 IST" name="TC_ECOM_Product_005_VerifyWomenCategoryDropdown" finished-at="2025-09-17T13:44:37 IST" duration-ms="4382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_005_VerifyWomenCategoryDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:37 IST" name="tearDown" finished-at="2025-09-17T13:44:38 IST" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_005_VerifyWomenCategoryDropdown status=SUCCESS method=Product_Func_1.TC_ECOM_Product_005_VerifyWomenCategoryDropdown()[pri:0, instance:Tests.Product_Func_1@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:38 IST" name="setUp" finished-at="2025-09-17T13:44:39 IST" duration-ms="1010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_1.TC_ECOM_Product_006_VerifyMenCategoryDropdown()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_006_VerifyMenCategoryDropdown()[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:39 IST" name="TC_ECOM_Product_006_VerifyMenCategoryDropdown" finished-at="2025-09-17T13:44:43 IST" duration-ms="4945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_006_VerifyMenCategoryDropdown -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:43 IST" name="tearDown" finished-at="2025-09-17T13:44:44 IST" duration-ms="438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_006_VerifyMenCategoryDropdown status=SUCCESS method=Product_Func_1.TC_ECOM_Product_006_VerifyMenCategoryDropdown()[pri:0, instance:Tests.Product_Func_1@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:44 IST" name="setUp" finished-at="2025-09-17T13:44:45 IST" duration-ms="993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_1.TC_ECOM_Product_007_KidsIcon()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_007_KidsIcon()[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:45 IST" name="TC_ECOM_Product_007_KidsIcon" finished-at="2025-09-17T13:44:48 IST" duration-ms="3097" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_007_KidsIcon -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:48 IST" name="tearDown" finished-at="2025-09-17T13:44:48 IST" duration-ms="425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_007_KidsIcon status=SUCCESS method=Product_Func_1.TC_ECOM_Product_007_KidsIcon()[pri:0, instance:Tests.Product_Func_1@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:48 IST" name="setUp" finished-at="2025-09-17T13:44:49 IST" duration-ms="1019" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_1.TC_ECOM_Product_008_PoloProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_008_PoloProducts()[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:49 IST" name="TC_ECOM_Product_008_PoloProducts" finished-at="2025-09-17T13:44:55 IST" duration-ms="5819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_008_PoloProducts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:55 IST" name="tearDown" finished-at="2025-09-17T13:44:56 IST" duration-ms="384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_008_PoloProducts status=SUCCESS method=Product_Func_1.TC_ECOM_Product_008_PoloProducts()[pri:0, instance:Tests.Product_Func_1@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:56 IST" name="setUp" finished-at="2025-09-17T13:44:57 IST" duration-ms="960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_1.TC_ECOM_Product_009_HmProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_009_HmProducts()[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:44:57 IST" name="TC_ECOM_Product_009_HmProducts" finished-at="2025-09-17T13:45:01 IST" duration-ms="4365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_009_HmProducts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:45:01 IST" name="tearDown" finished-at="2025-09-17T13:45:01 IST" duration-ms="406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_009_HmProducts status=SUCCESS method=Product_Func_1.TC_ECOM_Product_009_HmProducts()[pri:0, instance:Tests.Product_Func_1@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:45:01 IST" name="setUp" finished-at="2025-09-17T13:45:02 IST" duration-ms="991" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_1.TC_ECOM_Product_010_MadameProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_010_MadameProducts()[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:45:02 IST" name="TC_ECOM_Product_010_MadameProducts" finished-at="2025-09-17T13:45:29 IST" duration-ms="26707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_010_MadameProducts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:45:29 IST" name="tearDown" finished-at="2025-09-17T13:45:30 IST" duration-ms="430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_010_MadameProducts status=SUCCESS method=Product_Func_1.TC_ECOM_Product_010_MadameProducts()[pri:0, instance:Tests.Product_Func_1@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:45:30 IST" name="setUp" finished-at="2025-09-17T13:45:30 IST" duration-ms="974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_1.TC_ECOM_Product_011_MastHarbourProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_011_MastHarbourProducts()[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:45:30 IST" name="TC_ECOM_Product_011_MastHarbourProducts" finished-at="2025-09-17T13:45:36 IST" duration-ms="5972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_011_MastHarbourProducts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:45:36 IST" name="tearDown" finished-at="2025-09-17T13:45:37 IST" duration-ms="476" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_011_MastHarbourProducts status=SUCCESS method=Product_Func_1.TC_ECOM_Product_011_MastHarbourProducts()[pri:0, instance:Tests.Product_Func_1@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:45:37 IST" name="setUp" finished-at="2025-09-17T13:45:38 IST" duration-ms="990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_1.TC_ECOM_Product_012_BabyhugProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_012_BabyhugProducts()[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:45:38 IST" name="TC_ECOM_Product_012_BabyhugProducts" finished-at="2025-09-17T13:45:43 IST" duration-ms="5548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_012_BabyhugProducts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_1@2f217633]" started-at="2025-09-17T13:45:43 IST" name="tearDown" finished-at="2025-09-17T13:45:44 IST" duration-ms="456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_012_BabyhugProducts status=SUCCESS method=Product_Func_1.TC_ECOM_Product_012_BabyhugProducts()[pri:0, instance:Tests.Product_Func_1@2f217633] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Product_Func_1 -->
      <class name="Tests.Product_UI_6">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:19:50 IST" name="setUp" finished-at="2025-09-17T13:19:51 IST" duration-ms="956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_6.verifyCursorChangeOnHM() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnHM()[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:19:51 IST" name="verifyCursorChangeOnHM" finished-at="2025-09-17T13:19:56 IST" duration-ms="4948" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='H&M']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2e3718f30043ca41bc75964544fa4fc2, findElement {using=xpath, value=//a[normalize-space()='H&M']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11268}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11268/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2e3718f30043ca41bc75964544fa4fc2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='H&M']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2e3718f30043ca41bc75964544fa4fc2, findElement {using=xpath, value=//a[normalize-space()='H&M']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11268}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11268/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2e3718f30043ca41bc75964544fa4fc2
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Product_UI_6.verifyCursorChangeOnHM(Product_UI_6.java:105)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnHM -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:19:56 IST" name="tearDown" finished-at="2025-09-17T13:19:56 IST" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnHM status=FAILURE method=Product_UI_6.verifyCursorChangeOnHM()[pri:0, instance:Tests.Product_UI_6@20ccf40b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:19:56 IST" name="setUp" finished-at="2025-09-17T13:19:57 IST" duration-ms="980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_6.verifyCursorChangeOnMadame() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnMadame()[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:19:57 IST" name="verifyCursorChangeOnMadame" finished-at="2025-09-17T13:20:02 IST" duration-ms="5313" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Madame']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c3465eccdbc89825ee1f655e5cd65b2a, findElement {using=xpath, value=//a[normalize-space()='Madame']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11340}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11340/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c3465eccdbc89825ee1f655e5cd65b2a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Madame']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c3465eccdbc89825ee1f655e5cd65b2a, findElement {using=xpath, value=//a[normalize-space()='Madame']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11340}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11340/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c3465eccdbc89825ee1f655e5cd65b2a
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Product_UI_6.verifyCursorChangeOnMadame(Product_UI_6.java:143)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnMadame -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:20:02 IST" name="tearDown" finished-at="2025-09-17T13:20:03 IST" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnMadame status=FAILURE method=Product_UI_6.verifyCursorChangeOnMadame()[pri:0, instance:Tests.Product_UI_6@20ccf40b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:20:03 IST" name="setUp" finished-at="2025-09-17T13:20:04 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_6.verifyCursorChangeOnPolo() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnPolo()[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:20:04 IST" name="verifyCursorChangeOnPolo" finished-at="2025-09-17T13:20:09 IST" duration-ms="5029" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Polo']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a601ae07a9c96806f0e98e4ad3a049c0, findElement {using=xpath, value=//a[normalize-space()='Polo']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11423}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11423/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a601ae07a9c96806f0e98e4ad3a049c0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Polo']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [a601ae07a9c96806f0e98e4ad3a049c0, findElement {using=xpath, value=//a[normalize-space()='Polo']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11423}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11423/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a601ae07a9c96806f0e98e4ad3a049c0
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Product_UI_6.verifyCursorChangeOnPolo(Product_UI_6.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnPolo -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:20:09 IST" name="tearDown" finished-at="2025-09-17T13:20:09 IST" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnPolo status=FAILURE method=Product_UI_6.verifyCursorChangeOnPolo()[pri:0, instance:Tests.Product_UI_6@20ccf40b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:20:09 IST" name="setUp" finished-at="2025-09-17T13:20:10 IST" duration-ms="969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_6.verifySearchProductFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySearchProductFunctionality()[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:20:10 IST" name="verifySearchProductFunctionality" finished-at="2025-09-17T13:20:17 IST" duration-ms="6512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchProductFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:20:17 IST" name="tearDown" finished-at="2025-09-17T13:20:17 IST" duration-ms="365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySearchProductFunctionality status=SUCCESS method=Product_UI_6.verifySearchProductFunctionality()[pri:0, instance:Tests.Product_UI_6@20ccf40b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:20:17 IST" name="setUp" finished-at="2025-09-17T13:20:18 IST" duration-ms="986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_6.verifySubscriptionWithValidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubscriptionWithValidEmail()[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:20:18 IST" name="verifySubscriptionWithValidEmail" finished-at="2025-09-17T13:20:20 IST" duration-ms="2181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubscriptionWithValidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_6@20ccf40b]" started-at="2025-09-17T13:20:20 IST" name="tearDown" finished-at="2025-09-17T13:20:20 IST" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubscriptionWithValidEmail status=SUCCESS method=Product_UI_6.verifySubscriptionWithValidEmail()[pri:0, instance:Tests.Product_UI_6@20ccf40b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Product_UI_6 -->
      <class name="Tests.Product_UI_7">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:14 IST" name="setUp" finished-at="2025-09-17T13:21:15 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_7.verifyCursorChangeOnAllenSollyJunior() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnAllenSollyJunior()[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:15 IST" name="verifyCursorChangeOnAllenSollyJunior" finished-at="2025-09-17T13:21:20 IST" duration-ms="4945" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Allen Solly Junior']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b850a7ddf09195bd51f2232f546531e1, findElement {using=xpath, value=//a[normalize-space()='Allen Solly Junior']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:12156}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:12156/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b850a7ddf09195bd51f2232f546531e1]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Allen Solly Junior']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b850a7ddf09195bd51f2232f546531e1, findElement {using=xpath, value=//a[normalize-space()='Allen Solly Junior']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:12156}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:12156/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b850a7ddf09195bd51f2232f546531e1
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Product_UI_7.verifyCursorChangeOnAllenSollyJunior(Product_UI_7.java:99)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnAllenSollyJunior -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:20 IST" name="tearDown" finished-at="2025-09-17T13:21:20 IST" duration-ms="316" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnAllenSollyJunior status=FAILURE method=Product_UI_7.verifyCursorChangeOnAllenSollyJunior()[pri:0, instance:Tests.Product_UI_7@169e6180] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:20 IST" name="setUp" finished-at="2025-09-17T13:21:21 IST" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_7.verifyCursorChangeOnBabyhug() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnBabyhug()[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:21 IST" name="verifyCursorChangeOnBabyhug" finished-at="2025-09-17T13:21:26 IST" duration-ms="4718" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Babyhug']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1a6d7416780b73ac0bcf9690b5ca6184, findElement {using=xpath, value=//a[normalize-space()='Babyhug']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:12224}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:12224/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1a6d7416780b73ac0bcf9690b5ca6184]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Babyhug']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [1a6d7416780b73ac0bcf9690b5ca6184, findElement {using=xpath, value=//a[normalize-space()='Babyhug']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:12224}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:12224/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 1a6d7416780b73ac0bcf9690b5ca6184
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Product_UI_7.verifyCursorChangeOnBabyhug(Product_UI_7.java:61)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnBabyhug -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:26 IST" name="tearDown" finished-at="2025-09-17T13:21:26 IST" duration-ms="344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnBabyhug status=FAILURE method=Product_UI_7.verifyCursorChangeOnBabyhug()[pri:0, instance:Tests.Product_UI_7@169e6180] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:26 IST" name="setUp" finished-at="2025-09-17T13:21:27 IST" duration-ms="984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_7.verifyCursorChangeOnBiba() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnBiba()[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:27 IST" name="verifyCursorChangeOnBiba" finished-at="2025-09-17T13:21:32 IST" duration-ms="4815" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Biba']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fbe4ac2fa667c2b8eb38d427a45896ce, findElement {using=xpath, value=//a[normalize-space()='Biba']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:12298}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:12298/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fbe4ac2fa667c2b8eb38d427a45896ce]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Biba']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fbe4ac2fa667c2b8eb38d427a45896ce, findElement {using=xpath, value=//a[normalize-space()='Biba']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:12298}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:12298/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fbe4ac2fa667c2b8eb38d427a45896ce
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Product_UI_7.verifyCursorChangeOnBiba(Product_UI_7.java:175)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnBiba -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:32 IST" name="tearDown" finished-at="2025-09-17T13:21:32 IST" duration-ms="371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnBiba status=FAILURE method=Product_UI_7.verifyCursorChangeOnBiba()[pri:0, instance:Tests.Product_UI_7@169e6180] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:32 IST" name="setUp" finished-at="2025-09-17T13:21:33 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_7.verifyCursorChangeOnKookieKids() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnKookieKids()[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:33 IST" name="verifyCursorChangeOnKookieKids" finished-at="2025-09-17T13:21:38 IST" duration-ms="5236" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Kookie Kids']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d2288b0e66c9ca2cf31caa54f35b3c75, findElement {using=xpath, value=//a[normalize-space()='Kookie Kids']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:12365}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:12365/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d2288b0e66c9ca2cf31caa54f35b3c75]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Kookie Kids']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d2288b0e66c9ca2cf31caa54f35b3c75, findElement {using=xpath, value=//a[normalize-space()='Kookie Kids']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:12365}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:12365/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d2288b0e66c9ca2cf31caa54f35b3c75
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Product_UI_7.verifyCursorChangeOnKookieKids(Product_UI_7.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnKookieKids -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:38 IST" name="tearDown" finished-at="2025-09-17T13:21:39 IST" duration-ms="389" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnKookieKids status=FAILURE method=Product_UI_7.verifyCursorChangeOnKookieKids()[pri:0, instance:Tests.Product_UI_7@169e6180] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:39 IST" name="setUp" finished-at="2025-09-17T13:21:40 IST" duration-ms="1021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_7.verifyCursorChangeOnMastAndHarbor() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnMastAndHarbor()[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:40 IST" name="verifyCursorChangeOnMastAndHarbor" finished-at="2025-09-17T13:21:45 IST" duration-ms="4837" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Mast & Harbor']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4d84f8cc236d3179daecffe8c5d63d40, findElement {using=xpath, value=//a[normalize-space()='Mast & Harbor']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:12438}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:12438/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4d84f8cc236d3179daecffe8c5d63d40]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[normalize-space()='Mast & Harbor']"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4d84f8cc236d3179daecffe8c5d63d40, findElement {using=xpath, value=//a[normalize-space()='Mast & Harbor']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:12438}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:12438/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4d84f8cc236d3179daecffe8c5d63d40
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Product_UI_7.verifyCursorChangeOnMastAndHarbor(Product_UI_7.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnMastAndHarbor -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_7@169e6180]" started-at="2025-09-17T13:21:45 IST" name="tearDown" finished-at="2025-09-17T13:21:45 IST" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnMastAndHarbor status=FAILURE method=Product_UI_7.verifyCursorChangeOnMastAndHarbor()[pri:0, instance:Tests.Product_UI_7@169e6180] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Product_UI_7 -->
      <class name="Tests.UI_Home">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:45:44 IST" name="setUp" finished-at="2025-09-17T13:45:45 IST" duration-ms="952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home.verifyContactUsRedirect()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyContactUsRedirect()[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:45:45 IST" name="verifyContactUsRedirect" finished-at="2025-09-17T13:45:51 IST" duration-ms="6400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactUsRedirect -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:45:51 IST" name="tearDown" finished-at="2025-09-17T13:45:52 IST" duration-ms="356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactUsRedirect status=SUCCESS method=UI_Home.verifyContactUsRedirect()[pri:0, instance:Tests.UI_Home@a530d0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:45:52 IST" name="setUp" finished-at="2025-09-17T13:45:53 IST" duration-ms="943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home.verifyLogoRedirectsHome()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogoRedirectsHome()[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:45:53 IST" name="verifyLogoRedirectsHome" finished-at="2025-09-17T13:46:00 IST" duration-ms="7005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogoRedirectsHome -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:46:00 IST" name="tearDown" finished-at="2025-09-17T13:46:00 IST" duration-ms="514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLogoRedirectsHome status=SUCCESS method=UI_Home.verifyLogoRedirectsHome()[pri:0, instance:Tests.UI_Home@a530d0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:46:00 IST" name="setUp" finished-at="2025-09-17T13:46:01 IST" duration-ms="975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home.verifyProductButtonFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyProductButtonFunctionality()[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:46:01 IST" name="verifyProductButtonFunctionality" finished-at="2025-09-17T13:46:07 IST" duration-ms="5751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductButtonFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:46:07 IST" name="tearDown" finished-at="2025-09-17T13:46:07 IST" duration-ms="447" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProductButtonFunctionality status=SUCCESS method=UI_Home.verifyProductButtonFunctionality()[pri:0, instance:Tests.UI_Home@a530d0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:46:07 IST" name="setUp" finished-at="2025-09-17T13:46:08 IST" duration-ms="969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home.verifyRightHandScrollBar()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyRightHandScrollBar()[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:46:08 IST" name="verifyRightHandScrollBar" finished-at="2025-09-17T13:46:11 IST" duration-ms="2923" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyRightHandScrollBar -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:46:11 IST" name="tearDown" finished-at="2025-09-17T13:46:12 IST" duration-ms="375" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyRightHandScrollBar status=SUCCESS method=UI_Home.verifyRightHandScrollBar()[pri:0, instance:Tests.UI_Home@a530d0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:46:12 IST" name="setUp" finished-at="2025-09-17T13:46:13 IST" duration-ms="973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.UI_Home.verifyScrollUpButton() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUpButton()[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:46:13 IST" name="verifyScrollUpButton" finished-at="2025-09-17T13:46:19 IST" duration-ms="6962" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUpButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.UI_Home@a530d0a]" started-at="2025-09-17T13:46:19 IST" name="tearDown" finished-at="2025-09-17T13:46:20 IST" duration-ms="362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUpButton status=SUCCESS method=UI_Home.verifyScrollUpButton()[pri:0, instance:Tests.UI_Home@a530d0a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.UI_Home -->
      <class name="Tests.Product_UI_8">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:18:58 IST" name="setUp" finished-at="2025-09-17T13:18:59 IST" duration-ms="969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_8.verifyCursorChangeOnAddToCart() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnAddToCart()[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:18:59 IST" name="verifyCursorChangeOnAddToCart" finished-at="2025-09-17T13:19:05 IST" duration-ms="5809" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Cursor did not change when hovering over Add to Cart. did not expect [pointer] but found [pointer]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Cursor did not change when hovering over Add to Cart. did not expect [pointer] but found [pointer]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1594)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2217)
at Tests.Product_UI_8.verifyCursorChangeOnAddToCart(Product_UI_8.java:86)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnAddToCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:05 IST" name="tearDown" finished-at="2025-09-17T13:19:05 IST" duration-ms="352" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnAddToCart status=FAILURE method=Product_UI_8.verifyCursorChangeOnAddToCart()[pri:0, instance:Tests.Product_UI_8@2b91004a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:05 IST" name="setUp" finished-at="2025-09-17T13:19:06 IST" duration-ms="968" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_8.verifyCursorChangeOnViewProductIcon() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnViewProductIcon()[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:06 IST" name="verifyCursorChangeOnViewProductIcon" finished-at="2025-09-17T13:19:12 IST" duration-ms="5412" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Cursor did not change when hovering over View Product icon. did not expect [pointer] but found [pointer]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Cursor did not change when hovering over View Product icon. did not expect [pointer] but found [pointer]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failEquals(Assert.java:1594)
at org.testng.Assert.assertNotEqualsImpl(Assert.java:157)
at org.testng.Assert.assertNotEquals(Assert.java:2217)
at Tests.Product_UI_8.verifyCursorChangeOnViewProductIcon(Product_UI_8.java:111)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnViewProductIcon -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:12 IST" name="tearDown" finished-at="2025-09-17T13:19:12 IST" duration-ms="398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnViewProductIcon status=FAILURE method=Product_UI_8.verifyCursorChangeOnViewProductIcon()[pri:0, instance:Tests.Product_UI_8@2b91004a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:12 IST" name="setUp" finished-at="2025-09-17T13:19:13 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_8.verifyDeclarationAtEndOfProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyDeclarationAtEndOfProductsPage()[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:13 IST" name="verifyDeclarationAtEndOfProductsPage" finished-at="2025-09-17T13:19:18 IST" duration-ms="5174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeclarationAtEndOfProductsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:18 IST" name="tearDown" finished-at="2025-09-17T13:19:18 IST" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeclarationAtEndOfProductsPage status=SUCCESS method=Product_UI_8.verifyDeclarationAtEndOfProductsPage()[pri:0, instance:Tests.Product_UI_8@2b91004a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:18 IST" name="setUp" finished-at="2025-09-17T13:19:19 IST" duration-ms="1024" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_8.verifyDisplayOfProductsInCatalogue()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyDisplayOfProductsInCatalogue()[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:19 IST" name="verifyDisplayOfProductsInCatalogue" finished-at="2025-09-17T13:19:25 IST" duration-ms="5120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDisplayOfProductsInCatalogue -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:25 IST" name="tearDown" finished-at="2025-09-17T13:19:25 IST" duration-ms="330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDisplayOfProductsInCatalogue status=SUCCESS method=Product_UI_8.verifyDisplayOfProductsInCatalogue()[pri:0, instance:Tests.Product_UI_8@2b91004a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:25 IST" name="setUp" finished-at="2025-09-17T13:19:26 IST" duration-ms="969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_8.verifyFlowDownAnimationOnHoverProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFlowDownAnimationOnHoverProducts()[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:26 IST" name="verifyFlowDownAnimationOnHoverProducts" finished-at="2025-09-17T13:19:30 IST" duration-ms="4416" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//div[@class='productPASS text-center'])[1]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [52af45038472c3a37d5e8544e6e47c4a, findElement {using=xpath, value=(//div[@class='productPASS text-center'])[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:10980}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:10980/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 52af45038472c3a37d5e8544e6e47c4a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//div[@class='productPASS text-center'])[1]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [52af45038472c3a37d5e8544e6e47c4a, findElement {using=xpath, value=(//div[@class='productPASS text-center'])[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:10980}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:10980/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 52af45038472c3a37d5e8544e6e47c4a
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Product_UI_8.verifyFlowDownAnimationOnHoverProducts(Product_UI_8.java:37)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFlowDownAnimationOnHoverProducts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:30 IST" name="tearDown" finished-at="2025-09-17T13:19:31 IST" duration-ms="356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFlowDownAnimationOnHoverProducts status=FAILURE method=Product_UI_8.verifyFlowDownAnimationOnHoverProducts()[pri:0, instance:Tests.Product_UI_8@2b91004a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:31 IST" name="setUp" finished-at="2025-09-17T13:19:32 IST" duration-ms="986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_8.verifyFontSizeOnProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFontSizeOnProductsPage()[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:32 IST" name="verifyFontSizeOnProductsPage" finished-at="2025-09-17T13:19:37 IST" duration-ms="4901" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//div[@class='productPASS text-center']/p)[1]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [05368f547a2c5e0e56a33e22cc668295, findElement {using=xpath, value=(//div[@class='productPASS text-center']/p)[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11058}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11058/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 05368f547a2c5e0e56a33e22cc668295]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//div[@class='productPASS text-center']/p)[1]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [05368f547a2c5e0e56a33e22cc668295, findElement {using=xpath, value=(//div[@class='productPASS text-center']/p)[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11058}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11058/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 05368f547a2c5e0e56a33e22cc668295
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Product_UI_8.verifyFontSizeOnProductsPage(Product_UI_8.java:143)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFontSizeOnProductsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:37 IST" name="tearDown" finished-at="2025-09-17T13:19:37 IST" duration-ms="336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFontSizeOnProductsPage status=FAILURE method=Product_UI_8.verifyFontSizeOnProductsPage()[pri:0, instance:Tests.Product_UI_8@2b91004a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:37 IST" name="setUp" finished-at="2025-09-17T13:19:38 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_8.verifyFontStyleOnProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFontStyleOnProductsPage()[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:38 IST" name="verifyFontStyleOnProductsPage" finished-at="2025-09-17T13:19:43 IST" duration-ms="4901" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//div[@class='productPASS text-center']/p)[1]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2bcd4ece776e211ffad017bebc501854, findElement {using=xpath, value=(//div[@class='productPASS text-center']/p)[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11123}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11123/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2bcd4ece776e211ffad017bebc501854]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//div[@class='productPASS text-center']/p)[1]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [2bcd4ece776e211ffad017bebc501854, findElement {using=xpath, value=(//div[@class='productPASS text-center']/p)[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:11123}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:11123/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 2bcd4ece776e211ffad017bebc501854
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.Product_UI_8.verifyFontStyleOnProductsPage(Product_UI_8.java:161)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFontStyleOnProductsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:43 IST" name="tearDown" finished-at="2025-09-17T13:19:43 IST" duration-ms="346" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFontStyleOnProductsPage status=FAILURE method=Product_UI_8.verifyFontStyleOnProductsPage()[pri:0, instance:Tests.Product_UI_8@2b91004a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:43 IST" name="setUp" finished-at="2025-09-17T13:19:44 IST" duration-ms="987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_8.verifyImageAlignmentOfProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyImageAlignmentOfProducts()[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:44 IST" name="verifyImageAlignmentOfProducts" finished-at="2025-09-17T13:19:49 IST" duration-ms="5383" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyImageAlignmentOfProducts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_8@2b91004a]" started-at="2025-09-17T13:19:49 IST" name="tearDown" finished-at="2025-09-17T13:19:50 IST" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyImageAlignmentOfProducts status=SUCCESS method=Product_UI_8.verifyImageAlignmentOfProducts()[pri:0, instance:Tests.Product_UI_8@2b91004a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Product_UI_8 -->
      <class name="Tests.TestAutomation">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestAutomation@66d3eec0]" started-at="2025-09-17T13:59:52 IST" name="setUp" finished-at="2025-09-17T13:59:53 IST" duration-ms="1056" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestAutomation.verifyUrlLoads()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyUrlLoads()[pri:1, instance:Tests.TestAutomation@66d3eec0]" started-at="2025-09-17T13:59:53 IST" name="verifyUrlLoads" finished-at="2025-09-17T13:59:57 IST" duration-ms="3453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUrlLoads -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestAutomation@66d3eec0]" started-at="2025-09-17T13:59:57 IST" name="tearDown" finished-at="2025-09-17T13:59:57 IST" duration-ms="358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUrlLoads status=SUCCESS method=TestAutomation.verifyUrlLoads()[pri:1, instance:Tests.TestAutomation@66d3eec0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.TestAutomation@66d3eec0]" started-at="2025-09-17T13:59:57 IST" name="setUp" finished-at="2025-09-17T13:59:58 IST" duration-ms="973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.TestAutomation.verifyHomeButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyHomeButton()[pri:2, instance:Tests.TestAutomation@66d3eec0]" started-at="2025-09-17T13:59:58 IST" name="verifyHomeButton" finished-at="2025-09-17T14:00:05 IST" duration-ms="7150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHomeButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.TestAutomation@66d3eec0]" started-at="2025-09-17T14:00:05 IST" name="tearDown" finished-at="2025-09-17T14:00:06 IST" duration-ms="436" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHomeButton status=SUCCESS method=TestAutomation.verifyHomeButton()[pri:2, instance:Tests.TestAutomation@66d3eec0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.TestAutomation -->
      <class name="Tests.Product_Func_4">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:56:20 IST" name="setUp" finished-at="2025-09-17T13:56:21 IST" duration-ms="973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_4.TC_ECOM_Product_036_ValidCVC() throws java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_036_ValidCVC()[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:56:21 IST" name="TC_ECOM_Product_036_ValidCVC" finished-at="2025-09-17T13:56:39 IST" duration-ms="18041" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_036_ValidCVC -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:56:39 IST" name="tearDown" finished-at="2025-09-17T13:56:39 IST" duration-ms="370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_036_ValidCVC status=SUCCESS method=Product_Func_4.TC_ECOM_Product_036_ValidCVC()[pri:0, instance:Tests.Product_Func_4@4738a206] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:56:39 IST" name="setUp" finished-at="2025-09-17T13:56:40 IST" duration-ms="975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_4.TC_ECOM_Product_037_InvalidCVC() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_037_InvalidCVC()[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:56:40 IST" name="TC_ECOM_Product_037_InvalidCVC" finished-at="2025-09-17T13:56:56 IST" duration-ms="15976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_037_InvalidCVC -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:56:56 IST" name="tearDown" finished-at="2025-09-17T13:56:57 IST" duration-ms="469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_037_InvalidCVC status=SUCCESS method=Product_Func_4.TC_ECOM_Product_037_InvalidCVC()[pri:0, instance:Tests.Product_Func_4@4738a206] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:56:57 IST" name="setUp" finished-at="2025-09-17T13:56:58 IST" duration-ms="955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_4.TC_ECOM_Product_038_ValidMonth() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_038_ValidMonth()[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:56:58 IST" name="TC_ECOM_Product_038_ValidMonth" finished-at="2025-09-17T13:57:14 IST" duration-ms="16204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_038_ValidMonth -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:57:14 IST" name="tearDown" finished-at="2025-09-17T13:57:14 IST" duration-ms="423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_038_ValidMonth status=SUCCESS method=Product_Func_4.TC_ECOM_Product_038_ValidMonth()[pri:0, instance:Tests.Product_Func_4@4738a206] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:57:14 IST" name="setUp" finished-at="2025-09-17T13:57:15 IST" duration-ms="973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_4.TC_ECOM_Product_039_InvalidMonth() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_039_InvalidMonth()[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:57:15 IST" name="TC_ECOM_Product_039_InvalidMonth" finished-at="2025-09-17T13:57:33 IST" duration-ms="17955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_039_InvalidMonth -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:57:33 IST" name="tearDown" finished-at="2025-09-17T13:57:34 IST" duration-ms="676" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_039_InvalidMonth status=SUCCESS method=Product_Func_4.TC_ECOM_Product_039_InvalidMonth()[pri:0, instance:Tests.Product_Func_4@4738a206] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:57:34 IST" name="setUp" finished-at="2025-09-17T13:57:35 IST" duration-ms="957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_4.TC_ECOM_Product_040_ValidYear() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_040_ValidYear()[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:57:35 IST" name="TC_ECOM_Product_040_ValidYear" finished-at="2025-09-17T13:57:59 IST" duration-ms="24272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_040_ValidYear -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:57:59 IST" name="tearDown" finished-at="2025-09-17T13:58:01 IST" duration-ms="2210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_040_ValidYear status=SUCCESS method=Product_Func_4.TC_ECOM_Product_040_ValidYear()[pri:0, instance:Tests.Product_Func_4@4738a206] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:58:01 IST" name="setUp" finished-at="2025-09-17T13:58:02 IST" duration-ms="931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_4.TC_ECOM_Product_041_InvalidYear() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_041_InvalidYear()[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:58:02 IST" name="TC_ECOM_Product_041_InvalidYear" finished-at="2025-09-17T13:58:25 IST" duration-ms="22296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_041_InvalidYear -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:58:25 IST" name="tearDown" finished-at="2025-09-17T13:58:25 IST" duration-ms="356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_041_InvalidYear status=SUCCESS method=Product_Func_4.TC_ECOM_Product_041_InvalidYear()[pri:0, instance:Tests.Product_Func_4@4738a206] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:58:25 IST" name="setUp" finished-at="2025-09-17T13:58:26 IST" duration-ms="993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_4.TC_ECOM_Product_042_PlaceOrderButton() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_042_PlaceOrderButton()[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:58:26 IST" name="TC_ECOM_Product_042_PlaceOrderButton" finished-at="2025-09-17T13:58:43 IST" duration-ms="17051" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_042_PlaceOrderButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:58:43 IST" name="tearDown" finished-at="2025-09-17T13:58:44 IST" duration-ms="584" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_042_PlaceOrderButton status=SUCCESS method=Product_Func_4.TC_ECOM_Product_042_PlaceOrderButton()[pri:0, instance:Tests.Product_Func_4@4738a206] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:58:44 IST" name="setUp" finished-at="2025-09-17T13:58:45 IST" duration-ms="972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_4.TC_ECOM_Product_043_DownloadInvoice() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_043_DownloadInvoice()[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:58:45 IST" name="TC_ECOM_Product_043_DownloadInvoice" finished-at="2025-09-17T13:59:07 IST" duration-ms="22601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_043_DownloadInvoice -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:59:07 IST" name="tearDown" finished-at="2025-09-17T13:59:08 IST" duration-ms="366" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_043_DownloadInvoice status=SUCCESS method=Product_Func_4.TC_ECOM_Product_043_DownloadInvoice()[pri:0, instance:Tests.Product_Func_4@4738a206] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:59:08 IST" name="setUp" finished-at="2025-09-17T13:59:09 IST" duration-ms="949" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_4.TC_ECOM_Product_045_ValidSubPayment() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_045_ValidSubPayment()[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:59:09 IST" name="TC_ECOM_Product_045_ValidSubPayment" finished-at="2025-09-17T13:59:29 IST" duration-ms="20472" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <input type="email" id="susbscribe_email" required="" placeholder="Your email address"> is not clickable at point (393, 548). Other element would receive the click: <footer id="footer">...</footer>
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e6505a7d92d54066eceb0aceb63c039d, clickElement {id=f.182E627B869B1E91AE25B6C3917946B5.d.9FFF92E9D0D25E70853E6FB8B79619EF.e.180}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:31024}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:31024/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (e6505a7d92d54066eceb0aceb63c039d)] -> xpath: //*[@id="susbscribe_email"]]
Session ID: e6505a7d92d54066eceb0aceb63c039d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <input type="email" id="susbscribe_email" required="" placeholder="Your email address"> is not clickable at point (393, 548). Other element would receive the click: <footer id="footer">...</footer>
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e6505a7d92d54066eceb0aceb63c039d, clickElement {id=f.182E627B869B1E91AE25B6C3917946B5.d.9FFF92E9D0D25E70853E6FB8B79619EF.e.180}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:31024}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:31024/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (e6505a7d92d54066eceb0aceb63c039d)] -> xpath: //*[@id="susbscribe_email"]]
Session ID: e6505a7d92d54066eceb0aceb63c039d
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at com.automationproj.pages.Functional_ProductPage.subscribe(Functional_ProductPage.java:239)
at Tests.Product_Func_4.TC_ECOM_Product_045_ValidSubPayment(Product_Func_4.java:255)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_045_ValidSubPayment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:59:29 IST" name="tearDown" finished-at="2025-09-17T13:59:29 IST" duration-ms="355" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_045_ValidSubPayment status=FAILURE method=Product_Func_4.TC_ECOM_Product_045_ValidSubPayment()[pri:0, instance:Tests.Product_Func_4@4738a206] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:59:29 IST" name="setUp" finished-at="2025-09-17T13:59:30 IST" duration-ms="941" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_4.TC_ECOM_Product_046_InvalidSubPayment() throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_046_InvalidSubPayment()[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:59:30 IST" name="TC_ECOM_Product_046_InvalidSubPayment" finished-at="2025-09-17T13:59:52 IST" duration-ms="21341" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <input type="email" id="susbscribe_email" required="" placeholder="Your email address"> is not clickable at point (393, 469). Other element would receive the click: <iframe id="aswift_1" name="aswift_1" browsingtopics="true" style="left:0;position:absolute;top:0;border:0;width:1200px;height:280px;min-height:auto;max-height:none;min-width:auto;max-width:none;" sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="1200" height="280" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allow="attribution-reporting; run-ad-auction" src="https://googleads.g.doubleclick.net/pagead/ads?gdpr=0&amp;client=ca-pub-1677597403311019&amp;output=html&amp;h=280&amp;adk=3809598800&amp;adf=854766408&amp;pi=t.aa~a.1182920990~rp.3&amp;w=1200&amp;fwrn=4&amp;fwrnh=100&amp;lmt=1758097791&amp;rafmt=1&amp;to=qs&amp;pwprc=4334590153&amp;format=1200x280&amp;url=https%3A%2F%2Fautomationexercise.com%2Fpayment_done%2F500&amp;fwr=0&amp;pra=3&amp;rpe=1&amp;resp_fmts=3&amp;wgl=1&amp;fa=40&amp;uach=WyJXaW5kb3dzIiwiMTkuMC4wIiwieDg2IiwiIiwiMTQwLjAuNzMzOS4xMjgiLG51bGwsMCxudWxsLCI2NCIsW1siQ2hyb21pdW0iLCIxNDAuMC43MzM5LjEyOCJdLFsiTm90PUE_QnJhbmQiLCIyNC4wLjAuMCJdLFsiR29vZ2xlIENocm9tZSIsIjE0MC4wLjczMzkuMTI4Il1dLDBd&amp;abgtt=6&amp;dt=1758097791065&amp;bpp=1&amp;bdt=617&amp;idt=1&amp;shv=r20250915&amp;mjsv=m202509110101&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;cookie=ID%3D5adbe0fd01d59eff%3AT%3D1758097771%3ART%3D1758097771%3AS%3DALNI_MbNhFHiYFpTTa6s1gfaBu77QksnhQ&amp;gpic=UID%3D00001197cc981260%3AT%3D1758097771%3ART%3D1758097771%3AS%3DALNI_MZPk-oXLNAlQX1bNVhkmSeu2reCcg&amp;eo_id_str=ID%3Df0a7c85e83315b9e%3AT%3D1758097771%3ART%3D1758097771%3AS%3DAA-Afja6Q8FeEPwfBlBpU9M526nQ&amp;prev_fmts=0x0&amp;nras=2&amp;correlator=2100832252321&amp;frm=20&amp;pv=1&amp;u_tz=330&amp;u_his=9&amp;u_h=864&amp;u_w=1536&amp;u_ah=816&amp;u_aw=1536&amp;u_cd=24&amp;u_sd=1.25&amp;dmc=8&amp;adx=160&amp;ady=858&amp;biw=1521&amp;bih=678&amp;scr_x=0&amp;scr_y=415&amp;eid=42531706%2C95370518%2C95370627%2C95370775%2C95371230&amp;oid=2&amp;pvsid=1909994720824559&amp;tmod=2035556605&amp;uas=3&amp;nvt=1&amp;ref=https%3A%2F%2Fautomationexercise.com%2Fpayment&amp;fc=1920&amp;brdim=0%2C0%2C0%2C0%2C1536%2C0%2C1536%2C816%2C1536%2C678&amp;vis=1&amp;rsz=%7C%7Cs%7C&amp;abl=NS&amp;fu=128&amp;bc=31&amp;bz=1&amp;td=1&amp;tdf=2&amp;psd=W251bGwsbnVsbCxudWxsLDNd&amp;nt=1&amp;ifi=2&amp;uci=a!2&amp;fsb=1&amp;dtd=167" data-google-container-id="a!2" tabindex="0" title="Advertisement" aria-label="Advertisement" data-google-query-id="COD59NGw348DFZqkbAkdVZ86wg" data-load-complete="true"></iframe>
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fba1c33b7b3385c0ffb9bc0b25e7379b, clickElement {id=f.ABD0845386202122826814D21D0E585C.d.4489D698FACB7787B64064AD927D0C75.e.196}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:31163}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:31163/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (fba1c33b7b3385c0ffb9bc0b25e7379b)] -> xpath: //*[@id="susbscribe_email"]]
Session ID: fba1c33b7b3385c0ffb9bc0b25e7379b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <input type="email" id="susbscribe_email" required="" placeholder="Your email address"> is not clickable at point (393, 469). Other element would receive the click: <iframe id="aswift_1" name="aswift_1" browsingtopics="true" style="left:0;position:absolute;top:0;border:0;width:1200px;height:280px;min-height:auto;max-height:none;min-width:auto;max-width:none;" sandbox="allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation" width="1200" height="280" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allow="attribution-reporting; run-ad-auction" src="https://googleads.g.doubleclick.net/pagead/ads?gdpr=0&amp;client=ca-pub-1677597403311019&amp;output=html&amp;h=280&amp;adk=3809598800&amp;adf=854766408&amp;pi=t.aa~a.1182920990~rp.3&amp;w=1200&amp;fwrn=4&amp;fwrnh=100&amp;lmt=1758097791&amp;rafmt=1&amp;to=qs&amp;pwprc=4334590153&amp;format=1200x280&amp;url=https%3A%2F%2Fautomationexercise.com%2Fpayment_done%2F500&amp;fwr=0&amp;pra=3&amp;rpe=1&amp;resp_fmts=3&amp;wgl=1&amp;fa=40&amp;uach=WyJXaW5kb3dzIiwiMTkuMC4wIiwieDg2IiwiIiwiMTQwLjAuNzMzOS4xMjgiLG51bGwsMCxudWxsLCI2NCIsW1siQ2hyb21pdW0iLCIxNDAuMC43MzM5LjEyOCJdLFsiTm90PUE_QnJhbmQiLCIyNC4wLjAuMCJdLFsiR29vZ2xlIENocm9tZSIsIjE0MC4wLjczMzkuMTI4Il1dLDBd&amp;abgtt=6&amp;dt=1758097791065&amp;bpp=1&amp;bdt=617&amp;idt=1&amp;shv=r20250915&amp;mjsv=m202509110101&amp;ptt=9&amp;saldr=aa&amp;abxe=1&amp;cookie=ID%3D5adbe0fd01d59eff%3AT%3D1758097771%3ART%3D1758097771%3AS%3DALNI_MbNhFHiYFpTTa6s1gfaBu77QksnhQ&amp;gpic=UID%3D00001197cc981260%3AT%3D1758097771%3ART%3D1758097771%3AS%3DALNI_MZPk-oXLNAlQX1bNVhkmSeu2reCcg&amp;eo_id_str=ID%3Df0a7c85e83315b9e%3AT%3D1758097771%3ART%3D1758097771%3AS%3DAA-Afja6Q8FeEPwfBlBpU9M526nQ&amp;prev_fmts=0x0&amp;nras=2&amp;correlator=2100832252321&amp;frm=20&amp;pv=1&amp;u_tz=330&amp;u_his=9&amp;u_h=864&amp;u_w=1536&amp;u_ah=816&amp;u_aw=1536&amp;u_cd=24&amp;u_sd=1.25&amp;dmc=8&amp;adx=160&amp;ady=858&amp;biw=1521&amp;bih=678&amp;scr_x=0&amp;scr_y=415&amp;eid=42531706%2C95370518%2C95370627%2C95370775%2C95371230&amp;oid=2&amp;pvsid=1909994720824559&amp;tmod=2035556605&amp;uas=3&amp;nvt=1&amp;ref=https%3A%2F%2Fautomationexercise.com%2Fpayment&amp;fc=1920&amp;brdim=0%2C0%2C0%2C0%2C1536%2C0%2C1536%2C816%2C1536%2C678&amp;vis=1&amp;rsz=%7C%7Cs%7C&amp;abl=NS&amp;fu=128&amp;bc=31&amp;bz=1&amp;td=1&amp;tdf=2&amp;psd=W251bGwsbnVsbCxudWxsLDNd&amp;nt=1&amp;ifi=2&amp;uci=a!2&amp;fsb=1&amp;dtd=167" data-google-container-id="a!2" tabindex="0" title="Advertisement" aria-label="Advertisement" data-google-query-id="COD59NGw348DFZqkbAkdVZ86wg" data-load-complete="true"></iframe>
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [fba1c33b7b3385c0ffb9bc0b25e7379b, clickElement {id=f.ABD0845386202122826814D21D0E585C.d.4489D698FACB7787B64064AD927D0C75.e.196}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:31163}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:31163/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (fba1c33b7b3385c0ffb9bc0b25e7379b)] -> xpath: //*[@id="susbscribe_email"]]
Session ID: fba1c33b7b3385c0ffb9bc0b25e7379b
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at com.automationproj.pages.Functional_ProductPage.subscribe(Functional_ProductPage.java:239)
at Tests.Product_Func_4.TC_ECOM_Product_046_InvalidSubPayment(Product_Func_4.java:282)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_046_InvalidSubPayment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_4@4738a206]" started-at="2025-09-17T13:59:52 IST" name="tearDown" finished-at="2025-09-17T13:59:52 IST" duration-ms="439" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_046_InvalidSubPayment status=FAILURE method=Product_Func_4.TC_ECOM_Product_046_InvalidSubPayment()[pri:0, instance:Tests.Product_Func_4@4738a206] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Product_Func_4 -->
      <class name="Tests.Product_Func_3">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:46:20 IST" name="setUp" finished-at="2025-09-17T13:46:21 IST" duration-ms="975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_3.TC_ECOM_Product_026_SubmitReview() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_026_SubmitReview()[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:46:21 IST" name="TC_ECOM_Product_026_SubmitReview" finished-at="2025-09-17T13:46:24 IST" duration-ms="3309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_026_SubmitReview -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:46:24 IST" name="tearDown" finished-at="2025-09-17T13:46:26 IST" duration-ms="1881" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_026_SubmitReview status=SUCCESS method=Product_Func_3.TC_ECOM_Product_026_SubmitReview()[pri:0, instance:Tests.Product_Func_3@1a18644] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:46:26 IST" name="setUp" finished-at="2025-09-17T13:46:27 IST" duration-ms="980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_3.TC_ECOM_Product_027_ValidSubscription() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_027_ValidSubscription()[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:46:27 IST" name="TC_ECOM_Product_027_ValidSubscription" finished-at="2025-09-17T13:46:32 IST" duration-ms="5472" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_027_ValidSubscription -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:46:32 IST" name="tearDown" finished-at="2025-09-17T13:46:33 IST" duration-ms="341" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_027_ValidSubscription status=SUCCESS method=Product_Func_3.TC_ECOM_Product_027_ValidSubscription()[pri:0, instance:Tests.Product_Func_3@1a18644] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:46:33 IST" name="setUp" finished-at="2025-09-17T13:46:34 IST" duration-ms="973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_3.TC_ECOM_Product_028_InvalidSubscription() throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_028_InvalidSubscription()[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:46:34 IST" name="TC_ECOM_Product_028_InvalidSubscription" finished-at="2025-09-17T13:46:39 IST" duration-ms="5576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_028_InvalidSubscription -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:46:39 IST" name="tearDown" finished-at="2025-09-17T13:46:40 IST" duration-ms="344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_028_InvalidSubscription status=SUCCESS method=Product_Func_3.TC_ECOM_Product_028_InvalidSubscription()[pri:0, instance:Tests.Product_Func_3@1a18644] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:46:40 IST" name="setUp" finished-at="2025-09-17T13:46:41 IST" duration-ms="989" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_3.TC_ECOM_Product_029_CheckoutFlow() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_029_CheckoutFlow()[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:46:41 IST" name="TC_ECOM_Product_029_CheckoutFlow" finished-at="2025-09-17T13:49:54 IST" duration-ms="193679" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, clickElement {id=f.42A652B7083521E85C38555FBD09764B.d.3263941C1767ACB2409C7EDB38D5ED7D.e.106}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (8577eeaf55a37551459af1058317b793)] -> xpath: //*[@id="do_action"]/div[1]/div/div/a]
Session ID: 8577eeaf55a37551459af1058317b793]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, clickElement {id=f.42A652B7083521E85C38555FBD09764B.d.3263941C1767ACB2409C7EDB38D5ED7D.e.106}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (8577eeaf55a37551459af1058317b793)] -> xpath: //*[@id="do_action"]/div[1]/div/div/a]
Session ID: 8577eeaf55a37551459af1058317b793
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:418)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:374)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at com.automationproj.pages.Functional_ProductPage.proceedToCheckout(Functional_ProductPage.java:270)
at Tests.Product_Func_3.TC_ECOM_Product_029_CheckoutFlow(Product_Func_3.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:401)
... 39 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_029_CheckoutFlow -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:49:54 IST" name="tearDown" finished-at="2025-09-17T13:52:54 IST" duration-ms="180005" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_029_CheckoutFlow status=FAILURE method=Product_Func_3.TC_ECOM_Product_029_CheckoutFlow()[pri:0, instance:Tests.Product_Func_3@1a18644] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:418)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:374)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:618)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:334)
at com.automationproj.utilities.ScreenshotUtils.takeScreenshot(ScreenshotUtils.java:21)
at Base.BaseTest.tearDown(BaseTest.java:117)
at jdk.internal.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:401)
... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="setUp" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_030_AddComment()[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="TC_ECOM_Product_030_AddComment" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:418)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:374)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:618)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:334)
at com.automationproj.utilities.ScreenshotUtils.takeScreenshot(ScreenshotUtils.java:21)
at Base.BaseTest.tearDown(BaseTest.java:117)
at jdk.internal.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:401)
... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_030_AddComment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="tearDown" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="TC_ECOM_Product_031_PlaceOrderButton()[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="TC_ECOM_Product_031_PlaceOrderButton" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:418)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:374)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:618)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:334)
at com.automationproj.utilities.ScreenshotUtils.takeScreenshot(ScreenshotUtils.java:21)
at Base.BaseTest.tearDown(BaseTest.java:117)
at jdk.internal.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:401)
... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_031_PlaceOrderButton -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="setUp" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_032_ValidName()[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="TC_ECOM_Product_032_ValidName" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:418)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:374)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:618)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:334)
at com.automationproj.utilities.ScreenshotUtils.takeScreenshot(ScreenshotUtils.java:21)
at Base.BaseTest.tearDown(BaseTest.java:117)
at jdk.internal.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:401)
... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_032_ValidName -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="tearDown" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="setUp" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="tearDown" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="TC_ECOM_Product_033_InvalidName()[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="TC_ECOM_Product_033_InvalidName" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:418)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:374)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:618)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:334)
at com.automationproj.utilities.ScreenshotUtils.takeScreenshot(ScreenshotUtils.java:21)
at Base.BaseTest.tearDown(BaseTest.java:117)
at jdk.internal.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:401)
... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_033_InvalidName -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="setUp" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_034_ValidCard()[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="TC_ECOM_Product_034_ValidCard" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:418)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:374)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:618)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:334)
at com.automationproj.utilities.ScreenshotUtils.takeScreenshot(ScreenshotUtils.java:21)
at Base.BaseTest.tearDown(BaseTest.java:117)
at jdk.internal.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:401)
... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_034_ValidCard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="tearDown" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="setUp" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="tearDown" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="setUp" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_035_InvalidCard()[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="TC_ECOM_Product_035_InvalidCard" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [8577eeaf55a37551459af1058317b793, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:27031}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:27031/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 8577eeaf55a37551459af1058317b793
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:418)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:374)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:187)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:618)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622)
at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:334)
at com.automationproj.utilities.ScreenshotUtils.takeScreenshot(ScreenshotUtils.java:21)
at Base.BaseTest.tearDown(BaseTest.java:117)
at jdk.internal.reflect.GeneratedMethodAccessor59.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:401)
... 44 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_035_InvalidCard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_3@1a18644]" started-at="2025-09-17T13:52:54 IST" name="tearDown" finished-at="2025-09-17T13:52:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Product_Func_3 -->
      <class name="Tests.Product_Func_2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:52:54 IST" name="setUp" finished-at="2025-09-17T13:52:55 IST" duration-ms="956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_2.TC_ECOM_Product_013_AllenSollyJuniorProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_013_AllenSollyJuniorProducts()[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:52:55 IST" name="TC_ECOM_Product_013_AllenSollyJuniorProducts" finished-at="2025-09-17T13:53:02 IST" duration-ms="6864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_013_AllenSollyJuniorProducts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:02 IST" name="tearDown" finished-at="2025-09-17T13:53:03 IST" duration-ms="488" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_013_AllenSollyJuniorProducts status=SUCCESS method=Product_Func_2.TC_ECOM_Product_013_AllenSollyJuniorProducts()[pri:0, instance:Tests.Product_Func_2@5acf93bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:03 IST" name="setUp" finished-at="2025-09-17T13:53:04 IST" duration-ms="939" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_2.TC_ECOM_Product_014_KookiekidsProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_014_KookiekidsProducts()[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:04 IST" name="TC_ECOM_Product_014_KookiekidsProducts" finished-at="2025-09-17T13:53:09 IST" duration-ms="5838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_014_KookiekidsProducts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:09 IST" name="tearDown" finished-at="2025-09-17T13:53:10 IST" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_014_KookiekidsProducts status=SUCCESS method=Product_Func_2.TC_ECOM_Product_014_KookiekidsProducts()[pri:0, instance:Tests.Product_Func_2@5acf93bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:10 IST" name="setUp" finished-at="2025-09-17T13:53:11 IST" duration-ms="993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_2.TC_ECOM_Product_015_BibaProducts()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_015_BibaProducts()[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:11 IST" name="TC_ECOM_Product_015_BibaProducts" finished-at="2025-09-17T13:53:17 IST" duration-ms="6505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_015_BibaProducts -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:17 IST" name="tearDown" finished-at="2025-09-17T13:53:18 IST" duration-ms="419" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_015_BibaProducts status=SUCCESS method=Product_Func_2.TC_ECOM_Product_015_BibaProducts()[pri:0, instance:Tests.Product_Func_2@5acf93bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:18 IST" name="setUp" finished-at="2025-09-17T13:53:19 IST" duration-ms="972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_2.TC_ECOM_Product_016_ViewProductButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_016_ViewProductButton()[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:19 IST" name="TC_ECOM_Product_016_ViewProductButton" finished-at="2025-09-17T13:53:26 IST" duration-ms="7462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_016_ViewProductButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:26 IST" name="tearDown" finished-at="2025-09-17T13:53:27 IST" duration-ms="456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_016_ViewProductButton status=SUCCESS method=Product_Func_2.TC_ECOM_Product_016_ViewProductButton()[pri:0, instance:Tests.Product_Func_2@5acf93bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:27 IST" name="setUp" finished-at="2025-09-17T13:53:28 IST" duration-ms="962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_2.TC_ECOM_Product_017_AddToCart()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_017_AddToCart()[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:28 IST" name="TC_ECOM_Product_017_AddToCart" finished-at="2025-09-17T13:53:36 IST" duration-ms="7933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_017_AddToCart -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:36 IST" name="tearDown" finished-at="2025-09-17T13:53:36 IST" duration-ms="499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_017_AddToCart status=SUCCESS method=Product_Func_2.TC_ECOM_Product_017_AddToCart()[pri:0, instance:Tests.Product_Func_2@5acf93bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:36 IST" name="setUp" finished-at="2025-09-17T13:53:37 IST" duration-ms="946" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_2.TC_ECOM_Product_021_ValidNameField() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_021_ValidNameField()[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:37 IST" name="TC_ECOM_Product_021_ValidNameField" finished-at="2025-09-17T13:53:39 IST" duration-ms="1912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_021_ValidNameField -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:39 IST" name="tearDown" finished-at="2025-09-17T13:53:39 IST" duration-ms="378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_021_ValidNameField status=SUCCESS method=Product_Func_2.TC_ECOM_Product_021_ValidNameField()[pri:0, instance:Tests.Product_Func_2@5acf93bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:39 IST" name="setUp" finished-at="2025-09-17T13:53:40 IST" duration-ms="951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_2.TC_ECOM_Product_022_InvalidNameField() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_022_InvalidNameField()[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:40 IST" name="TC_ECOM_Product_022_InvalidNameField" finished-at="2025-09-17T13:53:43 IST" duration-ms="2737" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_022_InvalidNameField -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:43 IST" name="tearDown" finished-at="2025-09-17T13:53:43 IST" duration-ms="450" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_022_InvalidNameField status=SUCCESS method=Product_Func_2.TC_ECOM_Product_022_InvalidNameField()[pri:0, instance:Tests.Product_Func_2@5acf93bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:43 IST" name="setUp" finished-at="2025-09-17T13:53:44 IST" duration-ms="1002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_2.TC_ECOM_Product_023_ValidMail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_023_ValidMail()[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:44 IST" name="TC_ECOM_Product_023_ValidMail" finished-at="2025-09-17T13:53:47 IST" duration-ms="2878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_023_ValidMail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:47 IST" name="tearDown" finished-at="2025-09-17T13:53:48 IST" duration-ms="365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_023_ValidMail status=SUCCESS method=Product_Func_2.TC_ECOM_Product_023_ValidMail()[pri:0, instance:Tests.Product_Func_2@5acf93bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:48 IST" name="setUp" finished-at="2025-09-17T13:53:49 IST" duration-ms="955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_2.TC_ECOM_Product_024_InvalidMail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_024_InvalidMail()[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:49 IST" name="TC_ECOM_Product_024_InvalidMail" finished-at="2025-09-17T13:53:51 IST" duration-ms="2447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_024_InvalidMail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:51 IST" name="tearDown" finished-at="2025-09-17T13:53:52 IST" duration-ms="459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_024_InvalidMail status=SUCCESS method=Product_Func_2.TC_ECOM_Product_024_InvalidMail()[pri:0, instance:Tests.Product_Func_2@5acf93bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:52 IST" name="setUp" finished-at="2025-09-17T13:53:53 IST" duration-ms="972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_Func_2.TC_ECOM_Product_025_ReviewField() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_ECOM_Product_025_ReviewField()[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:53 IST" name="TC_ECOM_Product_025_ReviewField" finished-at="2025-09-17T13:53:59 IST" duration-ms="6304" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_ECOM_Product_025_ReviewField -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_Func_2@5acf93bb]" started-at="2025-09-17T13:53:59 IST" name="tearDown" finished-at="2025-09-17T13:53:59 IST" duration-ms="336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_ECOM_Product_025_ReviewField status=SUCCESS method=Product_Func_2.TC_ECOM_Product_025_ReviewField()[pri:0, instance:Tests.Product_Func_2@5acf93bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Product_Func_2 -->
      <class name="Tests.ContactUsTests">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:32 IST" name="setUp" finished-at="2025-09-17T14:03:33 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_001_VerifyContactUsButtonNavigation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_001_VerifyContactUsButtonNavigation()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:33 IST" name="TC_001_VerifyContactUsButtonNavigation" finished-at="2025-09-17T14:03:39 IST" duration-ms="6513" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_001_VerifyContactUsButtonNavigation -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:39 IST" name="tearDown" finished-at="2025-09-17T14:03:40 IST" duration-ms="375" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_001_VerifyContactUsButtonNavigation status=SUCCESS method=ContactUsTests.TC_001_VerifyContactUsButtonNavigation()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:40 IST" name="setUp" finished-at="2025-09-17T14:03:41 IST" duration-ms="1005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_002_VerifyNameFieldWithValidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_002_VerifyNameFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:41 IST" name="TC_002_VerifyNameFieldWithValidInput" finished-at="2025-09-17T14:03:44 IST" duration-ms="3058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002_VerifyNameFieldWithValidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:44 IST" name="tearDown" finished-at="2025-09-17T14:03:44 IST" duration-ms="309" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_002_VerifyNameFieldWithValidInput status=SUCCESS method=ContactUsTests.TC_002_VerifyNameFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:44 IST" name="setUp" finished-at="2025-09-17T14:03:45 IST" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_003_VerifyNameFieldWithInvalidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_003_VerifyNameFieldWithInvalidInput()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:45 IST" name="TC_003_VerifyNameFieldWithInvalidInput" finished-at="2025-09-17T14:03:48 IST" duration-ms="2929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_003_VerifyNameFieldWithInvalidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:48 IST" name="tearDown" finished-at="2025-09-17T14:03:48 IST" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_003_VerifyNameFieldWithInvalidInput status=SUCCESS method=ContactUsTests.TC_003_VerifyNameFieldWithInvalidInput()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:48 IST" name="setUp" finished-at="2025-09-17T14:03:49 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_004_VerifyEmailFieldWithValidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_004_VerifyEmailFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:49 IST" name="TC_004_VerifyEmailFieldWithValidInput" finished-at="2025-09-17T14:03:52 IST" duration-ms="2966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_004_VerifyEmailFieldWithValidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:52 IST" name="tearDown" finished-at="2025-09-17T14:03:53 IST" duration-ms="349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_004_VerifyEmailFieldWithValidInput status=SUCCESS method=ContactUsTests.TC_004_VerifyEmailFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:53 IST" name="setUp" finished-at="2025-09-17T14:03:53 IST" duration-ms="951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_005_VerifyEmailFieldWithInvalidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_005_VerifyEmailFieldWithInvalidInput()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:53 IST" name="TC_005_VerifyEmailFieldWithInvalidInput" finished-at="2025-09-17T14:03:56 IST" duration-ms="2315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_005_VerifyEmailFieldWithInvalidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:56 IST" name="tearDown" finished-at="2025-09-17T14:03:56 IST" duration-ms="469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_005_VerifyEmailFieldWithInvalidInput status=SUCCESS method=ContactUsTests.TC_005_VerifyEmailFieldWithInvalidInput()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:56 IST" name="setUp" finished-at="2025-09-17T14:03:57 IST" duration-ms="974" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_006_VerifySubjectFieldWithValidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_006_VerifySubjectFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:03:57 IST" name="TC_006_VerifySubjectFieldWithValidInput" finished-at="2025-09-17T14:04:00 IST" duration-ms="2930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_006_VerifySubjectFieldWithValidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:00 IST" name="tearDown" finished-at="2025-09-17T14:04:01 IST" duration-ms="332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_006_VerifySubjectFieldWithValidInput status=SUCCESS method=ContactUsTests.TC_006_VerifySubjectFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:01 IST" name="setUp" finished-at="2025-09-17T14:04:02 IST" duration-ms="985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_007_VerifyMessageFieldWithValidInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_007_VerifyMessageFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:02 IST" name="TC_007_VerifyMessageFieldWithValidInput" finished-at="2025-09-17T14:04:04 IST" duration-ms="2816" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_007_VerifyMessageFieldWithValidInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:04 IST" name="tearDown" finished-at="2025-09-17T14:04:05 IST" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_007_VerifyMessageFieldWithValidInput status=SUCCESS method=ContactUsTests.TC_007_VerifyMessageFieldWithValidInput()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:05 IST" name="setUp" finished-at="2025-09-17T14:04:06 IST" duration-ms="1005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_008_VerifyFileAttachment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_008_VerifyFileAttachment()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:06 IST" name="TC_008_VerifyFileAttachment" finished-at="2025-09-17T14:04:08 IST" duration-ms="2555" status="FAIL">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument: File not found : C:\Users\CHAKRADHAR\OneDrive\Documents\novel-vista.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e69f11f9a3fb298ed208744f75b3bfcd, sendKeysToElement {id=f.8E574654033B5334EDAA792508C15692.d.B2D9BFB031D5024B80064F0866200FAD.e.22, value=[Ljava.lang.CharSequence;@1725944c}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:33765}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:33765/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (e69f11f9a3fb298ed208744f75b3bfcd)] -> name: upload_file]
Session ID: e69f11f9a3fb298ed208744f75b3bfcd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument: File not found : C:\Users\CHAKRADHAR\OneDrive\Documents\novel-vista.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [e69f11f9a3fb298ed208744f75b3bfcd, sendKeysToElement {id=f.8E574654033B5334EDAA792508C15692.d.B2D9BFB031D5024B80064F0866200FAD.e.22, value=[Ljava.lang.CharSequence;@1725944c}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:33765}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:33765/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (e69f11f9a3fb298ed208744f75b3bfcd)] -> name: upload_file]
Session ID: e69f11f9a3fb298ed208744f75b3bfcd
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:110)
at Tests.ContactUsTests.TC_008_VerifyFileAttachment(ContactUsTests.java:131)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_008_VerifyFileAttachment -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:08 IST" name="tearDown" finished-at="2025-09-17T14:04:09 IST" duration-ms="308" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_008_VerifyFileAttachment status=FAILURE method=ContactUsTests.TC_008_VerifyFileAttachment()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:09 IST" name="setUp" finished-at="2025-09-17T14:04:09 IST" duration-ms="952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_009_VerifySubscriptionWithInvalidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_009_VerifySubscriptionWithInvalidEmail()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:09 IST" name="TC_009_VerifySubscriptionWithInvalidEmail" finished-at="2025-09-17T14:04:17 IST" duration-ms="7165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_009_VerifySubscriptionWithInvalidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:17 IST" name="tearDown" finished-at="2025-09-17T14:04:17 IST" duration-ms="403" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_009_VerifySubscriptionWithInvalidEmail status=SUCCESS method=ContactUsTests.TC_009_VerifySubscriptionWithInvalidEmail()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:17 IST" name="setUp" finished-at="2025-09-17T14:04:18 IST" duration-ms="972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_010_VerifySubscriptionWithValidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_010_VerifySubscriptionWithValidEmail()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:18 IST" name="TC_010_VerifySubscriptionWithValidEmail" finished-at="2025-09-17T14:04:21 IST" duration-ms="2975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_010_VerifySubscriptionWithValidEmail -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:21 IST" name="tearDown" finished-at="2025-09-17T14:04:21 IST" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_010_VerifySubscriptionWithValidEmail status=SUCCESS method=ContactUsTests.TC_010_VerifySubscriptionWithValidEmail()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:21 IST" name="setUp" finished-at="2025-09-17T14:04:22 IST" duration-ms="964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_011_VerifySubmitButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_011_VerifySubmitButton()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:22 IST" name="TC_011_VerifySubmitButton" finished-at="2025-09-17T14:04:25 IST" duration-ms="2864" status="FAIL">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument: File not found : C:\Users\CHAKRADHAR\OneDrive\Documents\novel-vista.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c4bfb808f5e6cb2504d45dedd2a72f6e, sendKeysToElement {id=f.2572C83CF6F38C9C0790C32EB26DF908.d.6611178DE500359D61B34D12A3196392.e.24, value=[Ljava.lang.CharSequence;@6323713d}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:33893}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:33893/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (c4bfb808f5e6cb2504d45dedd2a72f6e)] -> name: upload_file]
Session ID: c4bfb808f5e6cb2504d45dedd2a72f6e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument: File not found : C:\Users\CHAKRADHAR\OneDrive\Documents\novel-vista.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c4bfb808f5e6cb2504d45dedd2a72f6e, sendKeysToElement {id=f.2572C83CF6F38C9C0790C32EB26DF908.d.6611178DE500359D61B34D12A3196392.e.24, value=[Ljava.lang.CharSequence;@6323713d}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:33893}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:33893/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (c4bfb808f5e6cb2504d45dedd2a72f6e)] -> name: upload_file]
Session ID: c4bfb808f5e6cb2504d45dedd2a72f6e
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:110)
at Tests.ContactUsTests.TC_011_VerifySubmitButton(ContactUsTests.java:185)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_011_VerifySubmitButton -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:25 IST" name="tearDown" finished-at="2025-09-17T14:04:25 IST" duration-ms="349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_011_VerifySubmitButton status=FAILURE method=ContactUsTests.TC_011_VerifySubmitButton()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:25 IST" name="setUp" finished-at="2025-09-17T14:04:26 IST" duration-ms="987" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_012_VerifyHomeButtonAfterSubmit()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_012_VerifyHomeButtonAfterSubmit()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:26 IST" name="TC_012_VerifyHomeButtonAfterSubmit" finished-at="2025-09-17T14:04:29 IST" duration-ms="2967" status="FAIL">
          <exception class="org.openqa.selenium.InvalidArgumentException">
            <message>
              <![CDATA[invalid argument: File not found : C:\Users\CHAKRADHAR\OneDrive\Documents\novel-vista.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6a9a8fdda5c941232f57c440295ef6c4, sendKeysToElement {id=f.995363D99947C72995A4853B85675ECA.d.A1520000F40EB9779EEAF4DC7D80ACBD.e.14, value=[Ljava.lang.CharSequence;@3190f1ea}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:33943}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:33943/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (6a9a8fdda5c941232f57c440295ef6c4)] -> name: upload_file]
Session ID: 6a9a8fdda5c941232f57c440295ef6c4]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidArgumentException: invalid argument: File not found : C:\Users\CHAKRADHAR\OneDrive\Documents\novel-vista.txt
  (Session info: chrome=140.0.7339.128)
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [6a9a8fdda5c941232f57c440295ef6c4, sendKeysToElement {id=f.995363D99947C72995A4853B85675ECA.d.A1520000F40EB9779EEAF4DC7D80ACBD.e.14, value=[Ljava.lang.CharSequence;@3190f1ea}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:33943}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:33943/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (6a9a8fdda5c941232f57c440295ef6c4)] -> name: upload_file]
Session ID: 6a9a8fdda5c941232f57c440295ef6c4
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:110)
at Tests.ContactUsTests.TC_012_VerifyHomeButtonAfterSubmit(ContactUsTests.java:204)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_012_VerifyHomeButtonAfterSubmit -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:29 IST" name="tearDown" finished-at="2025-09-17T14:04:30 IST" duration-ms="321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_012_VerifyHomeButtonAfterSubmit status=FAILURE method=ContactUsTests.TC_012_VerifyHomeButtonAfterSubmit()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:30 IST" name="setUp" finished-at="2025-09-17T14:04:31 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_013_VerifyScrollUpFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_013_VerifyScrollUpFunctionality()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:31 IST" name="TC_013_VerifyScrollUpFunctionality" finished-at="2025-09-17T14:04:34 IST" duration-ms="3015" status="FAIL">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class java.lang.Double cannot be cast to class java.lang.Long (java.lang.Double and java.lang.Long are in module java.base of loader 'bootstrap')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class java.lang.Double cannot be cast to class java.lang.Long (java.lang.Double and java.lang.Long are in module java.base of loader 'bootstrap')
at Tests.ContactUsTests.lambda$0(ContactUsTests.java:231)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at Tests.ContactUsTests.TC_013_VerifyScrollUpFunctionality(ContactUsTests.java:231)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_013_VerifyScrollUpFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:34 IST" name="tearDown" finished-at="2025-09-17T14:04:34 IST" duration-ms="474" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_013_VerifyScrollUpFunctionality status=FAILURE method=ContactUsTests.TC_013_VerifyScrollUpFunctionality()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:34 IST" name="setUp" finished-at="2025-09-17T14:04:35 IST" duration-ms="956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.ContactUsTests.TC_014_VerifyScrollDownFunctionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="TC_014_VerifyScrollDownFunctionality()[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:35 IST" name="TC_014_VerifyScrollDownFunctionality" finished-at="2025-09-17T14:04:38 IST" duration-ms="3144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_014_VerifyScrollDownFunctionality -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.ContactUsTests@18d87d80]" started-at="2025-09-17T14:04:38 IST" name="tearDown" finished-at="2025-09-17T14:04:39 IST" duration-ms="376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_014_VerifyScrollDownFunctionality status=SUCCESS method=ContactUsTests.TC_014_VerifyScrollDownFunctionality()[pri:0, instance:Tests.ContactUsTests@18d87d80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.ContactUsTests -->
      <class name="Tests.API_UI_1">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:00:55 IST" name="setUp" finished-at="2025-09-17T14:00:56 IST" duration-ms="957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyAPIsListAvailabilityOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIsListAvailabilityOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:00:56 IST" name="verifyAPIsListAvailabilityOnAPITestingPage" finished-at="2025-09-17T14:00:58 IST" duration-ms="2326" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIsListAvailabilityOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:00:58 IST" name="tearDown" finished-at="2025-09-17T14:00:59 IST" duration-ms="306" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIsListAvailabilityOnAPITestingPage status=SUCCESS method=API_UI_1.verifyAPIsListAvailabilityOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:00:59 IST" name="setUp" finished-at="2025-09-17T14:01:00 IST" duration-ms="947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyAPIsListTitleAlignmentOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIsListTitleAlignmentOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:00 IST" name="verifyAPIsListTitleAlignmentOnAPITestingPage" finished-at="2025-09-17T14:01:02 IST" duration-ms="2263" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(),'APIs List for practice')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [13dd937bc04bc7da812d7c62057e7d4c, findElement {using=xpath, value=//h2[contains(text(),'APIs List for practice')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:31988}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:31988/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 13dd937bc04bc7da812d7c62057e7d4c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(),'APIs List for practice')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [13dd937bc04bc7da812d7c62057e7d4c, findElement {using=xpath, value=//h2[contains(text(),'APIs List for practice')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:31988}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:31988/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 13dd937bc04bc7da812d7c62057e7d4c
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.API_UI_1.verifyAPIsListTitleAlignmentOnAPITestingPage(API_UI_1.java:374)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIsListTitleAlignmentOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:02 IST" name="tearDown" finished-at="2025-09-17T14:01:02 IST" duration-ms="304" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIsListTitleAlignmentOnAPITestingPage status=FAILURE method=API_UI_1.verifyAPIsListTitleAlignmentOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:02 IST" name="setUp" finished-at="2025-09-17T14:01:03 IST" duration-ms="972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyAPIsListTitleOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAPIsListTitleOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:03 IST" name="verifyAPIsListTitleOnAPITestingPage" finished-at="2025-09-17T14:01:05 IST" duration-ms="1867" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(),'APIs List for practice')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [984452f77c721ec7cb168c3c58dc5876, findElement {using=xpath, value=//h2[contains(text(),'APIs List for practice')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:32028}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:32028/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 984452f77c721ec7cb168c3c58dc5876]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(),'APIs List for practice')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [984452f77c721ec7cb168c3c58dc5876, findElement {using=xpath, value=//h2[contains(text(),'APIs List for practice')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:32028}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:32028/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 984452f77c721ec7cb168c3c58dc5876
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.API_UI_1.verifyAPIsListTitleOnAPITestingPage(API_UI_1.java:360)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAPIsListTitleOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:05 IST" name="tearDown" finished-at="2025-09-17T14:01:05 IST" duration-ms="283" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAPIsListTitleOnAPITestingPage status=FAILURE method=API_UI_1.verifyAPIsListTitleOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:05 IST" name="setUp" finished-at="2025-09-17T14:01:06 IST" duration-ms="949" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyAvailabilityOfFeedbackForUsSectionOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAvailabilityOfFeedbackForUsSectionOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:06 IST" name="verifyAvailabilityOfFeedbackForUsSectionOnAPITestingPage" finished-at="2025-09-17T14:01:08 IST" duration-ms="1742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAvailabilityOfFeedbackForUsSectionOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:08 IST" name="tearDown" finished-at="2025-09-17T14:01:08 IST" duration-ms="345" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAvailabilityOfFeedbackForUsSectionOnAPITestingPage status=SUCCESS method=API_UI_1.verifyAvailabilityOfFeedbackForUsSectionOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:08 IST" name="setUp" finished-at="2025-09-17T14:01:09 IST" duration-ms="984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyContentsUnderFeedbackForUsSection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyContentsUnderFeedbackForUsSection()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:09 IST" name="verifyContentsUnderFeedbackForUsSection" finished-at="2025-09-17T14:01:12 IST" duration-ms="2430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContentsUnderFeedbackForUsSection -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:12 IST" name="tearDown" finished-at="2025-09-17T14:01:12 IST" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContentsUnderFeedbackForUsSection status=SUCCESS method=API_UI_1.verifyContentsUnderFeedbackForUsSection()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:12 IST" name="setUp" finished-at="2025-09-17T14:01:13 IST" duration-ms="984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyCursorChangeOnHoveringAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnHoveringAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:13 IST" name="verifyCursorChangeOnHoveringAPITestingPage" finished-at="2025-09-17T14:01:15 IST" duration-ms="2360" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"(//a[contains(text(), 'API URL')])[1]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c171f0f20730ef2b68b23ca3d47a5adb, findElement {using=xpath, value=(//a[contains(text(), 'API URL')])[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:32159}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:32159/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c171f0f20730ef2b68b23ca3d47a5adb]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"(//a[contains(text(), 'API URL')])[1]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c171f0f20730ef2b68b23ca3d47a5adb, findElement {using=xpath, value=(//a[contains(text(), 'API URL')])[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:32159}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:32159/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c171f0f20730ef2b68b23ca3d47a5adb
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.API_UI_1.verifyCursorChangeOnHoveringAPITestingPage(API_UI_1.java:408)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnHoveringAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:15 IST" name="tearDown" finished-at="2025-09-17T14:01:16 IST" duration-ms="292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnHoveringAPITestingPage status=FAILURE method=API_UI_1.verifyCursorChangeOnHoveringAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:16 IST" name="setUp" finished-at="2025-09-17T14:01:17 IST" duration-ms="986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyDeclarationAtEndOfAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyDeclarationAtEndOfAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:17 IST" name="verifyDeclarationAtEndOfAPITestingPage" finished-at="2025-09-17T14:01:19 IST" duration-ms="2388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDeclarationAtEndOfAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:19 IST" name="tearDown" finished-at="2025-09-17T14:01:19 IST" duration-ms="314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyDeclarationAtEndOfAPITestingPage status=SUCCESS method=API_UI_1.verifyDeclarationAtEndOfAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:19 IST" name="setUp" finished-at="2025-09-17T14:01:20 IST" duration-ms="984" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyEmailIdURLForFeedback()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyEmailIdURLForFeedback()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:20 IST" name="verifyEmailIdURLForFeedback" finished-at="2025-09-17T14:01:22 IST" duration-ms="1747" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEmailIdURLForFeedback -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:22 IST" name="tearDown" finished-at="2025-09-17T14:01:22 IST" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyEmailIdURLForFeedback status=SUCCESS method=API_UI_1.verifyEmailIdURLForFeedback()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:22 IST" name="setUp" finished-at="2025-09-17T14:01:23 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyFontSizeOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFontSizeOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:23 IST" name="verifyFontSizeOnAPITestingPage" finished-at="2025-09-17T14:01:26 IST" duration-ms="2388" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='contact-form']//h2"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b1493fb178549b6a234c0021298f2ad2, findElement {using=xpath, value=//div[@class='contact-form']//h2}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:32280}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:32280/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b1493fb178549b6a234c0021298f2ad2]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@class='contact-form']//h2"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b1493fb178549b6a234c0021298f2ad2, findElement {using=xpath, value=//div[@class='contact-form']//h2}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:32280}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:32280/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b1493fb178549b6a234c0021298f2ad2
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.API_UI_1.verifyFontSizeOnAPITestingPage(API_UI_1.java:431)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFontSizeOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:26 IST" name="tearDown" finished-at="2025-09-17T14:01:26 IST" duration-ms="287" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFontSizeOnAPITestingPage status=FAILURE method=API_UI_1.verifyFontSizeOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:26 IST" name="setUp" finished-at="2025-09-17T14:01:27 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyFontStyleOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFontStyleOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:27 IST" name="verifyFontStyleOnAPITestingPage" finished-at="2025-09-17T14:01:35 IST" duration-ms="7918" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(),'APIs List for practice')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b2994a4a72ca15d758b7a3c64bf11dfc, findElement {using=xpath, value=//h2[contains(text(),'APIs List for practice')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:32316}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:32316/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b2994a4a72ca15d758b7a3c64bf11dfc]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//h2[contains(text(),'APIs List for practice')]"}
  (Session info: chrome=140.0.7339.128)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.25.0', revision: '8a8aea2337'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.15'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [b2994a4a72ca15d758b7a3c64bf11dfc, findElement {using=xpath, value=//h2[contains(text(),'APIs List for practice')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 140.0.7339.128, chrome: {chromedriverVersion: 140.0.7339.82 (bc93617e21c3..., userDataDir: C:\WINDOWS\SystemTemp\scope...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:32316}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:32316/devtoo..., se:cdpVersion: 140.0.7339.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b2994a4a72ca15d758b7a3c64bf11dfc
at jdk.internal.reflect.GeneratedConstructorAccessor35.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at Tests.API_UI_1.verifyFontStyleOnAPITestingPage(API_UI_1.java:449)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFontStyleOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:35 IST" name="tearDown" finished-at="2025-09-17T14:01:35 IST" duration-ms="277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFontStyleOnAPITestingPage status=FAILURE method=API_UI_1.verifyFontStyleOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:35 IST" name="setUp" finished-at="2025-09-17T14:01:36 IST" duration-ms="955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyFunctionalityOfAPITestingIconOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfAPITestingIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:01:36 IST" name="verifyFunctionalityOfAPITestingIconOnAPITestingPage" finished-at="2025-09-17T14:02:01 IST" duration-ms="25002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfAPITestingIconOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:01 IST" name="tearDown" finished-at="2025-09-17T14:02:02 IST" duration-ms="362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfAPITestingIconOnAPITestingPage status=SUCCESS method=API_UI_1.verifyFunctionalityOfAPITestingIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:02 IST" name="setUp" finished-at="2025-09-17T14:02:03 IST" duration-ms="1018" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyFunctionalityOfAutomationExerciseLogoOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfAutomationExerciseLogoOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:03 IST" name="verifyFunctionalityOfAutomationExerciseLogoOnAPITestingPage" finished-at="2025-09-17T14:02:08 IST" duration-ms="5879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfAutomationExerciseLogoOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:08 IST" name="tearDown" finished-at="2025-09-17T14:02:09 IST" duration-ms="472" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfAutomationExerciseLogoOnAPITestingPage status=SUCCESS method=API_UI_1.verifyFunctionalityOfAutomationExerciseLogoOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:09 IST" name="setUp" finished-at="2025-09-17T14:02:10 IST" duration-ms="959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyFunctionalityOfCartIconOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfCartIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:10 IST" name="verifyFunctionalityOfCartIconOnAPITestingPage" finished-at="2025-09-17T14:02:13 IST" duration-ms="3469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfCartIconOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:13 IST" name="tearDown" finished-at="2025-09-17T14:02:14 IST" duration-ms="385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfCartIconOnAPITestingPage status=SUCCESS method=API_UI_1.verifyFunctionalityOfCartIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:14 IST" name="setUp" finished-at="2025-09-17T14:02:15 IST" duration-ms="951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyFunctionalityOfContactUsIconOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfContactUsIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:15 IST" name="verifyFunctionalityOfContactUsIconOnAPITestingPage" finished-at="2025-09-17T14:02:18 IST" duration-ms="3448" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfContactUsIconOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:18 IST" name="tearDown" finished-at="2025-09-17T14:02:18 IST" duration-ms="351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfContactUsIconOnAPITestingPage status=SUCCESS method=API_UI_1.verifyFunctionalityOfContactUsIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:18 IST" name="setUp" finished-at="2025-09-17T14:02:19 IST" duration-ms="972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyFunctionalityOfHomeIconOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfHomeIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:19 IST" name="verifyFunctionalityOfHomeIconOnAPITestingPage" finished-at="2025-09-17T14:02:28 IST" duration-ms="8916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfHomeIconOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:28 IST" name="tearDown" finished-at="2025-09-17T14:02:29 IST" duration-ms="410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfHomeIconOnAPITestingPage status=SUCCESS method=API_UI_1.verifyFunctionalityOfHomeIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:29 IST" name="setUp" finished-at="2025-09-17T14:02:30 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyFunctionalityOfLoginIconOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfLoginIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:30 IST" name="verifyFunctionalityOfLoginIconOnAPITestingPage" finished-at="2025-09-17T14:02:35 IST" duration-ms="5569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfLoginIconOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:35 IST" name="tearDown" finished-at="2025-09-17T14:02:36 IST" duration-ms="443" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfLoginIconOnAPITestingPage status=SUCCESS method=API_UI_1.verifyFunctionalityOfLoginIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:36 IST" name="setUp" finished-at="2025-09-17T14:02:37 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyFunctionalityOfProductsIconOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfProductsIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:37 IST" name="verifyFunctionalityOfProductsIconOnAPITestingPage" finished-at="2025-09-17T14:02:42 IST" duration-ms="5502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfProductsIconOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:42 IST" name="tearDown" finished-at="2025-09-17T14:02:43 IST" duration-ms="527" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfProductsIconOnAPITestingPage status=SUCCESS method=API_UI_1.verifyFunctionalityOfProductsIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:43 IST" name="setUp" finished-at="2025-09-17T14:02:44 IST" duration-ms="990" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyFunctionalityOfTestCasesIconOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfTestCasesIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:44 IST" name="verifyFunctionalityOfTestCasesIconOnAPITestingPage" finished-at="2025-09-17T14:02:50 IST" duration-ms="5901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfTestCasesIconOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:50 IST" name="tearDown" finished-at="2025-09-17T14:02:50 IST" duration-ms="344" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfTestCasesIconOnAPITestingPage status=SUCCESS method=API_UI_1.verifyFunctionalityOfTestCasesIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:50 IST" name="setUp" finished-at="2025-09-17T14:02:51 IST" duration-ms="973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyFunctionalityOfVideoTutorialsIconOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyFunctionalityOfVideoTutorialsIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:51 IST" name="verifyFunctionalityOfVideoTutorialsIconOnAPITestingPage" finished-at="2025-09-17T14:02:57 IST" duration-ms="6142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFunctionalityOfVideoTutorialsIconOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:57 IST" name="tearDown" finished-at="2025-09-17T14:02:58 IST" duration-ms="464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFunctionalityOfVideoTutorialsIconOnAPITestingPage status=SUCCESS method=API_UI_1.verifyFunctionalityOfVideoTutorialsIconOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:58 IST" name="setUp" finished-at="2025-09-17T14:02:59 IST" duration-ms="972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyScrollDownFeatureUsingKeyboardOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDownFeatureUsingKeyboardOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:02:59 IST" name="verifyScrollDownFeatureUsingKeyboardOnAPITestingPage" finished-at="2025-09-17T14:03:01 IST" duration-ms="2342" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDownFeatureUsingKeyboardOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:01 IST" name="tearDown" finished-at="2025-09-17T14:03:01 IST" duration-ms="320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDownFeatureUsingKeyboardOnAPITestingPage status=SUCCESS method=API_UI_1.verifyScrollDownFeatureUsingKeyboardOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:01 IST" name="setUp" finished-at="2025-09-17T14:03:02 IST" duration-ms="951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyScrollDownFeatureUsingMouseClickOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDownFeatureUsingMouseClickOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:02 IST" name="verifyScrollDownFeatureUsingMouseClickOnAPITestingPage" finished-at="2025-09-17T14:03:04 IST" duration-ms="2217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDownFeatureUsingMouseClickOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:04 IST" name="tearDown" finished-at="2025-09-17T14:03:05 IST" duration-ms="329" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDownFeatureUsingMouseClickOnAPITestingPage status=SUCCESS method=API_UI_1.verifyScrollDownFeatureUsingMouseClickOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:05 IST" name="setUp" finished-at="2025-09-17T14:03:06 IST" duration-ms="958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyScrollDownFeatureUsingMouseScrollOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDownFeatureUsingMouseScrollOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:06 IST" name="verifyScrollDownFeatureUsingMouseScrollOnAPITestingPage" finished-at="2025-09-17T14:03:08 IST" duration-ms="2387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDownFeatureUsingMouseScrollOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:08 IST" name="tearDown" finished-at="2025-09-17T14:03:08 IST" duration-ms="312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDownFeatureUsingMouseScrollOnAPITestingPage status=SUCCESS method=API_UI_1.verifyScrollDownFeatureUsingMouseScrollOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:08 IST" name="setUp" finished-at="2025-09-17T14:03:09 IST" duration-ms="978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyScrollUpFeatureUsingKeyboardOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUpFeatureUsingKeyboardOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:09 IST" name="verifyScrollUpFeatureUsingKeyboardOnAPITestingPage" finished-at="2025-09-17T14:03:12 IST" duration-ms="2357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUpFeatureUsingKeyboardOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:12 IST" name="tearDown" finished-at="2025-09-17T14:03:12 IST" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUpFeatureUsingKeyboardOnAPITestingPage status=SUCCESS method=API_UI_1.verifyScrollUpFeatureUsingKeyboardOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:12 IST" name="setUp" finished-at="2025-09-17T14:03:13 IST" duration-ms="951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyScrollUpFeatureUsingMouseClickOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUpFeatureUsingMouseClickOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:13 IST" name="verifyScrollUpFeatureUsingMouseClickOnAPITestingPage" finished-at="2025-09-17T14:03:15 IST" duration-ms="1809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUpFeatureUsingMouseClickOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:15 IST" name="tearDown" finished-at="2025-09-17T14:03:15 IST" duration-ms="351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUpFeatureUsingMouseClickOnAPITestingPage status=SUCCESS method=API_UI_1.verifyScrollUpFeatureUsingMouseClickOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:15 IST" name="setUp" finished-at="2025-09-17T14:03:16 IST" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifyScrollUpFeatureUsingMouseScrollOnAPITestingPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUpFeatureUsingMouseScrollOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:16 IST" name="verifyScrollUpFeatureUsingMouseScrollOnAPITestingPage" finished-at="2025-09-17T14:03:19 IST" duration-ms="2549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUpFeatureUsingMouseScrollOnAPITestingPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:19 IST" name="tearDown" finished-at="2025-09-17T14:03:19 IST" duration-ms="357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUpFeatureUsingMouseScrollOnAPITestingPage status=SUCCESS method=API_UI_1.verifyScrollUpFeatureUsingMouseScrollOnAPITestingPage()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:19 IST" name="setUp" finished-at="2025-09-17T14:03:20 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifySubscriptionButtonIsWorking()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubscriptionButtonIsWorking()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:20 IST" name="verifySubscriptionButtonIsWorking" finished-at="2025-09-17T14:03:28 IST" duration-ms="7975" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubscriptionButtonIsWorking -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:28 IST" name="tearDown" finished-at="2025-09-17T14:03:28 IST" duration-ms="293" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubscriptionButtonIsWorking status=SUCCESS method=API_UI_1.verifySubscriptionButtonIsWorking()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:28 IST" name="setUp" finished-at="2025-09-17T14:03:29 IST" duration-ms="1003" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.API_UI_1.verifySubscriptionFieldIsAcceptingInput()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySubscriptionFieldIsAcceptingInput()[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:29 IST" name="verifySubscriptionFieldIsAcceptingInput" finished-at="2025-09-17T14:03:31 IST" duration-ms="2175" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySubscriptionFieldIsAcceptingInput -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.API_UI_1@1af2d44a]" started-at="2025-09-17T14:03:31 IST" name="tearDown" finished-at="2025-09-17T14:03:32 IST" duration-ms="327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySubscriptionFieldIsAcceptingInput status=SUCCESS method=API_UI_1.verifySubscriptionFieldIsAcceptingInput()[pri:0, instance:Tests.API_UI_1@1af2d44a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.API_UI_1 -->
      <class name="Tests.Product_UI_1">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:16:40 IST" name="setUp" finished-at="2025-09-17T13:16:41 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_1.verifyCartIconOnProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCartIconOnProductsPage()[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:16:41 IST" name="verifyCartIconOnProductsPage" finished-at="2025-09-17T13:16:47 IST" duration-ms="6498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCartIconOnProductsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:16:47 IST" name="tearDown" finished-at="2025-09-17T13:16:48 IST" duration-ms="438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCartIconOnProductsPage status=SUCCESS method=Product_UI_1.verifyCartIconOnProductsPage()[pri:0, instance:Tests.Product_UI_1@4229bb3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:16:48 IST" name="setUp" finished-at="2025-09-17T13:16:49 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_1.verifyHomeIconOnProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyHomeIconOnProductsPage()[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:16:49 IST" name="verifyHomeIconOnProductsPage" finished-at="2025-09-17T13:16:56 IST" duration-ms="6830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHomeIconOnProductsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:16:56 IST" name="tearDown" finished-at="2025-09-17T13:16:56 IST" duration-ms="583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyHomeIconOnProductsPage status=SUCCESS method=Product_UI_1.verifyHomeIconOnProductsPage()[pri:0, instance:Tests.Product_UI_1@4229bb3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:16:56 IST" name="setUp" finished-at="2025-09-17T13:16:57 IST" duration-ms="1015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_1.verifyLoginIconOnProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginIconOnProductsPage()[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:16:57 IST" name="verifyLoginIconOnProductsPage" finished-at="2025-09-17T13:17:04 IST" duration-ms="6644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginIconOnProductsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:17:04 IST" name="tearDown" finished-at="2025-09-17T13:17:04 IST" duration-ms="445" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyLoginIconOnProductsPage status=SUCCESS method=Product_UI_1.verifyLoginIconOnProductsPage()[pri:0, instance:Tests.Product_UI_1@4229bb3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:17:04 IST" name="setUp" finished-at="2025-09-17T13:17:05 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_1.verifyProductIconOnProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyProductIconOnProductsPage()[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:17:05 IST" name="verifyProductIconOnProductsPage" finished-at="2025-09-17T13:17:13 IST" duration-ms="8052" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductIconOnProductsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:17:13 IST" name="tearDown" finished-at="2025-09-17T13:17:14 IST" duration-ms="381" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyProductIconOnProductsPage status=SUCCESS method=Product_UI_1.verifyProductIconOnProductsPage()[pri:0, instance:Tests.Product_UI_1@4229bb3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:17:14 IST" name="setUp" finished-at="2025-09-17T13:17:15 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_1.verifyTestCasesIconOnProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyTestCasesIconOnProductsPage()[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:17:15 IST" name="verifyTestCasesIconOnProductsPage" finished-at="2025-09-17T13:17:21 IST" duration-ms="6528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTestCasesIconOnProductsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_1@4229bb3f]" started-at="2025-09-17T13:17:21 IST" name="tearDown" finished-at="2025-09-17T13:17:22 IST" duration-ms="468" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTestCasesIconOnProductsPage status=SUCCESS method=Product_UI_1.verifyTestCasesIconOnProductsPage()[pri:0, instance:Tests.Product_UI_1@4229bb3f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Product_UI_1 -->
      <class name="Tests.Login_3">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:53:59 IST" name="setUp" finished-at="2025-09-17T13:54:00 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_3.testCaseSensitivityInCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCaseSensitivityInCredentials()[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:00 IST" name="testCaseSensitivityInCredentials" finished-at="2025-09-17T13:54:07 IST" duration-ms="6528" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCaseSensitivityInCredentials -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:07 IST" name="tearDown" finished-at="2025-09-17T13:54:07 IST" duration-ms="451" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCaseSensitivityInCredentials status=SUCCESS method=Login_3.testCaseSensitivityInCredentials()[pri:0, instance:Tests.Login_3@7e7be63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:07 IST" name="setUp" finished-at="2025-09-17T13:54:08 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_3.testLogoutAfterLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLogoutAfterLogin()[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:08 IST" name="testLogoutAfterLogin" finished-at="2025-09-17T13:54:37 IST" duration-ms="28514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogoutAfterLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:37 IST" name="tearDown" finished-at="2025-09-17T13:54:37 IST" duration-ms="454" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLogoutAfterLogin status=SUCCESS method=Login_3.testLogoutAfterLogin()[pri:0, instance:Tests.Login_3@7e7be63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:37 IST" name="setUp" finished-at="2025-09-17T13:54:38 IST" duration-ms="995" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_3.testMaxCharacterLimitForUserIdAndPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMaxCharacterLimitForUserIdAndPassword()[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:38 IST" name="testMaxCharacterLimitForUserIdAndPassword" finished-at="2025-09-17T13:54:40 IST" duration-ms="2186" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Email field accepts more than max characters. expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Email field accepts more than max characters. expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at Tests.Login_3.testMaxCharacterLimitForUserIdAndPassword(Login_3.java:102)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaxCharacterLimitForUserIdAndPassword -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:40 IST" name="tearDown" finished-at="2025-09-17T13:54:41 IST" duration-ms="298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMaxCharacterLimitForUserIdAndPassword status=FAILURE method=Login_3.testMaxCharacterLimitForUserIdAndPassword()[pri:0, instance:Tests.Login_3@7e7be63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:41 IST" name="setUp" finished-at="2025-09-17T13:54:41 IST" duration-ms="953" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_3.testSubscriptionFieldDisplayedOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSubscriptionFieldDisplayedOnLoginPage()[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:41 IST" name="testSubscriptionFieldDisplayedOnLoginPage" finished-at="2025-09-17T13:54:44 IST" duration-ms="2114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubscriptionFieldDisplayedOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:44 IST" name="tearDown" finished-at="2025-09-17T13:54:44 IST" duration-ms="282" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSubscriptionFieldDisplayedOnLoginPage status=SUCCESS method=Login_3.testSubscriptionFieldDisplayedOnLoginPage()[pri:0, instance:Tests.Login_3@7e7be63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:44 IST" name="setUp" finished-at="2025-09-17T13:54:45 IST" duration-ms="961" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_3.testUserIconOrUsernameDisplayedAfterLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testUserIconOrUsernameDisplayedAfterLogin()[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:45 IST" name="testUserIconOrUsernameDisplayedAfterLogin" finished-at="2025-09-17T13:54:54 IST" duration-ms="8809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserIconOrUsernameDisplayedAfterLogin -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_3@7e7be63f]" started-at="2025-09-17T13:54:54 IST" name="tearDown" finished-at="2025-09-17T13:54:54 IST" duration-ms="454" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testUserIconOrUsernameDisplayedAfterLogin status=SUCCESS method=Login_3.testUserIconOrUsernameDisplayedAfterLogin()[pri:0, instance:Tests.Login_3@7e7be63f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Login_3 -->
      <class name="Tests.Product_UI_2">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:06 IST" name="setUp" finished-at="2025-09-17T13:15:08 IST" duration-ms="2200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_2.verifyApiTestingIconOnProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyApiTestingIconOnProductsPage()[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:08 IST" name="verifyApiTestingIconOnProductsPage" finished-at="2025-09-17T13:15:16 IST" duration-ms="7922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyApiTestingIconOnProductsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:16 IST" name="tearDown" finished-at="2025-09-17T13:15:17 IST" duration-ms="616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyApiTestingIconOnProductsPage status=SUCCESS method=Product_UI_2.verifyApiTestingIconOnProductsPage()[pri:0, instance:Tests.Product_UI_2@3fb1549b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:17 IST" name="setUp" finished-at="2025-09-17T13:15:18 IST" duration-ms="1041" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_2.verifyAutomationExerciseLogoOnProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAutomationExerciseLogoOnProductsPage()[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:18 IST" name="verifyAutomationExerciseLogoOnProductsPage" finished-at="2025-09-17T13:15:24 IST" duration-ms="6181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAutomationExerciseLogoOnProductsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:24 IST" name="tearDown" finished-at="2025-09-17T13:15:25 IST" duration-ms="533" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAutomationExerciseLogoOnProductsPage status=SUCCESS method=Product_UI_2.verifyAutomationExerciseLogoOnProductsPage()[pri:0, instance:Tests.Product_UI_2@3fb1549b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:25 IST" name="setUp" finished-at="2025-09-17T13:15:26 IST" duration-ms="1016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_2.verifyContactUsIconOnProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyContactUsIconOnProductsPage()[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:26 IST" name="verifyContactUsIconOnProductsPage" finished-at="2025-09-17T13:15:32 IST" duration-ms="6858" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactUsIconOnProductsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:32 IST" name="tearDown" finished-at="2025-09-17T13:15:33 IST" duration-ms="445" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactUsIconOnProductsPage status=SUCCESS method=Product_UI_2.verifyContactUsIconOnProductsPage()[pri:0, instance:Tests.Product_UI_2@3fb1549b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:33 IST" name="setUp" finished-at="2025-09-17T13:15:34 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_2.verifyScrollDownFeatureOnProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDownFeatureOnProductsPage()[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:34 IST" name="verifyScrollDownFeatureOnProductsPage" finished-at="2025-09-17T13:15:38 IST" duration-ms="4292" status="FAIL">
          <exception class="java.lang.ClassCastException">
            <message>
              <![CDATA[class java.lang.Double cannot be cast to class java.lang.Long (java.lang.Double and java.lang.Long are in module java.base of loader 'bootstrap')]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ClassCastException: class java.lang.Double cannot be cast to class java.lang.Long (java.lang.Double and java.lang.Long are in module java.base of loader 'bootstrap')
at Tests.Product_UI_2.verifyScrollDownFeatureOnProductsPage(Product_UI_2.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ClassCastException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDownFeatureOnProductsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:38 IST" name="tearDown" finished-at="2025-09-17T13:15:39 IST" duration-ms="412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDownFeatureOnProductsPage status=FAILURE method=Product_UI_2.verifyScrollDownFeatureOnProductsPage()[pri:0, instance:Tests.Product_UI_2@3fb1549b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:39 IST" name="setUp" finished-at="2025-09-17T13:15:40 IST" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_2.verifyVideoTutorialsIconOnProductsPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyVideoTutorialsIconOnProductsPage()[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:40 IST" name="verifyVideoTutorialsIconOnProductsPage" finished-at="2025-09-17T13:15:48 IST" duration-ms="8455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyVideoTutorialsIconOnProductsPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_2@3fb1549b]" started-at="2025-09-17T13:15:48 IST" name="tearDown" finished-at="2025-09-17T13:15:50 IST" duration-ms="2101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyVideoTutorialsIconOnProductsPage status=SUCCESS method=Product_UI_2.verifyVideoTutorialsIconOnProductsPage()[pri:0, instance:Tests.Product_UI_2@3fb1549b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Product_UI_2 -->
      <class name="Tests.Login_4">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:55:46 IST" name="setUp" finished-at="2025-09-17T13:55:47 IST" duration-ms="959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_4.testCartIconOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCartIconOnLoginPage()[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:55:47 IST" name="testCartIconOnLoginPage" finished-at="2025-09-17T13:55:53 IST" duration-ms="5538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCartIconOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:55:53 IST" name="tearDown" finished-at="2025-09-17T13:55:53 IST" duration-ms="336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCartIconOnLoginPage status=SUCCESS method=Login_4.testCartIconOnLoginPage()[pri:0, instance:Tests.Login_4@614ca7df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:55:53 IST" name="setUp" finished-at="2025-09-17T13:55:54 IST" duration-ms="1021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_4.testHomeIconOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testHomeIconOnLoginPage()[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:55:54 IST" name="testHomeIconOnLoginPage" finished-at="2025-09-17T13:56:01 IST" duration-ms="6550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHomeIconOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:56:01 IST" name="tearDown" finished-at="2025-09-17T13:56:01 IST" duration-ms="410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testHomeIconOnLoginPage status=SUCCESS method=Login_4.testHomeIconOnLoginPage()[pri:0, instance:Tests.Login_4@614ca7df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:56:01 IST" name="setUp" finished-at="2025-09-17T13:56:02 IST" duration-ms="975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_4.testLoginIconOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testLoginIconOnLoginPage()[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:56:02 IST" name="testLoginIconOnLoginPage" finished-at="2025-09-17T13:56:05 IST" duration-ms="2918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoginIconOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:56:05 IST" name="tearDown" finished-at="2025-09-17T13:56:06 IST" duration-ms="302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoginIconOnLoginPage status=SUCCESS method=Login_4.testLoginIconOnLoginPage()[pri:0, instance:Tests.Login_4@614ca7df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:56:06 IST" name="setUp" finished-at="2025-09-17T13:56:06 IST" duration-ms="952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_4.testProductIconOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testProductIconOnLoginPage()[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:56:06 IST" name="testProductIconOnLoginPage" finished-at="2025-09-17T13:56:13 IST" duration-ms="6107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductIconOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:56:13 IST" name="tearDown" finished-at="2025-09-17T13:56:13 IST" duration-ms="364" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProductIconOnLoginPage status=SUCCESS method=Login_4.testProductIconOnLoginPage()[pri:0, instance:Tests.Login_4@614ca7df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:56:13 IST" name="setUp" finished-at="2025-09-17T13:56:14 IST" duration-ms="981" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_4.testTestCasesIconOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testTestCasesIconOnLoginPage()[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:56:14 IST" name="testTestCasesIconOnLoginPage" finished-at="2025-09-17T13:56:20 IST" duration-ms="5650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestCasesIconOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_4@614ca7df]" started-at="2025-09-17T13:56:20 IST" name="tearDown" finished-at="2025-09-17T13:56:20 IST" duration-ms="475" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTestCasesIconOnLoginPage status=SUCCESS method=Login_4.testTestCasesIconOnLoginPage()[pri:0, instance:Tests.Login_4@614ca7df] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Login_4 -->
      <class name="Tests.Product_UI_3">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:15:50 IST" name="setUp" finished-at="2025-09-17T13:15:51 IST" duration-ms="973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_3.verifyScrollDownUsingKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDownUsingKeyboard()[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:15:51 IST" name="verifyScrollDownUsingKeyboard" finished-at="2025-09-17T13:16:15 IST" duration-ms="24411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDownUsingKeyboard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:16:15 IST" name="tearDown" finished-at="2025-09-17T13:16:16 IST" duration-ms="382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDownUsingKeyboard status=SUCCESS method=Product_UI_3.verifyScrollDownUsingKeyboard()[pri:0, instance:Tests.Product_UI_3@7fee8714] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:16:16 IST" name="setUp" finished-at="2025-09-17T13:16:17 IST" duration-ms="993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_3.verifyScrollDownUsingMouseClick()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollDownUsingMouseClick()[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:16:17 IST" name="verifyScrollDownUsingMouseClick" finished-at="2025-09-17T13:16:20 IST" duration-ms="2819" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollDownUsingMouseClick -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:16:20 IST" name="tearDown" finished-at="2025-09-17T13:16:20 IST" duration-ms="359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollDownUsingMouseClick status=SUCCESS method=Product_UI_3.verifyScrollDownUsingMouseClick()[pri:0, instance:Tests.Product_UI_3@7fee8714] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:16:20 IST" name="setUp" finished-at="2025-09-17T13:16:21 IST" duration-ms="977" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_3.verifyScrollUpUsingKeyboard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUpUsingKeyboard()[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:16:21 IST" name="verifyScrollUpUsingKeyboard" finished-at="2025-09-17T13:16:26 IST" duration-ms="5037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUpUsingKeyboard -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:16:26 IST" name="tearDown" finished-at="2025-09-17T13:16:26 IST" duration-ms="452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUpUsingKeyboard status=SUCCESS method=Product_UI_3.verifyScrollUpUsingKeyboard()[pri:0, instance:Tests.Product_UI_3@7fee8714] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:16:26 IST" name="setUp" finished-at="2025-09-17T13:16:27 IST" duration-ms="982" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_3.verifyScrollUpUsingMouseClick()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUpUsingMouseClick()[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:16:27 IST" name="verifyScrollUpUsingMouseClick" finished-at="2025-09-17T13:16:33 IST" duration-ms="5670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUpUsingMouseClick -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:16:33 IST" name="tearDown" finished-at="2025-09-17T13:16:33 IST" duration-ms="348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUpUsingMouseClick status=SUCCESS method=Product_UI_3.verifyScrollUpUsingMouseClick()[pri:0, instance:Tests.Product_UI_3@7fee8714] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:16:33 IST" name="setUp" finished-at="2025-09-17T13:16:34 IST" duration-ms="969" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_3.verifyScrollUpUsingMouseScroll()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyScrollUpUsingMouseScroll()[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:16:34 IST" name="verifyScrollUpUsingMouseScroll" finished-at="2025-09-17T13:16:40 IST" duration-ms="5125" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyScrollUpUsingMouseScroll -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_3@7fee8714]" started-at="2025-09-17T13:16:40 IST" name="tearDown" finished-at="2025-09-17T13:16:40 IST" duration-ms="418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyScrollUpUsingMouseScroll status=SUCCESS method=Product_UI_3.verifyScrollUpUsingMouseScroll()[pri:0, instance:Tests.Product_UI_3@7fee8714] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Product_UI_3 -->
      <class name="Tests.Login_5">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:04:50 IST" name="setUp" finished-at="2025-09-17T14:04:51 IST" duration-ms="972" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_5.testApiTestingIconOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testApiTestingIconOnLoginPage()[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:04:51 IST" name="testApiTestingIconOnLoginPage" finished-at="2025-09-17T14:04:57 IST" duration-ms="5620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testApiTestingIconOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:04:57 IST" name="tearDown" finished-at="2025-09-17T14:04:57 IST" duration-ms="415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testApiTestingIconOnLoginPage status=SUCCESS method=Login_5.testApiTestingIconOnLoginPage()[pri:0, instance:Tests.Login_5@58695725] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:04:57 IST" name="setUp" finished-at="2025-09-17T14:04:58 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_5.testAutomationExerciseLogoOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAutomationExerciseLogoOnLoginPage()[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:04:58 IST" name="testAutomationExerciseLogoOnLoginPage" finished-at="2025-09-17T14:05:03 IST" duration-ms="5013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutomationExerciseLogoOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:05:03 IST" name="tearDown" finished-at="2025-09-17T14:05:04 IST" duration-ms="481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAutomationExerciseLogoOnLoginPage status=SUCCESS method=Login_5.testAutomationExerciseLogoOnLoginPage()[pri:0, instance:Tests.Login_5@58695725] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:05:04 IST" name="setUp" finished-at="2025-09-17T14:05:05 IST" duration-ms="957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_5.testContactUsIconOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testContactUsIconOnLoginPage()[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:05:05 IST" name="testContactUsIconOnLoginPage" finished-at="2025-09-17T14:05:10 IST" duration-ms="5658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContactUsIconOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:05:10 IST" name="tearDown" finished-at="2025-09-17T14:05:11 IST" duration-ms="376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testContactUsIconOnLoginPage status=SUCCESS method=Login_5.testContactUsIconOnLoginPage()[pri:0, instance:Tests.Login_5@58695725] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:05:11 IST" name="setUp" finished-at="2025-09-17T14:05:12 IST" duration-ms="970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_5.testSubscriptionEmailEntryFieldOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSubscriptionEmailEntryFieldOnLoginPage()[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:05:12 IST" name="testSubscriptionEmailEntryFieldOnLoginPage" finished-at="2025-09-17T14:05:14 IST" duration-ms="1850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubscriptionEmailEntryFieldOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:05:14 IST" name="tearDown" finished-at="2025-09-17T14:05:14 IST" duration-ms="362" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSubscriptionEmailEntryFieldOnLoginPage status=SUCCESS method=Login_5.testSubscriptionEmailEntryFieldOnLoginPage()[pri:0, instance:Tests.Login_5@58695725] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:05:14 IST" name="setUp" finished-at="2025-09-17T14:05:15 IST" duration-ms="964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_5.testVideoTutorialsIconOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testVideoTutorialsIconOnLoginPage()[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:05:15 IST" name="testVideoTutorialsIconOnLoginPage" finished-at="2025-09-17T14:05:21 IST" duration-ms="6024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVideoTutorialsIconOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_5@58695725]" started-at="2025-09-17T14:05:21 IST" name="tearDown" finished-at="2025-09-17T14:05:22 IST" duration-ms="514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVideoTutorialsIconOnLoginPage status=SUCCESS method=Login_5.testVideoTutorialsIconOnLoginPage()[pri:0, instance:Tests.Login_5@58695725] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Login_5 -->
      <class name="Tests.Product_UI_4">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:21:45 IST" name="setUp" finished-at="2025-09-17T13:21:46 IST" duration-ms="970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_4.verifyCategoryTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCategoryTitle()[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:21:46 IST" name="verifyCategoryTitle" finished-at="2025-09-17T13:21:51 IST" duration-ms="5077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCategoryTitle -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:21:51 IST" name="tearDown" finished-at="2025-09-17T13:21:51 IST" duration-ms="339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCategoryTitle status=SUCCESS method=Product_UI_4.verifyCategoryTitle()[pri:0, instance:Tests.Product_UI_4@35aea049] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:21:51 IST" name="setUp" finished-at="2025-09-17T13:21:52 IST" duration-ms="970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_4.verifyCursorChangeOnKids() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnKids()[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:21:52 IST" name="verifyCursorChangeOnKids" finished-at="2025-09-17T13:21:58 IST" duration-ms="5570" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnKids -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:21:58 IST" name="tearDown" finished-at="2025-09-17T13:21:58 IST" duration-ms="302" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnKids status=SUCCESS method=Product_UI_4.verifyCursorChangeOnKids()[pri:0, instance:Tests.Product_UI_4@35aea049] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:21:58 IST" name="setUp" finished-at="2025-09-17T13:21:59 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_4.verifyCursorChangeOnMen() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnMen()[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:21:59 IST" name="verifyCursorChangeOnMen" finished-at="2025-09-17T13:22:05 IST" duration-ms="5490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnMen -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:22:05 IST" name="tearDown" finished-at="2025-09-17T13:22:05 IST" duration-ms="357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnMen status=SUCCESS method=Product_UI_4.verifyCursorChangeOnMen()[pri:0, instance:Tests.Product_UI_4@35aea049] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:22:05 IST" name="setUp" finished-at="2025-09-17T13:22:06 IST" duration-ms="958" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_4.verifyCursorChangeOnWomen() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnWomen()[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:22:06 IST" name="verifyCursorChangeOnWomen" finished-at="2025-09-17T13:22:12 IST" duration-ms="5710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnWomen -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:22:12 IST" name="tearDown" finished-at="2025-09-17T13:22:12 IST" duration-ms="350" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnWomen status=SUCCESS method=Product_UI_4.verifyCursorChangeOnWomen()[pri:0, instance:Tests.Product_UI_4@35aea049] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:22:12 IST" name="setUp" finished-at="2025-09-17T13:22:13 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_4.verifySpecialOfferLogo()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifySpecialOfferLogo()[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:22:13 IST" name="verifySpecialOfferLogo" finished-at="2025-09-17T13:22:17 IST" duration-ms="4345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySpecialOfferLogo -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_4@35aea049]" started-at="2025-09-17T13:22:17 IST" name="tearDown" finished-at="2025-09-17T13:22:18 IST" duration-ms="337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySpecialOfferLogo status=SUCCESS method=Product_UI_4.verifySpecialOfferLogo()[pri:0, instance:Tests.Product_UI_4@35aea049] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Product_UI_4 -->
      <class name="Tests.Login_6">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:22 IST" name="setUp" finished-at="2025-09-17T14:05:22 IST" duration-ms="959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_6.testScrollDownUsingKeyboardOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScrollDownUsingKeyboardOnLoginPage()[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:22 IST" name="testScrollDownUsingKeyboardOnLoginPage" finished-at="2025-09-17T14:05:25 IST" duration-ms="2398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollDownUsingKeyboardOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:25 IST" name="tearDown" finished-at="2025-09-17T14:05:25 IST" duration-ms="325" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollDownUsingKeyboardOnLoginPage status=SUCCESS method=Login_6.testScrollDownUsingKeyboardOnLoginPage()[pri:0, instance:Tests.Login_6@543588e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:25 IST" name="setUp" finished-at="2025-09-17T14:05:26 IST" duration-ms="962" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_6.testScrollDownUsingMouseClickOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScrollDownUsingMouseClickOnLoginPage()[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:26 IST" name="testScrollDownUsingMouseClickOnLoginPage" finished-at="2025-09-17T14:05:28 IST" duration-ms="1928" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollDownUsingMouseClickOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:28 IST" name="tearDown" finished-at="2025-09-17T14:05:28 IST" duration-ms="317" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollDownUsingMouseClickOnLoginPage status=SUCCESS method=Login_6.testScrollDownUsingMouseClickOnLoginPage()[pri:0, instance:Tests.Login_6@543588e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:28 IST" name="setUp" finished-at="2025-09-17T14:05:29 IST" duration-ms="1001" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_6.testScrollDownUsingMouseScrollOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScrollDownUsingMouseScrollOnLoginPage()[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:29 IST" name="testScrollDownUsingMouseScrollOnLoginPage" finished-at="2025-09-17T14:05:32 IST" duration-ms="2738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollDownUsingMouseScrollOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:32 IST" name="tearDown" finished-at="2025-09-17T14:05:32 IST" duration-ms="331" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollDownUsingMouseScrollOnLoginPage status=SUCCESS method=Login_6.testScrollDownUsingMouseScrollOnLoginPage()[pri:0, instance:Tests.Login_6@543588e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:32 IST" name="setUp" finished-at="2025-09-17T14:05:33 IST" duration-ms="964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_6.testScrollUpUsingKeyboardOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScrollUpUsingKeyboardOnLoginPage()[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:33 IST" name="testScrollUpUsingKeyboardOnLoginPage" finished-at="2025-09-17T14:05:35 IST" duration-ms="1818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollUpUsingKeyboardOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:35 IST" name="tearDown" finished-at="2025-09-17T14:05:36 IST" duration-ms="307" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollUpUsingKeyboardOnLoginPage status=SUCCESS method=Login_6.testScrollUpUsingKeyboardOnLoginPage()[pri:0, instance:Tests.Login_6@543588e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:36 IST" name="setUp" finished-at="2025-09-17T14:05:37 IST" duration-ms="988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_6.testScrollUpUsingMouseClickOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScrollUpUsingMouseClickOnLoginPage()[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:37 IST" name="testScrollUpUsingMouseClickOnLoginPage" finished-at="2025-09-17T14:05:38 IST" duration-ms="1764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollUpUsingMouseClickOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:38 IST" name="tearDown" finished-at="2025-09-17T14:05:39 IST" duration-ms="326" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollUpUsingMouseClickOnLoginPage status=SUCCESS method=Login_6.testScrollUpUsingMouseClickOnLoginPage()[pri:0, instance:Tests.Login_6@543588e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:39 IST" name="setUp" finished-at="2025-09-17T14:05:40 IST" duration-ms="967" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Login_6.testScrollUpUsingMouseScrollOnLoginPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testScrollUpUsingMouseScrollOnLoginPage()[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:40 IST" name="testScrollUpUsingMouseScrollOnLoginPage" finished-at="2025-09-17T14:05:42 IST" duration-ms="2629" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testScrollUpUsingMouseScrollOnLoginPage -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Login_6@543588e6]" started-at="2025-09-17T14:05:42 IST" name="tearDown" finished-at="2025-09-17T14:05:43 IST" duration-ms="299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testScrollUpUsingMouseScrollOnLoginPage status=SUCCESS method=Login_6.testScrollUpUsingMouseScrollOnLoginPage()[pri:0, instance:Tests.Login_6@543588e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Login_6 -->
      <class name="Tests.Product_UI_5">
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:22:18 IST" name="setUp" finished-at="2025-09-17T13:22:19 IST" duration-ms="965" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_5.verifyAllProductsTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyAllProductsTitle()[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:22:19 IST" name="verifyAllProductsTitle" finished-at="2025-09-17T13:22:24 IST" duration-ms="5038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllProductsTitle -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:22:24 IST" name="tearDown" finished-at="2025-09-17T13:22:24 IST" duration-ms="351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAllProductsTitle status=SUCCESS method=Product_UI_5.verifyAllProductsTitle()[pri:0, instance:Tests.Product_UI_5@7205765b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:22:24 IST" name="setUp" finished-at="2025-09-17T13:22:25 IST" duration-ms="955" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_5.verifyBrandsTitle()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBrandsTitle()[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:22:25 IST" name="verifyBrandsTitle" finished-at="2025-09-17T13:22:29 IST" duration-ms="4392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBrandsTitle -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:22:29 IST" name="tearDown" finished-at="2025-09-17T13:22:30 IST" duration-ms="713" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyBrandsTitle status=SUCCESS method=Product_UI_5.verifyBrandsTitle()[pri:0, instance:Tests.Product_UI_5@7205765b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:22:30 IST" name="setUp" finished-at="2025-09-17T13:22:32 IST" duration-ms="1361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_5.verifyCursorChangeOnKids() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnKids()[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:22:32 IST" name="verifyCursorChangeOnKids" finished-at="2025-09-17T13:22:57 IST" duration-ms="25015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnKids -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:22:57 IST" name="tearDown" finished-at="2025-09-17T13:22:57 IST" duration-ms="339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnKids status=SUCCESS method=Product_UI_5.verifyCursorChangeOnKids()[pri:0, instance:Tests.Product_UI_5@7205765b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:22:57 IST" name="setUp" finished-at="2025-09-17T13:22:58 IST" duration-ms="953" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_5.verifyCursorChangeOnMen() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnMen()[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:22:58 IST" name="verifyCursorChangeOnMen" finished-at="2025-09-17T13:23:04 IST" duration-ms="5919" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnMen -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:23:04 IST" name="tearDown" finished-at="2025-09-17T13:23:04 IST" duration-ms="338" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnMen status=SUCCESS method=Product_UI_5.verifyCursorChangeOnMen()[pri:0, instance:Tests.Product_UI_5@7205765b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String,java.lang.reflect.Method)[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:23:04 IST" name="setUp" finished-at="2025-09-17T13:23:05 IST" duration-ms="970" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tests.Product_UI_5.verifyCursorChangeOnWomen() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyCursorChangeOnWomen()[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:23:05 IST" name="verifyCursorChangeOnWomen" finished-at="2025-09-17T13:23:11 IST" duration-ms="5780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCursorChangeOnWomen -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:Tests.Product_UI_5@7205765b]" started-at="2025-09-17T13:23:11 IST" name="tearDown" finished-at="2025-09-17T13:23:11 IST" duration-ms="336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyCursorChangeOnWomen status=SUCCESS method=Product_UI_5.verifyCursorChangeOnWomen()[pri:0, instance:Tests.Product_UI_5@7205765b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.Product_UI_5 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
